{"version":3,"file":"index-CTvk_x_g.js","sources":["../../node_modules/solid-js/dist/solid.js","../../node_modules/solid-js/web/dist/web.js","../../src/components/Static/StaticElements.tsx","../../src/components/Static/StaticDefs.tsx","../../src/components/Rotameter/Rotameter.tsx","../../src/ts/helpers.ts","../../src/ts/calcs.ts","../../src/components/Kettle/KettleLogic.tsx","../../src/components/Boils/Boils.tsx","../../src/components/Steam/Steam.tsx","../../src/components/Kettle/Kettle.tsx","../../src/components/Display/Display.tsx","../../src/components/Waterfall/Waterfall.tsx","../../src/components/Gauge/Gauge.tsx","../../src/components/BallValve/BallValve.tsx","../../src/components/GlobeValve/GlobeValve.tsx","../../src/components/BeakerSystem/Beaker.tsx","../../src/components/BeakerSystem/Scale.tsx","../../src/components/BeakerSystem/BeakerSystem.tsx","../../src/components/PRegulator/PRegulator.tsx","../../src/components/Apparatus.tsx","../../src/components/Modal/Modal.tsx","../../src/components/Hamburger/Hamburger.tsx","../../src/media/Kettle-Boiler-Worksheet.pdf","../../src/components/Modal/modals.tsx","../../src/App.tsx","../../src/index.tsx"],"sourcesContent":["let taskIdCounter = 1,\n  isCallbackScheduled = false,\n  isPerformingWork = false,\n  taskQueue = [],\n  currentTask = null,\n  shouldYieldToHost = null,\n  yieldInterval = 5,\n  deadline = 0,\n  maxYieldInterval = 300,\n  maxDeadline = 0,\n  scheduleCallback = null,\n  scheduledCallback = null;\nconst maxSigned31BitInt = 1073741823;\nfunction setupScheduler() {\n  const channel = new MessageChannel(),\n    port = channel.port2;\n  scheduleCallback = () => port.postMessage(null);\n  channel.port1.onmessage = () => {\n    if (scheduledCallback !== null) {\n      const currentTime = performance.now();\n      deadline = currentTime + yieldInterval;\n      maxDeadline = currentTime + maxYieldInterval;\n      try {\n        const hasMoreWork = scheduledCallback(currentTime);\n        if (!hasMoreWork) {\n          scheduledCallback = null;\n        } else port.postMessage(null);\n      } catch (error) {\n        port.postMessage(null);\n        throw error;\n      }\n    }\n  };\n  if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\n    const scheduling = navigator.scheduling;\n    shouldYieldToHost = () => {\n      const currentTime = performance.now();\n      if (currentTime >= deadline) {\n        if (scheduling.isInputPending()) {\n          return true;\n        }\n        return currentTime >= maxDeadline;\n      } else {\n        return false;\n      }\n    };\n  } else {\n    shouldYieldToHost = () => performance.now() >= deadline;\n  }\n}\nfunction enqueue(taskQueue, task) {\n  function findIndex() {\n    let m = 0;\n    let n = taskQueue.length - 1;\n    while (m <= n) {\n      const k = n + m >> 1;\n      const cmp = task.expirationTime - taskQueue[k].expirationTime;\n      if (cmp > 0) m = k + 1;else if (cmp < 0) n = k - 1;else return k;\n    }\n    return m;\n  }\n  taskQueue.splice(findIndex(), 0, task);\n}\nfunction requestCallback(fn, options) {\n  if (!scheduleCallback) setupScheduler();\n  let startTime = performance.now(),\n    timeout = maxSigned31BitInt;\n  if (options && options.timeout) timeout = options.timeout;\n  const newTask = {\n    id: taskIdCounter++,\n    fn,\n    startTime,\n    expirationTime: startTime + timeout\n  };\n  enqueue(taskQueue, newTask);\n  if (!isCallbackScheduled && !isPerformingWork) {\n    isCallbackScheduled = true;\n    scheduledCallback = flushWork;\n    scheduleCallback();\n  }\n  return newTask;\n}\nfunction cancelCallback(task) {\n  task.fn = null;\n}\nfunction flushWork(initialTime) {\n  isCallbackScheduled = false;\n  isPerformingWork = true;\n  try {\n    return workLoop(initialTime);\n  } finally {\n    currentTask = null;\n    isPerformingWork = false;\n  }\n}\nfunction workLoop(initialTime) {\n  let currentTime = initialTime;\n  currentTask = taskQueue[0] || null;\n  while (currentTask !== null) {\n    if (currentTask.expirationTime > currentTime && shouldYieldToHost()) {\n      break;\n    }\n    const callback = currentTask.fn;\n    if (callback !== null) {\n      currentTask.fn = null;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      callback(didUserCallbackTimeout);\n      currentTime = performance.now();\n      if (currentTask === taskQueue[0]) {\n        taskQueue.shift();\n      }\n    } else taskQueue.shift();\n    currentTask = taskQueue[0] || null;\n  }\n  return currentTask !== null;\n}\n\nconst sharedConfig = {\n  context: undefined,\n  registry: undefined,\n  effects: undefined,\n  done: false,\n  getContextId() {\n    return getContextId(this.context.count);\n  },\n  getNextContextId() {\n    return getContextId(this.context.count++);\n  }\n};\nfunction getContextId(count) {\n  const num = String(count),\n    len = num.length - 1;\n  return sharedConfig.context.id + (len ? String.fromCharCode(96 + len) : \"\") + num;\n}\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nfunction nextHydrateContext() {\n  return {\n    ...sharedConfig.context,\n    id: sharedConfig.getNextContextId(),\n    count: 0\n  };\n}\n\nconst IS_DEV = false;\nconst equalFn = (a, b) => a === b;\nconst $PROXY = Symbol(\"solid-proxy\");\nconst SUPPORTS_PROXY = typeof Proxy === \"function\";\nconst $TRACK = Symbol(\"solid-track\");\nconst $DEVCOMP = Symbol(\"solid-dev-component\");\nconst signalOptions = {\n  equals: equalFn\n};\nlet ERROR = null;\nlet runEffects = runQueue;\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst NO_INIT = {};\nvar Owner = null;\nlet Transition = null;\nlet Scheduler = null;\nlet ExternalSourceConfig = null;\nlet Listener = null;\nlet Updates = null;\nlet Effects = null;\nlet ExecCount = 0;\nfunction createRoot(fn, detachedOwner) {\n  const listener = Listener,\n    owner = Owner,\n    unowned = fn.length === 0,\n    current = detachedOwner === undefined ? owner : detachedOwner,\n    root = unowned ? UNOWNED : {\n      owned: null,\n      cleanups: null,\n      context: current ? current.context : null,\n      owner: current\n    },\n    updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));\n  Owner = root;\n  Listener = null;\n  try {\n    return runUpdates(updateFn, true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n}\nfunction createSignal(value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const s = {\n    value,\n    observers: null,\n    observerSlots: null,\n    comparator: options.equals || undefined\n  };\n  const setter = value => {\n    if (typeof value === \"function\") {\n      if (Transition && Transition.running && Transition.sources.has(s)) value = value(s.tValue);else value = value(s.value);\n    }\n    return writeSignal(s, value);\n  };\n  return [readSignal.bind(s), setter];\n}\nfunction createComputed(fn, value, options) {\n  const c = createComputation(fn, value, true, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createRenderEffect(fn, value, options) {\n  const c = createComputation(fn, value, false, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createEffect(fn, value, options) {\n  runEffects = runUserEffects;\n  const c = createComputation(fn, value, false, STALE),\n    s = SuspenseContext && useContext(SuspenseContext);\n  if (s) c.suspense = s;\n  if (!options || !options.render) c.user = true;\n  Effects ? Effects.push(c) : updateComputation(c);\n}\nfunction createReaction(onInvalidate, options) {\n  let fn;\n  const c = createComputation(() => {\n      fn ? fn() : untrack(onInvalidate);\n      fn = undefined;\n    }, undefined, false, 0),\n    s = SuspenseContext && useContext(SuspenseContext);\n  if (s) c.suspense = s;\n  c.user = true;\n  return tracking => {\n    fn = tracking;\n    updateComputation(c);\n  };\n}\nfunction createMemo(fn, value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const c = createComputation(fn, value, true, 0);\n  c.observers = null;\n  c.observerSlots = null;\n  c.comparator = options.equals || undefined;\n  if (Scheduler && Transition && Transition.running) {\n    c.tState = STALE;\n    Updates.push(c);\n  } else updateComputation(c);\n  return readSignal.bind(c);\n}\nfunction isPromise(v) {\n  return v && typeof v === \"object\" && \"then\" in v;\n}\nfunction createResource(pSource, pFetcher, pOptions) {\n  let source;\n  let fetcher;\n  let options;\n  if (typeof pFetcher === \"function\") {\n    source = pSource;\n    fetcher = pFetcher;\n    options = pOptions || {};\n  } else {\n    source = true;\n    fetcher = pSource;\n    options = pFetcher || {};\n  }\n  let pr = null,\n    initP = NO_INIT,\n    id = null,\n    loadedUnderTransition = false,\n    scheduled = false,\n    resolved = \"initialValue\" in options,\n    dynamic = typeof source === \"function\" && createMemo(source);\n  const contexts = new Set(),\n    [value, setValue] = (options.storage || createSignal)(options.initialValue),\n    [error, setError] = createSignal(undefined),\n    [track, trigger] = createSignal(undefined, {\n      equals: false\n    }),\n    [state, setState] = createSignal(resolved ? \"ready\" : \"unresolved\");\n  if (sharedConfig.context) {\n    id = sharedConfig.getNextContextId();\n    if (options.ssrLoadFrom === \"initial\") initP = options.initialValue;else if (sharedConfig.load && sharedConfig.has(id)) initP = sharedConfig.load(id);\n  }\n  function loadEnd(p, v, error, key) {\n    if (pr === p) {\n      pr = null;\n      key !== undefined && (resolved = true);\n      if ((p === initP || v === initP) && options.onHydrated) queueMicrotask(() => options.onHydrated(key, {\n        value: v\n      }));\n      initP = NO_INIT;\n      if (Transition && p && loadedUnderTransition) {\n        Transition.promises.delete(p);\n        loadedUnderTransition = false;\n        runUpdates(() => {\n          Transition.running = true;\n          completeLoad(v, error);\n        }, false);\n      } else completeLoad(v, error);\n    }\n    return v;\n  }\n  function completeLoad(v, err) {\n    runUpdates(() => {\n      if (err === undefined) setValue(() => v);\n      setState(err !== undefined ? \"errored\" : resolved ? \"ready\" : \"unresolved\");\n      setError(err);\n      for (const c of contexts.keys()) c.decrement();\n      contexts.clear();\n    }, false);\n  }\n  function read() {\n    const c = SuspenseContext && useContext(SuspenseContext),\n      v = value(),\n      err = error();\n    if (err !== undefined && !pr) throw err;\n    if (Listener && !Listener.user && c) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c.resolved && Transition && loadedUnderTransition) Transition.promises.add(pr);else if (!contexts.has(c)) {\n            c.increment();\n            contexts.add(c);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load(refetching = true) {\n    if (refetching !== false && scheduled) return;\n    scheduled = false;\n    const lookup = dynamic ? dynamic() : source;\n    loadedUnderTransition = Transition && Transition.running;\n    if (lookup == null || lookup === false) {\n      loadEnd(pr, untrack(value));\n      return;\n    }\n    if (Transition && pr) Transition.promises.delete(pr);\n    let error;\n    const p = initP !== NO_INIT ? initP : untrack(() => {\n      try {\n        return fetcher(lookup, {\n          value: value(),\n          refetching\n        });\n      } catch (fetcherError) {\n        error = fetcherError;\n      }\n    });\n    if (error !== undefined) {\n      loadEnd(pr, undefined, castError(error), lookup);\n      return;\n    } else if (!isPromise(p)) {\n      loadEnd(pr, p, undefined, lookup);\n      return p;\n    }\n    pr = p;\n    if (\"v\" in p) {\n      if (p.s === 1) loadEnd(pr, p.v, undefined, lookup);else loadEnd(pr, undefined, castError(p.v), lookup);\n      return p;\n    }\n    scheduled = true;\n    queueMicrotask(() => scheduled = false);\n    runUpdates(() => {\n      setState(resolved ? \"refreshing\" : \"pending\");\n      trigger();\n    }, false);\n    return p.then(v => loadEnd(p, v, undefined, lookup), e => loadEnd(p, undefined, castError(e), lookup));\n  }\n  Object.defineProperties(read, {\n    state: {\n      get: () => state()\n    },\n    error: {\n      get: () => error()\n    },\n    loading: {\n      get() {\n        const s = state();\n        return s === \"pending\" || s === \"refreshing\";\n      }\n    },\n    latest: {\n      get() {\n        if (!resolved) return read();\n        const err = error();\n        if (err && !pr) throw err;\n        return value();\n      }\n    }\n  });\n  let owner = Owner;\n  if (dynamic) createComputed(() => (owner = Owner, load(false)));else load(false);\n  return [read, {\n    refetch: info => runWithOwner(owner, () => load(info)),\n    mutate: setValue\n  }];\n}\nfunction createDeferred(source, options) {\n  let t,\n    timeout = options ? options.timeoutMs : undefined;\n  const node = createComputation(() => {\n    if (!t || !t.fn) t = requestCallback(() => setDeferred(() => node.value), timeout !== undefined ? {\n      timeout\n    } : undefined);\n    return source();\n  }, undefined, true);\n  const [deferred, setDeferred] = createSignal(Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value, options);\n  updateComputation(node);\n  setDeferred(() => Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value);\n  return deferred;\n}\nfunction createSelector(source, fn = equalFn, options) {\n  const subs = new Map();\n  const node = createComputation(p => {\n    const v = source();\n    for (const [key, val] of subs.entries()) if (fn(key, v) !== fn(key, p)) {\n      for (const c of val.values()) {\n        c.state = STALE;\n        if (c.pure) Updates.push(c);else Effects.push(c);\n      }\n    }\n    return v;\n  }, undefined, true, STALE);\n  updateComputation(node);\n  return key => {\n    const listener = Listener;\n    if (listener) {\n      let l;\n      if (l = subs.get(key)) l.add(listener);else subs.set(key, l = new Set([listener]));\n      onCleanup(() => {\n        l.delete(listener);\n        !l.size && subs.delete(key);\n      });\n    }\n    return fn(key, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value);\n  };\n}\nfunction batch(fn) {\n  return runUpdates(fn, false);\n}\nfunction untrack(fn) {\n  if (!ExternalSourceConfig && Listener === null) return fn();\n  const listener = Listener;\n  Listener = null;\n  try {\n    if (ExternalSourceConfig) return ExternalSourceConfig.untrack(fn);\n    return fn();\n  } finally {\n    Listener = listener;\n  }\n}\nfunction on(deps, fn, options) {\n  const isArray = Array.isArray(deps);\n  let prevInput;\n  let defer = options && options.defer;\n  return prevValue => {\n    let input;\n    if (isArray) {\n      input = Array(deps.length);\n      for (let i = 0; i < deps.length; i++) input[i] = deps[i]();\n    } else input = deps();\n    if (defer) {\n      defer = false;\n      return prevValue;\n    }\n    const result = untrack(() => fn(input, prevInput, prevValue));\n    prevInput = input;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null) ;else if (Owner.cleanups === null) Owner.cleanups = [fn];else Owner.cleanups.push(fn);\n  return fn;\n}\nfunction catchError(fn, handler) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  Owner = createComputation(undefined, undefined, true);\n  Owner.context = {\n    ...Owner.context,\n    [ERROR]: [handler]\n  };\n  if (Transition && Transition.running) Transition.sources.add(Owner);\n  try {\n    return fn();\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = Owner.owner;\n  }\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction runWithOwner(o, fn) {\n  const prev = Owner;\n  const prevListener = Listener;\n  Owner = o;\n  Listener = null;\n  try {\n    return runUpdates(fn, true);\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = prev;\n    Listener = prevListener;\n  }\n}\nfunction enableScheduling(scheduler = requestCallback) {\n  Scheduler = scheduler;\n}\nfunction startTransition(fn) {\n  if (Transition && Transition.running) {\n    fn();\n    return Transition.done;\n  }\n  const l = Listener;\n  const o = Owner;\n  return Promise.resolve().then(() => {\n    Listener = l;\n    Owner = o;\n    let t;\n    if (Scheduler || SuspenseContext) {\n      t = Transition || (Transition = {\n        sources: new Set(),\n        effects: [],\n        promises: new Set(),\n        disposed: new Set(),\n        queue: new Set(),\n        running: true\n      });\n      t.done || (t.done = new Promise(res => t.resolve = res));\n      t.running = true;\n    }\n    runUpdates(fn, false);\n    Listener = Owner = null;\n    return t ? t.done : undefined;\n  });\n}\nconst [transPending, setTransPending] = /*@__PURE__*/createSignal(false);\nfunction useTransition() {\n  return [transPending, startTransition];\n}\nfunction resumeEffects(e) {\n  Effects.push.apply(Effects, e);\n  e.length = 0;\n}\nfunction createContext(defaultValue, options) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  let value;\n  return Owner && Owner.context && (value = Owner.context[context.id]) !== undefined ? value : context.defaultValue;\n}\nfunction children(fn) {\n  const children = createMemo(fn);\n  const memo = createMemo(() => resolveChildren(children()));\n  memo.toArray = () => {\n    const c = memo();\n    return Array.isArray(c) ? c : c != null ? [c] : [];\n  };\n  return memo;\n}\nlet SuspenseContext;\nfunction getSuspenseContext() {\n  return SuspenseContext || (SuspenseContext = createContext());\n}\nfunction enableExternalSource(factory, untrack = fn => fn()) {\n  if (ExternalSourceConfig) {\n    const {\n      factory: oldFactory,\n      untrack: oldUntrack\n    } = ExternalSourceConfig;\n    ExternalSourceConfig = {\n      factory: (fn, trigger) => {\n        const oldSource = oldFactory(fn, trigger);\n        const source = factory(x => oldSource.track(x), trigger);\n        return {\n          track: x => source.track(x),\n          dispose() {\n            source.dispose();\n            oldSource.dispose();\n          }\n        };\n      },\n      untrack: fn => oldUntrack(() => untrack(fn))\n    };\n  } else {\n    ExternalSourceConfig = {\n      factory,\n      untrack\n    };\n  }\n}\nfunction readSignal() {\n  const runningTransition = Transition && Transition.running;\n  if (this.sources && (runningTransition ? this.tState : this.state)) {\n    if ((runningTransition ? this.tState : this.state) === STALE) updateComputation(this);else {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(this), false);\n      Updates = updates;\n    }\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  if (runningTransition && Transition.sources.has(this)) return this.tValue;\n  return this.value;\n}\nfunction writeSignal(node, value, isComp) {\n  let current = Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value;\n  if (!node.comparator || !node.comparator(current, value)) {\n    if (Transition) {\n      const TransitionRunning = Transition.running;\n      if (TransitionRunning || !isComp && Transition.sources.has(node)) {\n        Transition.sources.add(node);\n        node.tValue = value;\n      }\n      if (!TransitionRunning) node.value = value;\n    } else node.value = value;\n    if (node.observers && node.observers.length) {\n      runUpdates(() => {\n        for (let i = 0; i < node.observers.length; i += 1) {\n          const o = node.observers[i];\n          const TransitionRunning = Transition && Transition.running;\n          if (TransitionRunning && Transition.disposed.has(o)) continue;\n          if (TransitionRunning ? !o.tState : !o.state) {\n            if (o.pure) Updates.push(o);else Effects.push(o);\n            if (o.observers) markDownstream(o);\n          }\n          if (!TransitionRunning) o.state = STALE;else o.tState = STALE;\n        }\n        if (Updates.length > 10e5) {\n          Updates = [];\n          if (IS_DEV) ;\n          throw new Error();\n        }\n      }, false);\n    }\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn) return;\n  cleanNode(node);\n  const time = ExecCount;\n  runComputation(node, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value, time);\n  if (Transition && !Transition.running && Transition.sources.has(node)) {\n    queueMicrotask(() => {\n      runUpdates(() => {\n        Transition && (Transition.running = true);\n        Listener = Owner = node;\n        runComputation(node, node.tValue, time);\n        Listener = Owner = null;\n      }, false);\n    });\n  }\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  const owner = Owner,\n    listener = Listener;\n  Listener = Owner = node;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    if (node.pure) {\n      if (Transition && Transition.running) {\n        node.tState = STALE;\n        node.tOwned && node.tOwned.forEach(cleanNode);\n        node.tOwned = undefined;\n      } else {\n        node.state = STALE;\n        node.owned && node.owned.forEach(cleanNode);\n        node.owned = null;\n      }\n    }\n    node.updatedAt = time + 1;\n    return handleError(err);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.updatedAt != null && \"observers\" in node) {\n      writeSignal(node, nextValue, true);\n    } else if (Transition && Transition.running && node.pure) {\n      Transition.sources.add(node);\n      node.tValue = nextValue;\n    } else node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure, state = STALE, options) {\n  const c = {\n    fn,\n    state: state,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: Owner ? Owner.context : null,\n    pure\n  };\n  if (Transition && Transition.running) {\n    c.state = 0;\n    c.tState = state;\n  }\n  if (Owner === null) ;else if (Owner !== UNOWNED) {\n    if (Transition && Transition.running && Owner.pure) {\n      if (!Owner.tOwned) Owner.tOwned = [c];else Owner.tOwned.push(c);\n    } else {\n      if (!Owner.owned) Owner.owned = [c];else Owner.owned.push(c);\n    }\n  }\n  if (ExternalSourceConfig && c.fn) {\n    const [track, trigger] = createSignal(undefined, {\n      equals: false\n    });\n    const ordinary = ExternalSourceConfig.factory(c.fn, trigger);\n    onCleanup(() => ordinary.dispose());\n    const triggerInTransition = () => startTransition(trigger).then(() => inTransition.dispose());\n    const inTransition = ExternalSourceConfig.factory(c.fn, triggerInTransition);\n    c.fn = x => {\n      track();\n      return Transition && Transition.running ? inTransition.track(x) : ordinary.track(x);\n    };\n  }\n  return c;\n}\nfunction runTop(node) {\n  const runningTransition = Transition && Transition.running;\n  if ((runningTransition ? node.tState : node.state) === 0) return;\n  if ((runningTransition ? node.tState : node.state) === PENDING) return lookUpstream(node);\n  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);\n  const ancestors = [node];\n  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {\n    if (runningTransition && Transition.disposed.has(node)) return;\n    if (runningTransition ? node.tState : node.state) ancestors.push(node);\n  }\n  for (let i = ancestors.length - 1; i >= 0; i--) {\n    node = ancestors[i];\n    if (runningTransition) {\n      let top = node,\n        prev = ancestors[i + 1];\n      while ((top = top.owner) && top !== prev) {\n        if (Transition.disposed.has(top)) return;\n      }\n    }\n    if ((runningTransition ? node.tState : node.state) === STALE) {\n      updateComputation(node);\n    } else if ((runningTransition ? node.tState : node.state) === PENDING) {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(node, ancestors[0]), false);\n      Updates = updates;\n    }\n  }\n}\nfunction runUpdates(fn, init) {\n  if (Updates) return fn();\n  let wait = false;\n  if (!init) Updates = [];\n  if (Effects) wait = true;else Effects = [];\n  ExecCount++;\n  try {\n    const res = fn();\n    completeUpdates(wait);\n    return res;\n  } catch (err) {\n    if (!wait) Effects = null;\n    Updates = null;\n    handleError(err);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    if (Scheduler && Transition && Transition.running) scheduleQueue(Updates);else runQueue(Updates);\n    Updates = null;\n  }\n  if (wait) return;\n  let res;\n  if (Transition) {\n    if (!Transition.promises.size && !Transition.queue.size) {\n      const sources = Transition.sources;\n      const disposed = Transition.disposed;\n      Effects.push.apply(Effects, Transition.effects);\n      res = Transition.resolve;\n      for (const e of Effects) {\n        \"tState\" in e && (e.state = e.tState);\n        delete e.tState;\n      }\n      Transition = null;\n      runUpdates(() => {\n        for (const d of disposed) cleanNode(d);\n        for (const v of sources) {\n          v.value = v.tValue;\n          if (v.owned) {\n            for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);\n          }\n          if (v.tOwned) v.owned = v.tOwned;\n          delete v.tValue;\n          delete v.tOwned;\n          v.tState = 0;\n        }\n        setTransPending(false);\n      }, false);\n    } else if (Transition.running) {\n      Transition.running = false;\n      Transition.effects.push.apply(Transition.effects, Effects);\n      Effects = null;\n      setTransPending(true);\n      return;\n    }\n  }\n  const e = Effects;\n  Effects = null;\n  if (e.length) runUpdates(() => runEffects(e), false);\n  if (res) res();\n}\nfunction runQueue(queue) {\n  for (let i = 0; i < queue.length; i++) runTop(queue[i]);\n}\nfunction scheduleQueue(queue) {\n  for (let i = 0; i < queue.length; i++) {\n    const item = queue[i];\n    const tasks = Transition.queue;\n    if (!tasks.has(item)) {\n      tasks.add(item);\n      Scheduler(() => {\n        tasks.delete(item);\n        runUpdates(() => {\n          Transition.running = true;\n          runTop(item);\n        }, false);\n        Transition && (Transition.running = false);\n      });\n    }\n  }\n}\nfunction runUserEffects(queue) {\n  let i,\n    userLength = 0;\n  for (i = 0; i < queue.length; i++) {\n    const e = queue[i];\n    if (!e.user) runTop(e);else queue[userLength++] = e;\n  }\n  if (sharedConfig.context) {\n    if (sharedConfig.count) {\n      sharedConfig.effects || (sharedConfig.effects = []);\n      sharedConfig.effects.push(...queue.slice(0, userLength));\n      return;\n    }\n    setHydrateContext();\n  }\n  if (sharedConfig.effects && (sharedConfig.done || !sharedConfig.count)) {\n    queue = [...sharedConfig.effects, ...queue];\n    userLength += sharedConfig.effects.length;\n    delete sharedConfig.effects;\n  }\n  for (i = 0; i < userLength; i++) runTop(queue[i]);\n}\nfunction lookUpstream(node, ignore) {\n  const runningTransition = Transition && Transition.running;\n  if (runningTransition) node.tState = 0;else node.state = 0;\n  for (let i = 0; i < node.sources.length; i += 1) {\n    const source = node.sources[i];\n    if (source.sources) {\n      const state = runningTransition ? source.tState : source.state;\n      if (state === STALE) {\n        if (source !== ignore && (!source.updatedAt || source.updatedAt < ExecCount)) runTop(source);\n      } else if (state === PENDING) lookUpstream(source, ignore);\n    }\n  }\n}\nfunction markDownstream(node) {\n  const runningTransition = Transition && Transition.running;\n  for (let i = 0; i < node.observers.length; i += 1) {\n    const o = node.observers[i];\n    if (runningTransition ? !o.tState : !o.state) {\n      if (runningTransition) o.tState = PENDING;else o.state = PENDING;\n      if (o.pure) Updates.push(o);else Effects.push(o);\n      o.observers && markDownstream(o);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(),\n        index = node.sourceSlots.pop(),\n        obs = source.observers;\n      if (obs && obs.length) {\n        const n = obs.pop(),\n          s = source.observerSlots.pop();\n        if (index < obs.length) {\n          n.sourceSlots[s] = index;\n          obs[index] = n;\n          source.observerSlots[index] = s;\n        }\n      }\n    }\n  }\n  if (node.tOwned) {\n    for (i = node.tOwned.length - 1; i >= 0; i--) cleanNode(node.tOwned[i]);\n    delete node.tOwned;\n  }\n  if (Transition && Transition.running && node.pure) {\n    reset(node, true);\n  } else if (node.owned) {\n    for (i = node.owned.length - 1; i >= 0; i--) cleanNode(node.owned[i]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i = node.cleanups.length - 1; i >= 0; i--) node.cleanups[i]();\n    node.cleanups = null;\n  }\n  if (Transition && Transition.running) node.tState = 0;else node.state = 0;\n}\nfunction reset(node, top) {\n  if (!top) {\n    node.tState = 0;\n    Transition.disposed.add(node);\n  }\n  if (node.owned) {\n    for (let i = 0; i < node.owned.length; i++) reset(node.owned[i]);\n  }\n}\nfunction castError(err) {\n  if (err instanceof Error) return err;\n  return new Error(typeof err === \"string\" ? err : \"Unknown error\", {\n    cause: err\n  });\n}\nfunction runErrors(err, fns, owner) {\n  try {\n    for (const f of fns) f(err);\n  } catch (e) {\n    handleError(e, owner && owner.owner || null);\n  }\n}\nfunction handleError(err, owner = Owner) {\n  const fns = ERROR && owner && owner.context && owner.context[ERROR];\n  const error = castError(err);\n  if (!fns) throw error;\n  if (Effects) Effects.push({\n    fn() {\n      runErrors(error, fns, owner);\n    },\n    state: STALE\n  });else runErrors(error, fns, owner);\n}\nfunction resolveChildren(children) {\n  if (typeof children === \"function\" && !children.length) return resolveChildren(children());\n  if (Array.isArray(children)) {\n    const results = [];\n    for (let i = 0; i < children.length; i++) {\n      const result = resolveChildren(children[i]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children;\n}\nfunction createProvider(id, options) {\n  return function provider(props) {\n    let res;\n    createRenderEffect(() => res = untrack(() => {\n      Owner.context = {\n        ...Owner.context,\n        [id]: props.value\n      };\n      return children(() => props.children);\n    }), undefined);\n    return res;\n  };\n}\nfunction onError(fn) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  if (Owner === null) ;else if (Owner.context === null || !Owner.context[ERROR]) {\n    Owner.context = {\n      ...Owner.context,\n      [ERROR]: [fn]\n    };\n    mutateContext(Owner, ERROR, [fn]);\n  } else Owner.context[ERROR].push(fn);\n}\nfunction mutateContext(o, key, value) {\n  if (o.owned) {\n    for (let i = 0; i < o.owned.length; i++) {\n      if (o.owned[i].context === o.context) mutateContext(o.owned[i], key, value);\n      if (!o.owned[i].context) {\n        o.owned[i].context = o.context;\n        mutateContext(o.owned[i], key, value);\n      } else if (!o.owned[i].context[key]) {\n        o.owned[i].context[key] = value;\n        mutateContext(o.owned[i], key, value);\n      }\n    }\n  }\n}\n\nfunction observable(input) {\n  return {\n    subscribe(observer) {\n      if (!(observer instanceof Object) || observer == null) {\n        throw new TypeError(\"Expected the observer to be an object.\");\n      }\n      const handler = typeof observer === \"function\" ? observer : observer.next && observer.next.bind(observer);\n      if (!handler) {\n        return {\n          unsubscribe() {}\n        };\n      }\n      const dispose = createRoot(disposer => {\n        createEffect(() => {\n          const v = input();\n          untrack(() => handler(v));\n        });\n        return disposer;\n      });\n      if (getOwner()) onCleanup(dispose);\n      return {\n        unsubscribe() {\n          dispose();\n        }\n      };\n    },\n    [Symbol.observable || \"@@observable\"]() {\n      return this;\n    }\n  };\n}\nfunction from(producer, initalValue = undefined) {\n  const [s, set] = createSignal(initalValue, {\n    equals: false\n  });\n  if (\"subscribe\" in producer) {\n    const unsub = producer.subscribe(v => set(() => v));\n    onCleanup(() => \"unsubscribe\" in unsub ? unsub.unsubscribe() : unsub());\n  } else {\n    const clean = producer(set);\n    onCleanup(clean);\n  }\n  return s;\n}\n\nconst FALLBACK = Symbol(\"fallback\");\nfunction dispose(d) {\n  for (let i = 0; i < d.length; i++) d[i]();\n}\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    len = 0,\n    indexes = mapFn.length > 1 ? [] : null;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    let newItems = list() || [],\n      newLen = newItems.length,\n      i,\n      j;\n    newItems[$TRACK];\n    return untrack(() => {\n      let newIndices, newIndicesNext, temp, tempdisposers, tempIndexes, start, end, newEnd, item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n      }\n      else if (len === 0) {\n        mapped = new Array(newLen);\n        for (j = 0; j < newLen; j++) {\n          items[j] = newItems[j];\n          mapped[j] = createRoot(mapper);\n        }\n        len = newLen;\n      } else {\n        temp = new Array(newLen);\n        tempdisposers = new Array(newLen);\n        indexes && (tempIndexes = new Array(newLen));\n        for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++);\n        for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {\n          temp[newEnd] = mapped[end];\n          tempdisposers[newEnd] = disposers[end];\n          indexes && (tempIndexes[newEnd] = indexes[end]);\n        }\n        newIndices = new Map();\n        newIndicesNext = new Array(newEnd + 1);\n        for (j = newEnd; j >= start; j--) {\n          item = newItems[j];\n          i = newIndices.get(item);\n          newIndicesNext[j] = i === undefined ? -1 : i;\n          newIndices.set(item, j);\n        }\n        for (i = start; i <= end; i++) {\n          item = items[i];\n          j = newIndices.get(item);\n          if (j !== undefined && j !== -1) {\n            temp[j] = mapped[i];\n            tempdisposers[j] = disposers[i];\n            indexes && (tempIndexes[j] = indexes[i]);\n            j = newIndicesNext[j];\n            newIndices.set(item, j);\n          } else disposers[i]();\n        }\n        for (j = start; j < newLen; j++) {\n          if (j in temp) {\n            mapped[j] = temp[j];\n            disposers[j] = tempdisposers[j];\n            if (indexes) {\n              indexes[j] = tempIndexes[j];\n              indexes[j](j);\n            }\n          } else mapped[j] = createRoot(mapper);\n        }\n        mapped = mapped.slice(0, len = newLen);\n        items = newItems.slice(0);\n      }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction indexArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    signals = [],\n    len = 0,\n    i;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    const newItems = list() || [],\n      newLen = newItems.length;\n    newItems[$TRACK];\n    return untrack(() => {\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          signals = [];\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n        return mapped;\n      }\n      if (items[0] === FALLBACK) {\n        disposers[0]();\n        disposers = [];\n        items = [];\n        mapped = [];\n        len = 0;\n      }\n      for (i = 0; i < newLen; i++) {\n        if (i < items.length && items[i] !== newItems[i]) {\n          signals[i](() => newItems[i]);\n        } else if (i >= items.length) {\n          mapped[i] = createRoot(mapper);\n        }\n      }\n      for (; i < items.length; i++) {\n        disposers[i]();\n      }\n      len = signals.length = disposers.length = newLen;\n      items = newItems.slice(0);\n      return mapped = mapped.slice(0, len);\n    });\n    function mapper(disposer) {\n      disposers[i] = disposer;\n      const [s, set] = createSignal(newItems[i]);\n      signals[i] = set;\n      return mapFn(s, i);\n    }\n  };\n}\n\nlet hydrationEnabled = false;\nfunction enableHydration() {\n  hydrationEnabled = true;\n}\nfunction createComponent(Comp, props) {\n  if (hydrationEnabled) {\n    if (sharedConfig.context) {\n      const c = sharedConfig.context;\n      setHydrateContext(nextHydrateContext());\n      const r = untrack(() => Comp(props || {}));\n      setHydrateContext(c);\n      return r;\n    }\n  }\n  return untrack(() => Comp(props || {}));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY) return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    if (property === $PROXY) return true;\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction resolveSource(s) {\n  return !(s = typeof s === \"function\" ? s() : s) ? {} : s;\n}\nfunction resolveSources() {\n  for (let i = 0, length = this.length; i < length; ++i) {\n    const v = this[i]();\n    if (v !== undefined) return v;\n  }\n}\nfunction mergeProps(...sources) {\n  let proxy = false;\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    proxy = proxy || !!s && $PROXY in s;\n    sources[i] = typeof s === \"function\" ? (proxy = true, createMemo(s)) : s;\n  }\n  if (SUPPORTS_PROXY && proxy) {\n    return new Proxy({\n      get(property) {\n        for (let i = sources.length - 1; i >= 0; i--) {\n          const v = resolveSource(sources[i])[property];\n          if (v !== undefined) return v;\n        }\n      },\n      has(property) {\n        for (let i = sources.length - 1; i >= 0; i--) {\n          if (property in resolveSource(sources[i])) return true;\n        }\n        return false;\n      },\n      keys() {\n        const keys = [];\n        for (let i = 0; i < sources.length; i++) keys.push(...Object.keys(resolveSource(sources[i])));\n        return [...new Set(keys)];\n      }\n    }, propTraps);\n  }\n  const sourcesMap = {};\n  const defined = Object.create(null);\n  for (let i = sources.length - 1; i >= 0; i--) {\n    const source = sources[i];\n    if (!source) continue;\n    const sourceKeys = Object.getOwnPropertyNames(source);\n    for (let i = sourceKeys.length - 1; i >= 0; i--) {\n      const key = sourceKeys[i];\n      if (key === \"__proto__\" || key === \"constructor\") continue;\n      const desc = Object.getOwnPropertyDescriptor(source, key);\n      if (!defined[key]) {\n        defined[key] = desc.get ? {\n          enumerable: true,\n          configurable: true,\n          get: resolveSources.bind(sourcesMap[key] = [desc.get.bind(source)])\n        } : desc.value !== undefined ? desc : undefined;\n      } else {\n        const sources = sourcesMap[key];\n        if (sources) {\n          if (desc.get) sources.push(desc.get.bind(source));else if (desc.value !== undefined) sources.push(() => desc.value);\n        }\n      }\n    }\n  }\n  const target = {};\n  const definedKeys = Object.keys(defined);\n  for (let i = definedKeys.length - 1; i >= 0; i--) {\n    const key = definedKeys[i],\n      desc = defined[key];\n    if (desc && desc.get) Object.defineProperty(target, key, desc);else target[key] = desc ? desc.value : undefined;\n  }\n  return target;\n}\nfunction splitProps(props, ...keys) {\n  if (SUPPORTS_PROXY && $PROXY in props) {\n    const blocked = new Set(keys.length > 1 ? keys.flat() : keys[0]);\n    const res = keys.map(k => {\n      return new Proxy({\n        get(property) {\n          return k.includes(property) ? props[property] : undefined;\n        },\n        has(property) {\n          return k.includes(property) && property in props;\n        },\n        keys() {\n          return k.filter(property => property in props);\n        }\n      }, propTraps);\n    });\n    res.push(new Proxy({\n      get(property) {\n        return blocked.has(property) ? undefined : props[property];\n      },\n      has(property) {\n        return blocked.has(property) ? false : property in props;\n      },\n      keys() {\n        return Object.keys(props).filter(k => !blocked.has(k));\n      }\n    }, propTraps));\n    return res;\n  }\n  const otherObject = {};\n  const objects = keys.map(() => ({}));\n  for (const propName of Object.getOwnPropertyNames(props)) {\n    const desc = Object.getOwnPropertyDescriptor(props, propName);\n    const isDefaultDesc = !desc.get && !desc.set && desc.enumerable && desc.writable && desc.configurable;\n    let blocked = false;\n    let objectIndex = 0;\n    for (const k of keys) {\n      if (k.includes(propName)) {\n        blocked = true;\n        isDefaultDesc ? objects[objectIndex][propName] = desc.value : Object.defineProperty(objects[objectIndex], propName, desc);\n      }\n      ++objectIndex;\n    }\n    if (!blocked) {\n      isDefaultDesc ? otherObject[propName] = desc.value : Object.defineProperty(otherObject, propName, desc);\n    }\n  }\n  return [...objects, otherObject];\n}\nfunction lazy(fn) {\n  let comp;\n  let p;\n  const wrap = props => {\n    const ctx = sharedConfig.context;\n    if (ctx) {\n      const [s, set] = createSignal();\n      sharedConfig.count || (sharedConfig.count = 0);\n      sharedConfig.count++;\n      (p || (p = fn())).then(mod => {\n        !sharedConfig.done && setHydrateContext(ctx);\n        sharedConfig.count--;\n        set(() => mod.default);\n        setHydrateContext();\n      });\n      comp = s;\n    } else if (!comp) {\n      const [s] = createResource(() => (p || (p = fn())).then(mod => mod.default));\n      comp = s;\n    }\n    let Comp;\n    return createMemo(() => (Comp = comp()) ? untrack(() => {\n      if (IS_DEV) ;\n      if (!ctx || sharedConfig.done) return Comp(props);\n      const c = sharedConfig.context;\n      setHydrateContext(ctx);\n      const r = Comp(props);\n      setHydrateContext(c);\n      return r;\n    }) : \"\");\n  };\n  wrap.preload = () => p || ((p = fn()).then(mod => comp = () => mod.default), p);\n  return wrap;\n}\nlet counter = 0;\nfunction createUniqueId() {\n  const ctx = sharedConfig.context;\n  return ctx ? sharedConfig.getNextContextId() : `cl-${counter++}`;\n}\n\nconst narrowedError = name => `Stale read from <${name}>.`;\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Index(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(indexArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Show(props) {\n  const keyed = props.keyed;\n  const conditionValue = createMemo(() => props.when, undefined, undefined);\n  const condition = keyed ? conditionValue : createMemo(conditionValue, undefined, {\n    equals: (a, b) => !a === !b\n  });\n  return createMemo(() => {\n    const c = condition();\n    if (c) {\n      const child = props.children;\n      const fn = typeof child === \"function\" && child.length > 0;\n      return fn ? untrack(() => child(keyed ? c : () => {\n        if (!untrack(condition)) throw narrowedError(\"Show\");\n        return conditionValue();\n      })) : child;\n    }\n    return props.fallback;\n  }, undefined, undefined);\n}\nfunction Switch(props) {\n  const chs = children(() => props.children);\n  const switchFunc = createMemo(() => {\n    const ch = chs();\n    const mps = Array.isArray(ch) ? ch : [ch];\n    let func = () => undefined;\n    for (let i = 0; i < mps.length; i++) {\n      const index = i;\n      const mp = mps[i];\n      const prevFunc = func;\n      const conditionValue = createMemo(() => prevFunc() ? undefined : mp.when, undefined, undefined);\n      const condition = mp.keyed ? conditionValue : createMemo(conditionValue, undefined, {\n        equals: (a, b) => !a === !b\n      });\n      func = () => prevFunc() || (condition() ? [index, conditionValue, mp] : undefined);\n    }\n    return func;\n  });\n  return createMemo(() => {\n    const sel = switchFunc()();\n    if (!sel) return props.fallback;\n    const [index, conditionValue, mp] = sel;\n    const child = mp.children;\n    const fn = typeof child === \"function\" && child.length > 0;\n    return fn ? untrack(() => child(mp.keyed ? conditionValue() : () => {\n      if (untrack(switchFunc)()?.[0] !== index) throw narrowedError(\"Match\");\n      return conditionValue();\n    })) : child;\n  }, undefined, undefined);\n}\nfunction Match(props) {\n  return props;\n}\nlet Errors;\nfunction resetErrorBoundaries() {\n  Errors && [...Errors].forEach(fn => fn());\n}\nfunction ErrorBoundary(props) {\n  let err;\n  if (sharedConfig.context && sharedConfig.load) err = sharedConfig.load(sharedConfig.getContextId());\n  const [errored, setErrored] = createSignal(err, undefined);\n  Errors || (Errors = new Set());\n  Errors.add(setErrored);\n  onCleanup(() => Errors.delete(setErrored));\n  return createMemo(() => {\n    let e;\n    if (e = errored()) {\n      const f = props.fallback;\n      return typeof f === \"function\" && f.length ? untrack(() => f(e, () => setErrored())) : f;\n    }\n    return catchError(() => props.children, setErrored);\n  }, undefined, undefined);\n}\n\nconst suspenseListEquals = (a, b) => a.showContent === b.showContent && a.showFallback === b.showFallback;\nconst SuspenseListContext = /* #__PURE__ */createContext();\nfunction SuspenseList(props) {\n  let [wrapper, setWrapper] = createSignal(() => ({\n      inFallback: false\n    })),\n    show;\n  const listContext = useContext(SuspenseListContext);\n  const [registry, setRegistry] = createSignal([]);\n  if (listContext) {\n    show = listContext.register(createMemo(() => wrapper()().inFallback));\n  }\n  const resolved = createMemo(prev => {\n    const reveal = props.revealOrder,\n      tail = props.tail,\n      {\n        showContent = true,\n        showFallback = true\n      } = show ? show() : {},\n      reg = registry(),\n      reverse = reveal === \"backwards\";\n    if (reveal === \"together\") {\n      const all = reg.every(inFallback => !inFallback());\n      const res = reg.map(() => ({\n        showContent: all && showContent,\n        showFallback\n      }));\n      res.inFallback = !all;\n      return res;\n    }\n    let stop = false;\n    let inFallback = prev.inFallback;\n    const res = [];\n    for (let i = 0, len = reg.length; i < len; i++) {\n      const n = reverse ? len - i - 1 : i,\n        s = reg[n]();\n      if (!stop && !s) {\n        res[n] = {\n          showContent,\n          showFallback\n        };\n      } else {\n        const next = !stop;\n        if (next) inFallback = true;\n        res[n] = {\n          showContent: next,\n          showFallback: !tail || next && tail === \"collapsed\" ? showFallback : false\n        };\n        stop = true;\n      }\n    }\n    if (!stop) inFallback = false;\n    res.inFallback = inFallback;\n    return res;\n  }, {\n    inFallback: false\n  });\n  setWrapper(() => resolved);\n  return createComponent(SuspenseListContext.Provider, {\n    value: {\n      register: inFallback => {\n        let index;\n        setRegistry(registry => {\n          index = registry.length;\n          return [...registry, inFallback];\n        });\n        return createMemo(() => resolved()[index], undefined, {\n          equals: suspenseListEquals\n        });\n      }\n    },\n    get children() {\n      return props.children;\n    }\n  });\n}\nfunction Suspense(props) {\n  let counter = 0,\n    show,\n    ctx,\n    p,\n    flicker,\n    error;\n  const [inFallback, setFallback] = createSignal(false),\n    SuspenseContext = getSuspenseContext(),\n    store = {\n      increment: () => {\n        if (++counter === 1) setFallback(true);\n      },\n      decrement: () => {\n        if (--counter === 0) setFallback(false);\n      },\n      inFallback,\n      effects: [],\n      resolved: false\n    },\n    owner = getOwner();\n  if (sharedConfig.context && sharedConfig.load) {\n    const key = sharedConfig.getContextId();\n    let ref = sharedConfig.load(key);\n    if (ref) {\n      if (typeof ref !== \"object\" || ref.s !== 1) p = ref;else sharedConfig.gather(key);\n    }\n    if (p && p !== \"$$f\") {\n      const [s, set] = createSignal(undefined, {\n        equals: false\n      });\n      flicker = s;\n      p.then(() => {\n        if (sharedConfig.done) return set();\n        sharedConfig.gather(key);\n        setHydrateContext(ctx);\n        set();\n        setHydrateContext();\n      }, err => {\n        error = err;\n        set();\n      });\n    }\n  }\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) show = listContext.register(store.inFallback);\n  let dispose;\n  onCleanup(() => dispose && dispose());\n  return createComponent(SuspenseContext.Provider, {\n    value: store,\n    get children() {\n      return createMemo(() => {\n        if (error) throw error;\n        ctx = sharedConfig.context;\n        if (flicker) {\n          flicker();\n          return flicker = undefined;\n        }\n        if (ctx && p === \"$$f\") setHydrateContext();\n        const rendered = createMemo(() => props.children);\n        return createMemo(prev => {\n          const inFallback = store.inFallback(),\n            {\n              showContent = true,\n              showFallback = true\n            } = show ? show() : {};\n          if ((!inFallback || p && p !== \"$$f\") && showContent) {\n            store.resolved = true;\n            dispose && dispose();\n            dispose = ctx = p = undefined;\n            resumeEffects(store.effects);\n            return rendered();\n          }\n          if (!showFallback) return;\n          if (dispose) return prev;\n          return createRoot(disposer => {\n            dispose = disposer;\n            if (ctx) {\n              setHydrateContext({\n                id: ctx.id + \"F\",\n                count: 0\n              });\n              ctx = undefined;\n            }\n            return props.fallback;\n          }, owner);\n        });\n      });\n    }\n  });\n}\n\nconst DEV = undefined;\n\nexport { $DEVCOMP, $PROXY, $TRACK, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, batch, cancelCallback, catchError, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createReaction, createRenderEffect, createResource, createRoot, createSelector, createSignal, createUniqueId, enableExternalSource, enableHydration, enableScheduling, equalFn, from, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, observable, on, onCleanup, onError, onMount, requestCallback, resetErrorBoundaries, runWithOwner, sharedConfig, splitProps, startTransition, untrack, useContext, useTransition };\n","import { createMemo, createRoot, createRenderEffect, untrack, sharedConfig, enableHydration, getOwner, createEffect, runWithOwner, createSignal, onCleanup, splitProps } from 'solid-js';\nexport { ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, createComponent, createRenderEffect as effect, getOwner, mergeProps, untrack } from 'solid-js';\n\nconst booleans = [\"allowfullscreen\", \"async\", \"alpha\",\n\"autofocus\",\n\"autoplay\", \"checked\", \"controls\", \"default\", \"disabled\", \"formnovalidate\", \"hidden\",\n\"indeterminate\", \"inert\",\n\"ismap\", \"loop\", \"multiple\", \"muted\", \"nomodule\", \"novalidate\", \"open\", \"playsinline\", \"readonly\", \"required\", \"reversed\", \"seamless\",\n\"selected\", \"adauctionheaders\",\n\"browsingtopics\",\n\"credentialless\",\n\"defaultchecked\", \"defaultmuted\", \"defaultselected\", \"defer\", \"disablepictureinpicture\", \"disableremoteplayback\", \"preservespitch\",\n\"shadowrootclonable\", \"shadowrootcustomelementregistry\",\n\"shadowrootdelegatesfocus\", \"shadowrootserializable\",\n\"sharedstoragewritable\"\n];\nconst Properties = /*#__PURE__*/new Set([\n\"className\", \"value\",\n\"readOnly\", \"noValidate\", \"formNoValidate\", \"isMap\", \"noModule\", \"playsInline\", \"adAuctionHeaders\",\n\"allowFullscreen\", \"browsingTopics\",\n\"defaultChecked\", \"defaultMuted\", \"defaultSelected\", \"disablePictureInPicture\", \"disableRemotePlayback\", \"preservesPitch\", \"shadowRootClonable\", \"shadowRootCustomElementRegistry\",\n\"shadowRootDelegatesFocus\", \"shadowRootSerializable\",\n\"sharedStorageWritable\",\n...booleans]);\nconst ChildProperties = /*#__PURE__*/new Set([\"innerHTML\", \"textContent\", \"innerText\", \"children\"]);\nconst Aliases = /*#__PURE__*/Object.assign(Object.create(null), {\n  className: \"class\",\n  htmlFor: \"for\"\n});\nconst PropAliases = /*#__PURE__*/Object.assign(Object.create(null), {\n  class: \"className\",\n  novalidate: {\n    $: \"noValidate\",\n    FORM: 1\n  },\n  formnovalidate: {\n    $: \"formNoValidate\",\n    BUTTON: 1,\n    INPUT: 1\n  },\n  ismap: {\n    $: \"isMap\",\n    IMG: 1\n  },\n  nomodule: {\n    $: \"noModule\",\n    SCRIPT: 1\n  },\n  playsinline: {\n    $: \"playsInline\",\n    VIDEO: 1\n  },\n  readonly: {\n    $: \"readOnly\",\n    INPUT: 1,\n    TEXTAREA: 1\n  },\n  adauctionheaders: {\n    $: \"adAuctionHeaders\",\n    IFRAME: 1\n  },\n  allowfullscreen: {\n    $: \"allowFullscreen\",\n    IFRAME: 1\n  },\n  browsingtopics: {\n    $: \"browsingTopics\",\n    IMG: 1\n  },\n  defaultchecked: {\n    $: \"defaultChecked\",\n    INPUT: 1\n  },\n  defaultmuted: {\n    $: \"defaultMuted\",\n    AUDIO: 1,\n    VIDEO: 1\n  },\n  defaultselected: {\n    $: \"defaultSelected\",\n    OPTION: 1\n  },\n  disablepictureinpicture: {\n    $: \"disablePictureInPicture\",\n    VIDEO: 1\n  },\n  disableremoteplayback: {\n    $: \"disableRemotePlayback\",\n    AUDIO: 1,\n    VIDEO: 1\n  },\n  preservespitch: {\n    $: \"preservesPitch\",\n    AUDIO: 1,\n    VIDEO: 1\n  },\n  shadowrootclonable: {\n    $: \"shadowRootClonable\",\n    TEMPLATE: 1\n  },\n  shadowrootdelegatesfocus: {\n    $: \"shadowRootDelegatesFocus\",\n    TEMPLATE: 1\n  },\n  shadowrootserializable: {\n    $: \"shadowRootSerializable\",\n    TEMPLATE: 1\n  },\n  sharedstoragewritable: {\n    $: \"sharedStorageWritable\",\n    IFRAME: 1,\n    IMG: 1\n  }\n});\nfunction getPropAlias(prop, tagName) {\n  const a = PropAliases[prop];\n  return typeof a === \"object\" ? a[tagName] ? a[\"$\"] : undefined : a;\n}\nconst DelegatedEvents = /*#__PURE__*/new Set([\"beforeinput\", \"click\", \"dblclick\", \"contextmenu\", \"focusin\", \"focusout\", \"input\", \"keydown\", \"keyup\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"pointerdown\", \"pointermove\", \"pointerout\", \"pointerover\", \"pointerup\", \"touchend\", \"touchmove\", \"touchstart\"]);\nconst SVGElements = /*#__PURE__*/new Set([\n\"altGlyph\", \"altGlyphDef\", \"altGlyphItem\", \"animate\", \"animateColor\", \"animateMotion\", \"animateTransform\", \"circle\", \"clipPath\", \"color-profile\", \"cursor\", \"defs\", \"desc\", \"ellipse\", \"feBlend\", \"feColorMatrix\", \"feComponentTransfer\", \"feComposite\", \"feConvolveMatrix\", \"feDiffuseLighting\", \"feDisplacementMap\", \"feDistantLight\", \"feDropShadow\", \"feFlood\", \"feFuncA\", \"feFuncB\", \"feFuncG\", \"feFuncR\", \"feGaussianBlur\", \"feImage\", \"feMerge\", \"feMergeNode\", \"feMorphology\", \"feOffset\", \"fePointLight\", \"feSpecularLighting\", \"feSpotLight\", \"feTile\", \"feTurbulence\", \"filter\", \"font\", \"font-face\", \"font-face-format\", \"font-face-name\", \"font-face-src\", \"font-face-uri\", \"foreignObject\", \"g\", \"glyph\", \"glyphRef\", \"hkern\", \"image\", \"line\", \"linearGradient\", \"marker\", \"mask\", \"metadata\", \"missing-glyph\", \"mpath\", \"path\", \"pattern\", \"polygon\", \"polyline\", \"radialGradient\", \"rect\",\n\"set\", \"stop\",\n\"svg\", \"switch\", \"symbol\", \"text\", \"textPath\",\n\"tref\", \"tspan\", \"use\", \"view\", \"vkern\"]);\nconst SVGNamespace = {\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\"\n};\nconst DOMElements = /*#__PURE__*/new Set([\"html\", \"base\", \"head\", \"link\", \"meta\", \"style\", \"title\", \"body\", \"address\", \"article\", \"aside\", \"footer\", \"header\", \"main\", \"nav\", \"section\", \"body\", \"blockquote\", \"dd\", \"div\", \"dl\", \"dt\", \"figcaption\", \"figure\", \"hr\", \"li\", \"ol\", \"p\", \"pre\", \"ul\", \"a\", \"abbr\", \"b\", \"bdi\", \"bdo\", \"br\", \"cite\", \"code\", \"data\", \"dfn\", \"em\", \"i\", \"kbd\", \"mark\", \"q\", \"rp\", \"rt\", \"ruby\", \"s\", \"samp\", \"small\", \"span\", \"strong\", \"sub\", \"sup\", \"time\", \"u\", \"var\", \"wbr\", \"area\", \"audio\", \"img\", \"map\", \"track\", \"video\", \"embed\", \"iframe\", \"object\", \"param\", \"picture\", \"portal\", \"source\", \"svg\", \"math\", \"canvas\", \"noscript\", \"script\", \"del\", \"ins\", \"caption\", \"col\", \"colgroup\", \"table\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\", \"button\", \"datalist\", \"fieldset\", \"form\", \"input\", \"label\", \"legend\", \"meter\", \"optgroup\", \"option\", \"output\", \"progress\", \"select\", \"textarea\", \"details\", \"dialog\", \"menu\", \"summary\", \"details\", \"slot\", \"template\", \"acronym\", \"applet\", \"basefont\", \"bgsound\", \"big\", \"blink\", \"center\", \"content\", \"dir\", \"font\", \"frame\", \"frameset\", \"hgroup\", \"image\", \"keygen\", \"marquee\", \"menuitem\", \"nobr\", \"noembed\", \"noframes\", \"plaintext\", \"rb\", \"rtc\", \"shadow\", \"spacer\", \"strike\", \"tt\", \"xmp\", \"a\", \"abbr\", \"acronym\", \"address\", \"applet\", \"area\", \"article\", \"aside\", \"audio\", \"b\", \"base\", \"basefont\", \"bdi\", \"bdo\", \"bgsound\", \"big\", \"blink\", \"blockquote\", \"body\", \"br\", \"button\", \"canvas\", \"caption\", \"center\", \"cite\", \"code\", \"col\", \"colgroup\", \"content\", \"data\", \"datalist\", \"dd\", \"del\", \"details\", \"dfn\", \"dialog\", \"dir\", \"div\", \"dl\", \"dt\", \"em\", \"embed\", \"fieldset\", \"figcaption\", \"figure\", \"font\", \"footer\", \"form\", \"frame\", \"frameset\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\", \"i\", \"iframe\", \"image\", \"img\", \"input\", \"ins\", \"kbd\", \"keygen\", \"label\", \"legend\", \"li\", \"link\", \"main\", \"map\", \"mark\", \"marquee\", \"menu\", \"menuitem\", \"meta\", \"meter\", \"nav\", \"nobr\", \"noembed\", \"noframes\", \"noscript\", \"object\", \"ol\", \"optgroup\", \"option\", \"output\", \"p\", \"param\", \"picture\", \"plaintext\", \"portal\", \"pre\", \"progress\", \"q\", \"rb\", \"rp\", \"rt\", \"rtc\", \"ruby\", \"s\", \"samp\", \"script\", \"section\", \"select\", \"shadow\", \"slot\", \"small\", \"source\", \"spacer\", \"span\", \"strike\", \"strong\", \"style\", \"sub\", \"summary\", \"sup\", \"table\", \"tbody\", \"td\", \"template\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"time\", \"title\", \"tr\", \"track\", \"tt\", \"u\", \"ul\", \"var\", \"video\", \"wbr\", \"xmp\", \"input\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\",\n\"webview\",\n\"isindex\", \"listing\", \"multicol\", \"nextid\", \"noindex\", \"search\"]);\n\nconst memo = fn => createMemo(() => fn());\n\nfunction reconcileArrays(parentNode, a, b) {\n  let bLength = b.length,\n    aEnd = a.length,\n    bEnd = bLength,\n    aStart = 0,\n    bStart = 0,\n    after = a[aEnd - 1].nextSibling,\n    map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n      continue;\n    }\n    while (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    if (aEnd === aStart) {\n      const node = bEnd < bLength ? bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart] : after;\n      while (bStart < bEnd) parentNode.insertBefore(b[bStart++], node);\n    } else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        if (!map || !map.has(a[aStart])) a[aStart].remove();\n        aStart++;\n      }\n    } else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n      const node = a[--aEnd].nextSibling;\n      parentNode.insertBefore(b[bStart++], a[aStart++].nextSibling);\n      parentNode.insertBefore(b[--bEnd], node);\n      a[aEnd] = b[bEnd];\n    } else {\n      if (!map) {\n        map = new Map();\n        let i = bStart;\n        while (i < bEnd) map.set(b[i], i++);\n      }\n      const index = map.get(a[aStart]);\n      if (index != null) {\n        if (bStart < index && index < bEnd) {\n          let i = aStart,\n            sequence = 1,\n            t;\n          while (++i < aEnd && i < bEnd) {\n            if ((t = map.get(a[i])) == null || t !== index + sequence) break;\n            sequence++;\n          }\n          if (sequence > index - bStart) {\n            const node = a[aStart];\n            while (bStart < index) parentNode.insertBefore(b[bStart++], node);\n          } else parentNode.replaceChild(b[bStart++], a[aStart++]);\n        } else aStart++;\n      } else a[aStart++].remove();\n    }\n  }\n}\n\nconst $$EVENTS = \"_$DX_DELEGATE\";\nfunction render(code, element, init, options = {}) {\n  let disposer;\n  createRoot(dispose => {\n    disposer = dispose;\n    element === document ? code() : insert(element, code(), element.firstChild ? null : undefined, init);\n  }, options.owner);\n  return () => {\n    disposer();\n    element.textContent = \"\";\n  };\n}\nfunction template(html, isImportNode, isSVG, isMathML) {\n  let node;\n  const create = () => {\n    const t = isMathML ? document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", \"template\") : document.createElement(\"template\");\n    t.innerHTML = html;\n    return isSVG ? t.content.firstChild.firstChild : isMathML ? t.firstChild : t.content.firstChild;\n  };\n  const fn = isImportNode ? () => untrack(() => document.importNode(node || (node = create()), true)) : () => (node || (node = create())).cloneNode(true);\n  fn.cloneNode = fn;\n  return fn;\n}\nfunction delegateEvents(eventNames, document = window.document) {\n  const e = document[$$EVENTS] || (document[$$EVENTS] = new Set());\n  for (let i = 0, l = eventNames.length; i < l; i++) {\n    const name = eventNames[i];\n    if (!e.has(name)) {\n      e.add(name);\n      document.addEventListener(name, eventHandler);\n    }\n  }\n}\nfunction clearDelegatedEvents(document = window.document) {\n  if (document[$$EVENTS]) {\n    for (let name of document[$$EVENTS].keys()) document.removeEventListener(name, eventHandler);\n    delete document[$$EVENTS];\n  }\n}\nfunction setProperty(node, name, value) {\n  if (isHydrating(node)) return;\n  node[name] = value;\n}\nfunction setAttribute(node, name, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttribute(name);else node.setAttribute(name, value);\n}\nfunction setAttributeNS(node, namespace, name, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttributeNS(namespace, name);else node.setAttributeNS(namespace, name, value);\n}\nfunction setBoolAttribute(node, name, value) {\n  if (isHydrating(node)) return;\n  value ? node.setAttribute(name, \"\") : node.removeAttribute(name);\n}\nfunction className(node, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttribute(\"class\");else node.className = value;\n}\nfunction addEventListener(node, name, handler, delegate) {\n  if (delegate) {\n    if (Array.isArray(handler)) {\n      node[`$$${name}`] = handler[0];\n      node[`$$${name}Data`] = handler[1];\n    } else node[`$$${name}`] = handler;\n  } else if (Array.isArray(handler)) {\n    const handlerFn = handler[0];\n    node.addEventListener(name, handler[0] = e => handlerFn.call(node, handler[1], e));\n  } else node.addEventListener(name, handler, typeof handler !== \"function\" && handler);\n}\nfunction classList(node, value, prev = {}) {\n  const classKeys = Object.keys(value || {}),\n    prevKeys = Object.keys(prev);\n  let i, len;\n  for (i = 0, len = prevKeys.length; i < len; i++) {\n    const key = prevKeys[i];\n    if (!key || key === \"undefined\" || value[key]) continue;\n    toggleClassKey(node, key, false);\n    delete prev[key];\n  }\n  for (i = 0, len = classKeys.length; i < len; i++) {\n    const key = classKeys[i],\n      classValue = !!value[key];\n    if (!key || key === \"undefined\" || prev[key] === classValue || !classValue) continue;\n    toggleClassKey(node, key, true);\n    prev[key] = classValue;\n  }\n  return prev;\n}\nfunction style(node, value, prev) {\n  if (!value) return prev ? setAttribute(node, \"style\") : value;\n  const nodeStyle = node.style;\n  if (typeof value === \"string\") return nodeStyle.cssText = value;\n  typeof prev === \"string\" && (nodeStyle.cssText = prev = undefined);\n  prev || (prev = {});\n  value || (value = {});\n  let v, s;\n  for (s in prev) {\n    value[s] == null && nodeStyle.removeProperty(s);\n    delete prev[s];\n  }\n  for (s in value) {\n    v = value[s];\n    if (v !== prev[s]) {\n      nodeStyle.setProperty(s, v);\n      prev[s] = v;\n    }\n  }\n  return prev;\n}\nfunction setStyleProperty(node, name, value) {\n  value != null ? node.style.setProperty(name, value) : node.style.removeProperty(name);\n}\nfunction spread(node, props = {}, isSVG, skipChildren) {\n  const prevProps = {};\n  if (!skipChildren) {\n    createRenderEffect(() => prevProps.children = insertExpression(node, props.children, prevProps.children));\n  }\n  createRenderEffect(() => typeof props.ref === \"function\" && use(props.ref, node));\n  createRenderEffect(() => assign(node, props, isSVG, true, prevProps, true));\n  return prevProps;\n}\nfunction dynamicProperty(props, key) {\n  const src = props[key];\n  Object.defineProperty(props, key, {\n    get() {\n      return src();\n    },\n    enumerable: true\n  });\n  return props;\n}\nfunction use(fn, element, arg) {\n  return untrack(() => fn(element, arg));\n}\nfunction insert(parent, accessor, marker, initial) {\n  if (marker !== undefined && !initial) initial = [];\n  if (typeof accessor !== \"function\") return insertExpression(parent, accessor, initial, marker);\n  createRenderEffect(current => insertExpression(parent, accessor(), current, marker), initial);\n}\nfunction assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = false) {\n  props || (props = {});\n  for (const prop in prevProps) {\n    if (!(prop in props)) {\n      if (prop === \"children\") continue;\n      prevProps[prop] = assignProp(node, prop, null, prevProps[prop], isSVG, skipRef, props);\n    }\n  }\n  for (const prop in props) {\n    if (prop === \"children\") {\n      if (!skipChildren) insertExpression(node, props.children);\n      continue;\n    }\n    const value = props[prop];\n    prevProps[prop] = assignProp(node, prop, value, prevProps[prop], isSVG, skipRef, props);\n  }\n}\nfunction hydrate$1(code, element, options = {}) {\n  if (globalThis._$HY.done) return render(code, element, [...element.childNodes], options);\n  sharedConfig.completed = globalThis._$HY.completed;\n  sharedConfig.events = globalThis._$HY.events;\n  sharedConfig.load = id => globalThis._$HY.r[id];\n  sharedConfig.has = id => id in globalThis._$HY.r;\n  sharedConfig.gather = root => gatherHydratable(element, root);\n  sharedConfig.registry = new Map();\n  sharedConfig.context = {\n    id: options.renderId || \"\",\n    count: 0\n  };\n  try {\n    gatherHydratable(element, options.renderId);\n    return render(code, element, [...element.childNodes], options);\n  } finally {\n    sharedConfig.context = null;\n  }\n}\nfunction getNextElement(template) {\n  let node,\n    key,\n    hydrating = isHydrating();\n  if (!hydrating || !(node = sharedConfig.registry.get(key = getHydrationKey()))) {\n    return template();\n  }\n  if (sharedConfig.completed) sharedConfig.completed.add(node);\n  sharedConfig.registry.delete(key);\n  return node;\n}\nfunction getNextMatch(el, nodeName) {\n  while (el && el.localName !== nodeName) el = el.nextSibling;\n  return el;\n}\nfunction getNextMarker(start) {\n  let end = start,\n    count = 0,\n    current = [];\n  if (isHydrating(start)) {\n    while (end) {\n      if (end.nodeType === 8) {\n        const v = end.nodeValue;\n        if (v === \"$\") count++;else if (v === \"/\") {\n          if (count === 0) return [end, current];\n          count--;\n        }\n      }\n      current.push(end);\n      end = end.nextSibling;\n    }\n  }\n  return [end, current];\n}\nfunction runHydrationEvents() {\n  if (sharedConfig.events && !sharedConfig.events.queued) {\n    queueMicrotask(() => {\n      const {\n        completed,\n        events\n      } = sharedConfig;\n      if (!events) return;\n      events.queued = false;\n      while (events.length) {\n        const [el, e] = events[0];\n        if (!completed.has(el)) return;\n        events.shift();\n        eventHandler(e);\n      }\n      if (sharedConfig.done) {\n        sharedConfig.events = _$HY.events = null;\n        sharedConfig.completed = _$HY.completed = null;\n      }\n    });\n    sharedConfig.events.queued = true;\n  }\n}\nfunction isHydrating(node) {\n  return !!sharedConfig.context && !sharedConfig.done && (!node || node.isConnected);\n}\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());\n}\nfunction toggleClassKey(node, key, value) {\n  const classNames = key.trim().split(/\\s+/);\n  for (let i = 0, nameLen = classNames.length; i < nameLen; i++) node.classList.toggle(classNames[i], value);\n}\nfunction assignProp(node, prop, value, prev, isSVG, skipRef, props) {\n  let isCE, isProp, isChildProp, propAlias, forceProp;\n  if (prop === \"style\") return style(node, value, prev);\n  if (prop === \"classList\") return classList(node, value, prev);\n  if (value === prev) return prev;\n  if (prop === \"ref\") {\n    if (!skipRef) value(node);\n  } else if (prop.slice(0, 3) === \"on:\") {\n    const e = prop.slice(3);\n    prev && node.removeEventListener(e, prev, typeof prev !== \"function\" && prev);\n    value && node.addEventListener(e, value, typeof value !== \"function\" && value);\n  } else if (prop.slice(0, 10) === \"oncapture:\") {\n    const e = prop.slice(10);\n    prev && node.removeEventListener(e, prev, true);\n    value && node.addEventListener(e, value, true);\n  } else if (prop.slice(0, 2) === \"on\") {\n    const name = prop.slice(2).toLowerCase();\n    const delegate = DelegatedEvents.has(name);\n    if (!delegate && prev) {\n      const h = Array.isArray(prev) ? prev[0] : prev;\n      node.removeEventListener(name, h);\n    }\n    if (delegate || value) {\n      addEventListener(node, name, value, delegate);\n      delegate && delegateEvents([name]);\n    }\n  } else if (prop.slice(0, 5) === \"attr:\") {\n    setAttribute(node, prop.slice(5), value);\n  } else if (prop.slice(0, 5) === \"bool:\") {\n    setBoolAttribute(node, prop.slice(5), value);\n  } else if ((forceProp = prop.slice(0, 5) === \"prop:\") || (isChildProp = ChildProperties.has(prop)) || !isSVG && ((propAlias = getPropAlias(prop, node.tagName)) || (isProp = Properties.has(prop))) || (isCE = node.nodeName.includes(\"-\") || \"is\" in props)) {\n    if (forceProp) {\n      prop = prop.slice(5);\n      isProp = true;\n    } else if (isHydrating(node)) return value;\n    if (prop === \"class\" || prop === \"className\") className(node, value);else if (isCE && !isProp && !isChildProp) node[toPropertyName(prop)] = value;else node[propAlias || prop] = value;\n  } else {\n    const ns = isSVG && prop.indexOf(\":\") > -1 && SVGNamespace[prop.split(\":\")[0]];\n    if (ns) setAttributeNS(node, ns, prop, value);else setAttribute(node, Aliases[prop] || prop, value);\n  }\n  return value;\n}\nfunction eventHandler(e) {\n  if (sharedConfig.registry && sharedConfig.events) {\n    if (sharedConfig.events.find(([el, ev]) => ev === e)) return;\n  }\n  let node = e.target;\n  const key = `$$${e.type}`;\n  const oriTarget = e.target;\n  const oriCurrentTarget = e.currentTarget;\n  const retarget = value => Object.defineProperty(e, \"target\", {\n    configurable: true,\n    value\n  });\n  const handleNode = () => {\n    const handler = node[key];\n    if (handler && !node.disabled) {\n      const data = node[`${key}Data`];\n      data !== undefined ? handler.call(node, data, e) : handler.call(node, e);\n      if (e.cancelBubble) return;\n    }\n    node.host && typeof node.host !== \"string\" && !node.host._$host && node.contains(e.target) && retarget(node.host);\n    return true;\n  };\n  const walkUpTree = () => {\n    while (handleNode() && (node = node._$host || node.parentNode || node.host));\n  };\n  Object.defineProperty(e, \"currentTarget\", {\n    configurable: true,\n    get() {\n      return node || document;\n    }\n  });\n  if (sharedConfig.registry && !sharedConfig.done) sharedConfig.done = _$HY.done = true;\n  if (e.composedPath) {\n    const path = e.composedPath();\n    retarget(path[0]);\n    for (let i = 0; i < path.length - 2; i++) {\n      node = path[i];\n      if (!handleNode()) break;\n      if (node._$host) {\n        node = node._$host;\n        walkUpTree();\n        break;\n      }\n      if (node.parentNode === oriCurrentTarget) {\n        break;\n      }\n    }\n  }\n  else walkUpTree();\n  retarget(oriTarget);\n}\nfunction insertExpression(parent, value, current, marker, unwrapArray) {\n  const hydrating = isHydrating(parent);\n  if (hydrating) {\n    !current && (current = [...parent.childNodes]);\n    let cleaned = [];\n    for (let i = 0; i < current.length; i++) {\n      const node = current[i];\n      if (node.nodeType === 8 && node.data.slice(0, 2) === \"!$\") node.remove();else cleaned.push(node);\n    }\n    current = cleaned;\n  }\n  while (typeof current === \"function\") current = current();\n  if (value === current) return current;\n  const t = typeof value,\n    multi = marker !== undefined;\n  parent = multi && current[0] && current[0].parentNode || parent;\n  if (t === \"string\" || t === \"number\") {\n    if (hydrating) return current;\n    if (t === \"number\") {\n      value = value.toString();\n      if (value === current) return current;\n    }\n    if (multi) {\n      let node = current[0];\n      if (node && node.nodeType === 3) {\n        node.data !== value && (node.data = value);\n      } else node = document.createTextNode(value);\n      current = cleanChildren(parent, current, marker, node);\n    } else {\n      if (current !== \"\" && typeof current === \"string\") {\n        current = parent.firstChild.data = value;\n      } else current = parent.textContent = value;\n    }\n  } else if (value == null || t === \"boolean\") {\n    if (hydrating) return current;\n    current = cleanChildren(parent, current, marker);\n  } else if (t === \"function\") {\n    createRenderEffect(() => {\n      let v = value();\n      while (typeof v === \"function\") v = v();\n      current = insertExpression(parent, v, current, marker);\n    });\n    return () => current;\n  } else if (Array.isArray(value)) {\n    const array = [];\n    const currentArray = current && Array.isArray(current);\n    if (normalizeIncomingArray(array, value, current, unwrapArray)) {\n      createRenderEffect(() => current = insertExpression(parent, array, current, marker, true));\n      return () => current;\n    }\n    if (hydrating) {\n      if (!array.length) return current;\n      if (marker === undefined) return current = [...parent.childNodes];\n      let node = array[0];\n      if (node.parentNode !== parent) return current;\n      const nodes = [node];\n      while ((node = node.nextSibling) !== marker) nodes.push(node);\n      return current = nodes;\n    }\n    if (array.length === 0) {\n      current = cleanChildren(parent, current, marker);\n      if (multi) return current;\n    } else if (currentArray) {\n      if (current.length === 0) {\n        appendNodes(parent, array, marker);\n      } else reconcileArrays(parent, current, array);\n    } else {\n      current && cleanChildren(parent);\n      appendNodes(parent, array);\n    }\n    current = array;\n  } else if (value.nodeType) {\n    if (hydrating && value.parentNode) return current = multi ? [value] : value;\n    if (Array.isArray(current)) {\n      if (multi) return current = cleanChildren(parent, current, marker, value);\n      cleanChildren(parent, current, null, value);\n    } else if (current == null || current === \"\" || !parent.firstChild) {\n      parent.appendChild(value);\n    } else parent.replaceChild(value, parent.firstChild);\n    current = value;\n  } else ;\n  return current;\n}\nfunction normalizeIncomingArray(normalized, array, current, unwrap) {\n  let dynamic = false;\n  for (let i = 0, len = array.length; i < len; i++) {\n    let item = array[i],\n      prev = current && current[normalized.length],\n      t;\n    if (item == null || item === true || item === false) ; else if ((t = typeof item) === \"object\" && item.nodeType) {\n      normalized.push(item);\n    } else if (Array.isArray(item)) {\n      dynamic = normalizeIncomingArray(normalized, item, prev) || dynamic;\n    } else if (t === \"function\") {\n      if (unwrap) {\n        while (typeof item === \"function\") item = item();\n        dynamic = normalizeIncomingArray(normalized, Array.isArray(item) ? item : [item], Array.isArray(prev) ? prev : [prev]) || dynamic;\n      } else {\n        normalized.push(item);\n        dynamic = true;\n      }\n    } else {\n      const value = String(item);\n      if (prev && prev.nodeType === 3 && prev.data === value) normalized.push(prev);else normalized.push(document.createTextNode(value));\n    }\n  }\n  return dynamic;\n}\nfunction appendNodes(parent, array, marker = null) {\n  for (let i = 0, len = array.length; i < len; i++) parent.insertBefore(array[i], marker);\n}\nfunction cleanChildren(parent, current, marker, replacement) {\n  if (marker === undefined) return parent.textContent = \"\";\n  const node = replacement || document.createTextNode(\"\");\n  if (current.length) {\n    let inserted = false;\n    for (let i = current.length - 1; i >= 0; i--) {\n      const el = current[i];\n      if (node !== el) {\n        const isParent = el.parentNode === parent;\n        if (!inserted && !i) isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);else isParent && el.remove();\n      } else inserted = true;\n    }\n  } else parent.insertBefore(node, marker);\n  return [node];\n}\nfunction gatherHydratable(element, root) {\n  const templates = element.querySelectorAll(`*[data-hk]`);\n  for (let i = 0; i < templates.length; i++) {\n    const node = templates[i];\n    const key = node.getAttribute(\"data-hk\");\n    if ((!root || key.startsWith(root)) && !sharedConfig.registry.has(key)) sharedConfig.registry.set(key, node);\n  }\n}\nfunction getHydrationKey() {\n  return sharedConfig.getNextContextId();\n}\nfunction NoHydration(props) {\n  return sharedConfig.context ? undefined : props.children;\n}\nfunction Hydration(props) {\n  return props.children;\n}\nconst voidFn = () => undefined;\nconst RequestContext = Symbol();\nfunction innerHTML(parent, content) {\n  !sharedConfig.context && (parent.innerHTML = content);\n}\n\nfunction throwInBrowser(func) {\n  const err = new Error(`${func.name} is not supported in the browser, returning undefined`);\n  console.error(err);\n}\nfunction renderToString(fn, options) {\n  throwInBrowser(renderToString);\n}\nfunction renderToStringAsync(fn, options) {\n  throwInBrowser(renderToStringAsync);\n}\nfunction renderToStream(fn, options) {\n  throwInBrowser(renderToStream);\n}\nfunction ssr(template, ...nodes) {}\nfunction ssrElement(name, props, children, needsId) {}\nfunction ssrClassList(value) {}\nfunction ssrStyle(value) {}\nfunction ssrAttribute(key, value) {}\nfunction ssrHydrationKey() {}\nfunction resolveSSRNode(node) {}\nfunction escape(html) {}\nfunction ssrSpread(props, isSVG, skipChildren) {}\n\nconst isServer = false;\nconst isDev = false;\nconst SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nfunction createElement(tagName, isSVG = false, is = undefined) {\n  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName, {\n    is\n  });\n}\nconst hydrate = (...args) => {\n  enableHydration();\n  return hydrate$1(...args);\n};\nfunction Portal(props) {\n  const {\n      useShadow\n    } = props,\n    marker = document.createTextNode(\"\"),\n    mount = () => props.mount || document.body,\n    owner = getOwner();\n  let content;\n  let hydrating = !!sharedConfig.context;\n  createEffect(() => {\n    if (hydrating) getOwner().user = hydrating = false;\n    content || (content = runWithOwner(owner, () => createMemo(() => props.children)));\n    const el = mount();\n    if (el instanceof HTMLHeadElement) {\n      const [clean, setClean] = createSignal(false);\n      const cleanup = () => setClean(true);\n      createRoot(dispose => insert(el, () => !clean() ? content() : dispose(), null));\n      onCleanup(cleanup);\n    } else {\n      const container = createElement(props.isSVG ? \"g\" : \"div\", props.isSVG),\n        renderRoot = useShadow && container.attachShadow ? container.attachShadow({\n          mode: \"open\"\n        }) : container;\n      Object.defineProperty(container, \"_$host\", {\n        get() {\n          return marker.parentNode;\n        },\n        configurable: true\n      });\n      insert(renderRoot, content);\n      el.appendChild(container);\n      props.ref && props.ref(container);\n      onCleanup(() => el.removeChild(container));\n    }\n  }, undefined, {\n    render: !hydrating\n  });\n  return marker;\n}\nfunction createDynamic(component, props) {\n  const cached = createMemo(component);\n  return createMemo(() => {\n    const component = cached();\n    switch (typeof component) {\n      case \"function\":\n        return untrack(() => component(props));\n      case \"string\":\n        const isSvg = SVGElements.has(component);\n        const el = sharedConfig.context ? getNextElement() : createElement(component, isSvg, untrack(() => props.is));\n        spread(el, props, isSvg);\n        return el;\n    }\n  });\n}\nfunction Dynamic(props) {\n  const [, others] = splitProps(props, [\"component\"]);\n  return createDynamic(() => props.component, others);\n}\n\nexport { Aliases, voidFn as Assets, ChildProperties, DOMElements, DelegatedEvents, Dynamic, Hydration, voidFn as HydrationScript, NoHydration, Portal, Properties, RequestContext, SVGElements, SVGNamespace, addEventListener, assign, classList, className, clearDelegatedEvents, createDynamic, delegateEvents, dynamicProperty, escape, voidFn as generateHydrationScript, voidFn as getAssets, getHydrationKey, getNextElement, getNextMarker, getNextMatch, getPropAlias, voidFn as getRequestEvent, hydrate, innerHTML, insert, isDev, isServer, memo, render, renderToStream, renderToString, renderToStringAsync, resolveSSRNode, runHydrationEvents, setAttribute, setAttributeNS, setBoolAttribute, setProperty, setStyleProperty, spread, ssr, ssrAttribute, ssrClassList, ssrElement, ssrHydrationKey, ssrSpread, ssrStyle, style, template, use, voidFn as useAssets };\n","import type { Component } from \"solid-js\";\n\nconst StaticElements: Component = () => {\n    return (\n<g id=\"static\">\n    <g id=\"pipes\">\n    <line\n        id=\"Line 21\"\n        x1=\"-48\"\n        y1=\"658.5\"\n        x2=\"1452\"\n        y2=\"658.5\"\n        stroke=\"black\"\n    />\n    <rect\n        id=\"Rectangle 73\"\n        x=\"390.5\"\n        y=\"159.5\"\n        width=\"301\"\n        height=\"19\"\n        transform=\"rotate(90 390.5 159.5)\"\n        fill=\"url(#paint0_linear_6_626)\"\n        stroke=\"black\"\n    />\n    <rect\n        id=\"Rectangle 81\"\n        x=\"974.5\"\n        y=\"403.5\"\n        width=\"61\"\n        height=\"19\"\n        transform=\"rotate(90 974.5 403.5)\"\n        fill=\"url(#paint1_linear_6_626)\"\n        stroke=\"black\"\n    />\n    <rect\n        id=\"Rectangle 79\"\n        x=\"507.5\"\n        y=\"403.5\"\n        width=\"19\"\n        height=\"19\"\n        transform=\"rotate(90 507.5 403.5)\"\n        fill=\"url(#paint2_linear_6_626)\"\n        stroke=\"black\"\n    />\n    <path\n        id=\"Rectangle 80\"\n        d=\"M507.5 670.933C507.493 670.945 507.482 670.966 507.46 670.992C507.373 671.096 507.14 671.306 506.564 671.536C505.404 672 502.981 672.5 498 672.5C493.019 672.5 490.596 672 489.436 671.536C488.86 671.306 488.627 671.096 488.54 670.992C488.518 670.966 488.507 670.945 488.5 670.933V591.5H507.5V670.933Z\"\n        fill=\"url(#paint3_linear_6_626)\"\n        stroke=\"black\"\n    />\n    <rect\n        id=\"Rectangle 76\"\n        x=\"262.5\"\n        y=\"159.5\"\n        width=\"88\"\n        height=\"19\"\n        transform=\"rotate(90 262.5 159.5)\"\n        fill=\"url(#paint4_linear_6_626)\"\n        stroke=\"black\"\n    />\n    <rect\n        id=\"Rectangle 74\"\n        x=\"186.5\"\n        y=\"481.5\"\n        width=\"165\"\n        height=\"19\"\n        fill=\"url(#paint5_linear_6_626)\"\n        stroke=\"black\"\n    />\n    <rect\n        id=\"Rectangle 75\"\n        x=\"282.5\"\n        y=\"125.5\"\n        width=\"68\"\n        height=\"19\"\n        fill=\"url(#paint6_linear_6_626)\"\n        stroke=\"black\"\n    />\n    <rect\n        id=\"Rectangle 77\"\n        x=\"-74.5\"\n        y=\"268.5\"\n        width=\"297\"\n        height=\"19\"\n        fill=\"url(#paint7_linear_6_626)\"\n        stroke=\"black\"\n    />\n    <rect\n        id=\"Rectangle 78\"\n        x=\"850.5\"\n        y=\"125.5\"\n        width=\"82\"\n        height=\"19\"\n        transform=\"rotate(90 850.5 125.5)\"\n        fill=\"url(#paint8_linear_6_626)\"\n        stroke=\"black\"\n    />\n    <path\n        id=\"Ellipse 9\"\n        d=\"M841 104.5C843.464 104.5 845.836 106.562 847.622 110.224C849.392 113.851 850.5 118.898 850.5 124.5C850.5 130.102 849.392 135.149 847.622 138.776C845.836 142.438 843.464 144.5 841 144.5C838.536 144.5 836.164 142.438 834.378 138.776C832.608 135.149 831.5 130.102 831.5 124.5C831.5 118.898 832.608 113.851 834.378 110.224C836.164 106.562 838.536 104.5 841 104.5Z\"\n        fill=\"url(#paint9_linear_6_626)\"\n        stroke=\"black\"\n    />\n    <path\n        id=\"Arrow 1\"\n        d=\"M841.707 40.2929C841.317 39.9024 840.683 39.9024 840.293 40.2929L833.929 46.6569C833.538 47.0474 833.538 47.6805 833.929 48.0711C834.319 48.4616 834.953 48.4616 835.343 48.0711L841 42.4142L846.657 48.0711C847.047 48.4616 847.681 48.4616 848.071 48.0711C848.462 47.6805 848.462 47.0474 848.071 46.6569L841.707 40.2929ZM841 96L842 96L842 41L841 41L840 41L840 96L841 96Z\"\n        fill=\"black\"\n    />\n    <path\n        id=\"vent\"\n        d=\"M867.364 75.2727L864.136 84H862.773L859.545 75.2727H861L863.409 82.2273H863.5L865.909 75.2727H867.364ZM872.48 84.1818C871.639 84.1818 870.914 83.9962 870.304 83.625C869.698 83.25 869.23 82.7273 868.901 82.0568C868.575 81.3826 868.412 80.5985 868.412 79.7045C868.412 78.8106 868.575 78.0227 868.901 77.3409C869.23 76.6553 869.688 76.1212 870.276 75.7386C870.866 75.3523 871.556 75.1591 872.344 75.1591C872.798 75.1591 873.247 75.2348 873.69 75.3864C874.134 75.5379 874.537 75.7841 874.901 76.125C875.264 76.4621 875.554 76.9091 875.77 77.4659C875.986 78.0227 876.094 78.7083 876.094 79.5227V80.0909H869.366V78.9318H874.73C874.73 78.4394 874.632 78 874.435 77.6136C874.241 77.2273 873.965 76.9223 873.605 76.6989C873.249 76.4754 872.829 76.3636 872.344 76.3636C871.81 76.3636 871.348 76.4962 870.957 76.7614C870.571 77.0227 870.274 77.3636 870.065 77.7841C869.857 78.2045 869.753 78.6553 869.753 79.1364V79.9091C869.753 80.5682 869.866 81.1269 870.094 81.5852C870.325 82.0398 870.645 82.3864 871.054 82.625C871.463 82.8598 871.938 82.9773 872.48 82.9773C872.832 82.9773 873.151 82.928 873.435 82.8295C873.723 82.7273 873.971 82.5758 874.179 82.375C874.387 82.1705 874.548 81.9167 874.662 81.6136L875.957 81.9773C875.821 82.4167 875.592 82.803 875.27 83.1364C874.948 83.4659 874.55 83.7235 874.077 83.9091C873.603 84.0909 873.071 84.1818 872.48 84.1818ZM879.474 78.75V84H878.134V75.2727H879.429V76.6364H879.543C879.747 76.1932 880.058 75.8371 880.474 75.5682C880.891 75.2955 881.429 75.1591 882.088 75.1591C882.679 75.1591 883.196 75.2803 883.639 75.5227C884.082 75.7614 884.427 76.125 884.673 76.6136C884.92 77.0985 885.043 77.7121 885.043 78.4545V84H883.702V78.5455C883.702 77.8598 883.524 77.3258 883.168 76.9432C882.812 76.5568 882.323 76.3636 881.702 76.3636C881.274 76.3636 880.891 76.4564 880.554 76.642C880.221 76.8277 879.957 77.0985 879.764 77.4545C879.571 77.8106 879.474 78.2424 879.474 78.75ZM891.288 75.2727V76.4091H886.766V75.2727H891.288ZM888.084 73.1818H889.425V81.5C889.425 81.8788 889.48 82.1629 889.589 82.3523C889.703 82.5379 889.847 82.6629 890.021 82.7273C890.199 82.7879 890.387 82.8182 890.584 82.8182C890.732 82.8182 890.853 82.8106 890.947 82.7955C891.042 82.7765 891.118 82.7614 891.175 82.75L891.447 83.9545C891.357 83.9886 891.23 84.0227 891.067 84.0568C890.904 84.0947 890.697 84.1136 890.447 84.1136C890.069 84.1136 889.697 84.0322 889.334 83.8693C888.974 83.7064 888.675 83.4583 888.436 83.125C888.201 82.7917 888.084 82.3712 888.084 81.8636V73.1818Z\"\n        fill=\"black\"\n    />\n    <g id=\"body\">\n        <path\n        id=\"Rectangle 48\"\n        d=\"M392.5 474.5H369.466C369.332 475.527 368.805 476.66 368.001 477.579C367.151 478.55 365.952 479.325 364.5 479.473V502.548C364.96 502.631 365.426 502.817 365.868 503.062C366.477 503.401 367.076 503.869 367.604 504.396C368.131 504.924 368.599 505.523 368.938 506.132C369.183 506.574 369.369 507.04 369.452 507.5H392.5V474.5Z\"\n        fill=\"url(#paint10_linear_6_626)\"\n        stroke=\"black\"\n        />\n        <rect\n        id=\"Rectangle 49\"\n        x=\"-0.5\"\n        y=\"-0.5\"\n        width=\"14\"\n        height=\"29\"\n        rx=\"0.5\"\n        transform=\"matrix(0 -1 -1 0 395 474)\"\n        fill=\"url(#paint11_linear_6_626)\"\n        stroke=\"black\"\n        />\n        <rect\n        id=\"Rectangle 51\"\n        x=\"-0.5\"\n        y=\"0.5\"\n        width=\"14\"\n        height=\"29\"\n        rx=\"0.5\"\n        transform=\"matrix(-1 0 0 1 364 476)\"\n        fill=\"url(#paint12_linear_6_626)\"\n        stroke=\"black\"\n        />\n        <rect\n        id=\"Rectangle 50\"\n        x=\"-0.5\"\n        y=\"-0.5\"\n        width=\"12\"\n        height=\"29\"\n        rx=\"0.5\"\n        transform=\"matrix(0 -1 -1 0 395 517)\"\n        fill=\"url(#paint13_linear_6_626)\"\n        stroke=\"black\"\n        />\n    </g>\n    <g id=\"body_2\">\n        <path\n        id=\"Rectangle 48_2\"\n        d=\"M976.5 478.5H953.466C953.332 479.527 952.805 480.66 952.001 481.579C951.151 482.55 949.952 483.325 948.5 483.473V506.548C948.96 506.631 949.426 506.817 949.868 507.062C950.477 507.401 951.076 507.869 951.604 508.396C952.131 508.924 952.599 509.523 952.938 510.132C953.183 510.574 953.369 511.04 953.452 511.5H976.5V478.5Z\"\n        fill=\"url(#paint14_linear_6_626)\"\n        stroke=\"black\"\n        />\n        <rect\n        id=\"Rectangle 49_2\"\n        x=\"-0.5\"\n        y=\"-0.5\"\n        width=\"14\"\n        height=\"29\"\n        rx=\"0.5\"\n        transform=\"matrix(0 -1 -1 0 979 478)\"\n        fill=\"url(#paint15_linear_6_626)\"\n        stroke=\"black\"\n        />\n        <rect\n        id=\"Rectangle 51_2\"\n        x=\"-0.5\"\n        y=\"0.5\"\n        width=\"14\"\n        height=\"29\"\n        rx=\"0.5\"\n        transform=\"matrix(-1 0 0 1 948 480)\"\n        fill=\"url(#paint16_linear_6_626)\"\n        stroke=\"black\"\n        />\n        <rect\n        id=\"Rectangle 50_2\"\n        x=\"-0.5\"\n        y=\"-0.5\"\n        width=\"12\"\n        height=\"29\"\n        rx=\"0.5\"\n        transform=\"matrix(0 -1 -1 0 979 521)\"\n        fill=\"url(#paint17_linear_6_626)\"\n        stroke=\"black\"\n        />\n    </g>\n    <g id=\"body_3\">\n        <path\n        id=\"Rectangle 48_3\"\n        d=\"M264.5 261.5H241.466C241.332 262.527 240.805 263.66 240.001 264.579C239.151 265.55 237.952 266.325 236.5 266.473V289.548C236.96 289.631 237.426 289.817 237.868 290.062C238.477 290.401 239.076 290.869 239.604 291.396C240.131 291.924 240.599 292.523 240.938 293.132C241.183 293.574 241.369 294.04 241.452 294.5H264.5V261.5Z\"\n        fill=\"url(#paint18_linear_6_626)\"\n        stroke=\"black\"\n        />\n        <rect\n        id=\"Rectangle 49_3\"\n        x=\"-0.5\"\n        y=\"-0.5\"\n        width=\"14\"\n        height=\"29\"\n        rx=\"0.5\"\n        transform=\"matrix(0 -1 -1 0 267 261)\"\n        fill=\"url(#paint19_linear_6_626)\"\n        stroke=\"black\"\n        />\n        <rect\n        id=\"Rectangle 51_3\"\n        x=\"-0.5\"\n        y=\"0.5\"\n        width=\"14\"\n        height=\"29\"\n        rx=\"0.5\"\n        transform=\"matrix(-1 0 0 1 236 263)\"\n        fill=\"url(#paint20_linear_6_626)\"\n        stroke=\"black\"\n        />\n        <rect\n        id=\"Rectangle 50_3\"\n        x=\"-0.5\"\n        y=\"-0.5\"\n        width=\"12\"\n        height=\"29\"\n        rx=\"0.5\"\n        transform=\"matrix(0 -1 -1 0 267 304)\"\n        fill=\"url(#paint21_linear_6_626)\"\n        stroke=\"black\"\n        />\n    </g>\n    <g id=\"body_4\">\n        <path\n        id=\"Rectangle 48_4\"\n        d=\"M392.5 118.5H369.466C369.332 119.527 368.805 120.66 368.001 121.579C367.151 122.55 365.952 123.325 364.5 123.473V146.548C364.96 146.631 365.426 146.817 365.868 147.062C366.477 147.401 367.076 147.869 367.604 148.396C368.131 148.924 368.599 149.523 368.938 150.132C369.183 150.574 369.369 151.04 369.452 151.5H392.5V118.5Z\"\n        fill=\"url(#paint22_linear_6_626)\"\n        stroke=\"black\"\n        />\n        <rect\n        id=\"Rectangle 49_4\"\n        x=\"-0.5\"\n        y=\"-0.5\"\n        width=\"14\"\n        height=\"29\"\n        rx=\"0.5\"\n        transform=\"matrix(0 -1 -1 0 395 118)\"\n        fill=\"url(#paint23_linear_6_626)\"\n        stroke=\"black\"\n        />\n        <rect\n        id=\"Rectangle 51_4\"\n        x=\"-0.5\"\n        y=\"0.5\"\n        width=\"14\"\n        height=\"29\"\n        rx=\"0.5\"\n        transform=\"matrix(-1 0 0 1 364 120)\"\n        fill=\"url(#paint24_linear_6_626)\"\n        stroke=\"black\"\n        />\n        <rect\n        id=\"Rectangle 50_4\"\n        x=\"-0.5\"\n        y=\"-0.5\"\n        width=\"12\"\n        height=\"29\"\n        rx=\"0.5\"\n        transform=\"matrix(0 -1 -1 0 395 161)\"\n        fill=\"url(#paint25_linear_6_626)\"\n        stroke=\"black\"\n        />\n    </g>\n    <g id=\"body_5\">\n        <path\n        id=\"Rectangle 48_5\"\n        d=\"M241.5 118.5H264.534C264.668 119.527 265.195 120.66 265.999 121.579C266.849 122.55 268.048 123.325 269.5 123.473V146.548C269.04 146.631 268.574 146.817 268.132 147.062C267.523 147.401 266.924 147.869 266.396 148.396C265.869 148.924 265.401 149.523 265.062 150.132C264.817 150.574 264.631 151.04 264.548 151.5H241.5V118.5Z\"\n        fill=\"url(#paint26_radial_6_626)\"\n        stroke=\"black\"\n        />\n        <rect\n        id=\"Rectangle 49_5\"\n        x=\"-0.5\"\n        y=\"-0.5\"\n        width=\"14\"\n        height=\"29\"\n        rx=\"0.5\"\n        transform=\"matrix(0 -1 -1 0 267 118)\"\n        fill=\"url(#paint27_linear_6_626)\"\n        stroke=\"black\"\n        />\n        <rect\n        id=\"Rectangle 51_5\"\n        x=\"269.5\"\n        y=\"120.5\"\n        width=\"14\"\n        height=\"29\"\n        rx=\"0.5\"\n        fill=\"url(#paint28_linear_6_626)\"\n        stroke=\"black\"\n        />\n        <rect\n        id=\"Rectangle 50_5\"\n        x=\"-0.5\"\n        y=\"-0.5\"\n        width=\"12\"\n        height=\"29\"\n        rx=\"0.5\"\n        transform=\"matrix(0 -1 -1 0 267 161)\"\n        fill=\"url(#paint29_linear_6_626)\"\n        stroke=\"black\"\n        />\n    </g>\n    <g id=\"body_6\">\n        <path\n        id=\"Rectangle 48_6\"\n        d=\"M486.5 423.5H509.534C509.668 424.527 510.195 425.66 510.999 426.579C511.849 427.55 513.048 428.325 514.5 428.473V451.548C514.04 451.631 513.574 451.817 513.132 452.062C512.523 452.401 511.924 452.869 511.396 453.396C510.869 453.924 510.401 454.523 510.062 455.132C509.817 455.574 509.631 456.04 509.548 456.5H486.5V423.5Z\"\n        fill=\"url(#paint30_radial_6_626)\"\n        stroke=\"black\"\n        />\n        <rect\n        id=\"Rectangle 49_6\"\n        x=\"-0.5\"\n        y=\"-0.5\"\n        width=\"14\"\n        height=\"29\"\n        rx=\"0.5\"\n        transform=\"matrix(0 -1 -1 0 512 423)\"\n        fill=\"url(#paint31_linear_6_626)\"\n        stroke=\"black\"\n        />\n        <rect\n        id=\"Rectangle 51_6\"\n        x=\"514.5\"\n        y=\"425.5\"\n        width=\"14\"\n        height=\"29\"\n        rx=\"0.5\"\n        fill=\"url(#paint32_linear_6_626)\"\n        stroke=\"black\"\n        />\n        <rect\n        id=\"Rectangle 50_6\"\n        x=\"-0.5\"\n        y=\"-0.5\"\n        width=\"12\"\n        height=\"29\"\n        rx=\"0.5\"\n        transform=\"matrix(0 -1 -1 0 512 466)\"\n        fill=\"url(#paint33_linear_6_626)\"\n        stroke=\"black\"\n        />\n    </g>\n    <g id=\"elbow\">\n        <path\n        id=\"Rectangle 48_7\"\n        d=\"M173.5 479.503C164.332 479.589 157.396 482.062 152.729 486.729C148.062 491.396 145.59 498.332 145.504 507.5H168.548C168.631 507.04 168.817 506.574 169.063 506.132C169.401 505.523 169.869 504.924 170.396 504.396C170.924 503.869 171.523 503.401 172.132 503.062C172.574 502.817 173.04 502.631 173.5 502.548V479.503Z\"\n        fill=\"url(#paint34_radial_6_626)\"\n        stroke=\"black\"\n        />\n        <rect\n        id=\"Rectangle 51_7\"\n        x=\"0.5\"\n        y=\"0.5\"\n        width=\"14\"\n        height=\"29\"\n        rx=\"0.5\"\n        transform=\"matrix(0 1 1 0 142 507)\"\n        fill=\"url(#paint35_linear_6_626)\"\n        stroke=\"black\"\n        />\n        <rect\n        id=\"Rectangle 50_7\"\n        x=\"-0.5\"\n        y=\"0.5\"\n        width=\"14\"\n        height=\"29\"\n        rx=\"0.5\"\n        transform=\"matrix(-1 0 0 1 187 476)\"\n        fill=\"url(#paint36_linear_6_626)\"\n        stroke=\"black\"\n        />\n    </g>\n    </g>\n    <g id=\"wire\">\n    <rect\n        id=\"Rectangle 52\"\n        x=\"-0.5\"\n        y=\"-0.5\"\n        width=\"4\"\n        height=\"15\"\n        rx=\"0.5\"\n        transform=\"matrix(0 -1 -1 0 388 521)\"\n        fill=\"url(#paint37_linear_6_626)\"\n        stroke=\"black\"\n    />\n    <path\n        id=\"Vector 1\"\n        d=\"M382 522C382 528 382.667 541.5 378 545C373.333 548.5 369 546 369 541C369 536 374 535.5 377 537C380 538.5 382 541 381.5 547C381 553 372 558.5 372 565\"\n        stroke=\"#3B3B3B\"\n    />\n    </g>\n    <g id=\"wire_2\">\n    <rect\n        id=\"Rectangle 52_2\"\n        x=\"-0.5\"\n        y=\"0.5\"\n        width=\"4\"\n        height=\"15\"\n        rx=\"0.5\"\n        transform=\"matrix(-1 0 0 1 532 432)\"\n        fill=\"url(#paint38_linear_6_626)\"\n        stroke=\"black\"\n    />\n    <path\n        id=\"Vector 1_2\"\n        d=\"M533 439C539 439 552.5 438.333 556 443C559.5 447.667 557 452 552 452C547 452 546.5 447 548 444C549.5 441 552 439 558 439.5C564 440 569.5 449 576 449\"\n        stroke=\"#3B3B3B\"\n    />\n    </g>\n    <g id=\"wire_3\">\n    <rect\n        id=\"Rectangle 52_3\"\n        x=\"930.5\"\n        y=\"487.5\"\n        width=\"4\"\n        height=\"15\"\n        rx=\"0.5\"\n        fill=\"url(#paint39_linear_6_626)\"\n        stroke=\"black\"\n    />\n    <path\n        id=\"Vector 1_3\"\n        d=\"M930 494C924 494 910.5 493.333 907 498C903.5 502.667 906 507 911 507C916 507 916.5 502 915 499C913.5 496 911 494 905 494.5C899 495 893.5 504 887 504\"\n        stroke=\"#3B3B3B\"\n    />\n    </g>\n    <g id=\"wire_4\">\n    <rect\n        id=\"Rectangle 52_4\"\n        x=\"-0.5\"\n        y=\"-0.5\"\n        width=\"4\"\n        height=\"15\"\n        rx=\"0.5\"\n        transform=\"matrix(0 -1 -1 0 260 308)\"\n        fill=\"url(#paint40_linear_6_626)\"\n        stroke=\"black\"\n    />\n    <path\n        id=\"Vector 1_4\"\n        d=\"M254 309C254 315 254.667 328.5 250 332C245.333 335.5 241 333 241 328C241 323 246 322.5 249 324C252 325.5 254 328 253.5 334C253 340 244 345.5 244 352\"\n        stroke=\"#3B3B3B\"\n    />\n    </g>\n    <g id=\"steamTrap\">\n    <path\n        id=\"Rectangle 31\"\n        d=\"M280 468.786C280.828 468.786 281.5 469.457 281.5 470.286V544C281.5 547.037 279.037 549.5 276 549.5H241.429C232.868 549.5 225.929 542.56 225.929 534V468.786H280Z\"\n        fill=\"#364C7C\"\n        stroke=\"black\"\n    />\n    <path\n        id=\"Rectangle 33\"\n        d=\"M308.214 470.357V513.357H285.643V470.357H308.214Z\"\n        fill=\"#364C7C\"\n        stroke=\"black\"\n    />\n    <rect\n        id=\"Rectangle 21\"\n        x=\"228.071\"\n        y=\"514.929\"\n        width=\"22.5714\"\n        height=\"46.1429\"\n        rx=\"1.5\"\n        transform=\"rotate(180 228.071 514.929)\"\n        fill=\"#364C7C\"\n        stroke=\"black\"\n    />\n    <path\n        id=\"Rectangle 32\"\n        d=\"M265.5 538.107C253.019 538.107 244.284 534.369 240.699 532.502C239.698 531.98 239.112 530.917 239.112 529.744V470.024C239.112 469.196 239.783 468.524 240.612 468.524H290.389C291.217 468.524 291.889 469.196 291.889 470.024V529.744C291.889 530.917 291.302 531.98 290.3 532.502C286.715 534.369 277.981 538.107 265.5 538.107Z\"\n        fill=\"#364C7C\"\n        stroke=\"black\"\n    />\n    <rect\n        id=\"Rectangle 22\"\n        x=\"0.5\"\n        y=\"-0.5\"\n        width=\"22.5714\"\n        height=\"46.1429\"\n        rx=\"1.5\"\n        transform=\"matrix(1 0 0 -1 302.429 514.429)\"\n        fill=\"#364C7C\"\n        stroke=\"black\"\n    />\n    <path\n        id=\"Rectangle 35\"\n        d=\"M253 440.5H294C299.247 440.5 303.5 444.753 303.5 450V455.286C303.5 456.114 302.828 456.786 302 456.786H251C250.172 456.786 249.5 456.114 249.5 455.286V444C249.5 442.067 251.067 440.5 253 440.5Z\"\n        fill=\"#364C7C\"\n        stroke=\"black\"\n    />\n    <rect\n        id=\"Rectangle 34\"\n        x=\"308.694\"\n        y=\"470.885\"\n        width=\"86.3889\"\n        height=\"15.8056\"\n        rx=\"1.5\"\n        transform=\"rotate(180 308.694 470.885)\"\n        fill=\"#364C7C\"\n        stroke=\"black\"\n    />\n    <line\n        id=\"Line 5\"\n        x1=\"222.286\"\n        y1=\"463.071\"\n        x2=\"308.714\"\n        y2=\"463.071\"\n        stroke=\"black\"\n    />\n    </g>\n    <g id=\"condDrain\">\n    <path\n        id=\"Rectangle 30\"\n        d=\"M103.581 668.5H209.847C215.797 668.5 220.923 672.695 222.101 678.527L232.796 731.527C234.358 739.268 228.44 746.5 220.543 746.5H92.8857C84.9888 746.5 79.0707 739.268 80.6328 731.527L91.3281 678.527C92.5052 672.695 97.6309 668.5 103.581 668.5Z\"\n        fill=\"#888888\"\n        stroke=\"black\"\n    />\n    <path\n        id=\"Rectangle 31_2\"\n        d=\"M106.27 672.747H206.83C211.346 672.747 215.238 675.927 216.139 680.353L226.069 729.159C227.267 735.047 222.768 740.554 216.761 740.554H97.0625C91.1102 740.554 86.6244 735.142 87.7275 729.293L96.9346 680.487C97.7813 675.998 101.702 672.747 106.27 672.747Z\"\n        fill=\"#CECECE\"\n        stroke=\"black\"\n    />\n    <path\n        id=\"Line 9\"\n        d=\"M160 681.591L162 730.86\"\n        stroke=\"black\"\n        stroke-width=\"8\"\n        stroke-linecap=\"round\"\n    />\n    <path\n        id=\"Line 10\"\n        d=\"M143 681.591L141 730.86\"\n        stroke=\"black\"\n        stroke-width=\"8\"\n        stroke-linecap=\"round\"\n    />\n    <path\n        id=\"Line 11\"\n        d=\"M126 681.591L121 730.86\"\n        stroke=\"black\"\n        stroke-width=\"8\"\n        stroke-linecap=\"round\"\n    />\n    <path\n        id=\"Line 12\"\n        d=\"M109 681.591L101 730.86\"\n        stroke=\"black\"\n        stroke-width=\"8\"\n        stroke-linecap=\"round\"\n    />\n    <path\n        id=\"Rectangle 45\"\n        d=\"M172.589 684.732C172.273 681.22 175.039 678.194 178.565 678.194H204.88C207.783 678.194 210.269 680.272 210.784 683.129L218.727 727.194C219.39 730.874 216.562 734.258 212.822 734.258H182.536C179.431 734.258 176.839 731.889 176.56 728.797L172.589 684.732Z\"\n        fill=\"black\"\n    />\n    </g>\n    <g id=\"outDrain\">\n    <path\n        id=\"Rectangle 30_2\"\n        d=\"M913.581 668.5H1019.85C1025.8 668.5 1030.92 672.695 1032.1 678.527L1042.8 731.527C1044.36 739.268 1038.44 746.5 1030.54 746.5H902.886C894.989 746.5 889.071 739.268 890.633 731.527L901.328 678.527C902.505 672.695 907.631 668.5 913.581 668.5Z\"\n        fill=\"#888888\"\n        stroke=\"black\"\n    />\n    <path\n        id=\"Rectangle 31_3\"\n        d=\"M916.27 672.747H1016.83C1021.35 672.747 1025.24 675.927 1026.14 680.353L1036.07 729.159C1037.27 735.047 1032.77 740.554 1026.76 740.554H907.062C901.11 740.554 896.624 735.142 897.728 729.293L906.935 680.487C907.781 675.998 911.702 672.747 916.27 672.747Z\"\n        fill=\"#CECECE\"\n        stroke=\"black\"\n    />\n    <path\n        id=\"Line 9_2\"\n        d=\"M970 681.591L972 730.86\"\n        stroke=\"black\"\n        stroke-width=\"8\"\n        stroke-linecap=\"round\"\n    />\n    <path\n        id=\"Line 10_2\"\n        d=\"M953 681.591L951 730.86\"\n        stroke=\"black\"\n        stroke-width=\"8\"\n        stroke-linecap=\"round\"\n    />\n    <path\n        id=\"Line 11_2\"\n        d=\"M936 681.591L931 730.86\"\n        stroke=\"black\"\n        stroke-width=\"8\"\n        stroke-linecap=\"round\"\n    />\n    <path\n        id=\"Line 12_2\"\n        d=\"M919 681.591L911 730.86\"\n        stroke=\"black\"\n        stroke-width=\"8\"\n        stroke-linecap=\"round\"\n    />\n    <path\n        id=\"Rectangle 45_2\"\n        d=\"M982.589 684.732C982.273 681.22 985.039 678.194 988.565 678.194H1014.88C1017.78 678.194 1020.27 680.272 1020.78 683.129L1028.73 727.194C1029.39 730.874 1026.56 734.258 1022.82 734.258H992.536C989.431 734.258 986.839 731.889 986.56 728.797L982.589 684.732Z\"\n        fill=\"black\"\n    />\n    </g>\n    <g id=\"regulator\">\n    <g id=\"Rectangle 79_2\">\n        <path d=\"M241 95H265V98H241V95Z\" fill=\"#CECFD0\" />\n        <path\n        d=\"M241 95V94.75H240.653L240.763 95.0795L241 95ZM241.1 95L241.335 94.9149L241.275 94.75H241.1V95ZM241.175 95.207L240.94 95.2922L240.991 95.4342L241.141 95.4547L241.175 95.207ZM241.35 95.2311L241.316 95.4788L241.433 95.4948L241.519 95.415L241.35 95.2311ZM241.525 95.0699L241.429 94.8389L241.388 94.8559L241.356 94.886L241.525 95.0699ZM241.7 94.9975L241.796 95.2285L241.861 95.2015L241.902 95.1446L241.7 94.9975ZM241.875 94.7572L242.066 94.5958L241.86 94.3526L241.673 94.61L241.875 94.7572ZM242.05 94.9642L242.254 94.8191L242.248 94.8107L242.241 94.8028L242.05 94.9642ZM242.225 95.2098L242.021 95.3549L242.216 95.6278L242.422 95.3635L242.225 95.2098ZM242.4 94.9855L242.298 94.757L242.241 94.7824L242.203 94.8317L242.4 94.9855ZM242.575 94.9077L242.674 94.6782L242.574 94.6347L242.473 94.6792L242.575 94.9077ZM242.75 94.9833L242.651 95.2128L242.781 95.269L242.896 95.1861L242.75 94.9833ZM242.925 94.8572L243.086 94.6656L242.937 94.5407L242.779 94.6544L242.925 94.8572ZM243.1 95.0038L242.939 95.1954L243.135 95.3595L243.295 95.1601L243.1 95.0038ZM243.275 94.7854L243.483 94.6468L243.294 94.3624L243.08 94.6291L243.275 94.7854ZM243.45 95.0482L243.242 95.1868L243.347 95.3444L243.527 95.286L243.45 95.0482ZM243.625 94.9914L243.609 94.7419L243.578 94.7439L243.548 94.7536L243.625 94.9914ZM243.8 94.9805L243.816 95.23L243.875 95.2262L243.927 95.1958L243.8 94.9805ZM243.975 94.8773L244.145 94.6939L244.008 94.5675L243.848 94.6619L243.975 94.8773ZM244.15 95.0393L243.98 95.2228L244.169 95.3973L244.338 95.2041L244.15 95.0393ZM244.325 94.8397L244.33 94.5898L244.214 94.5876L244.137 94.6749L244.325 94.8397ZM244.5 94.843L244.558 94.5999L244.532 94.5936L244.505 94.5931L244.5 94.843ZM244.675 94.8848L244.617 95.128L244.673 95.1413L244.728 95.1291L244.675 94.8848ZM244.85 94.8466L245.079 94.7468L244.997 94.5585L244.797 94.6024L244.85 94.8466ZM245.025 95.2485L244.796 95.3483L244.981 95.7741L245.235 95.3849L245.025 95.2485ZM245.2 94.9797L245.026 94.7999L245.006 94.8196L244.99 94.8433L245.2 94.9797ZM245.375 94.8105L245.376 94.5605L245.274 94.5603L245.201 94.6308L245.375 94.8105ZM245.55 94.8111L245.589 94.5641L245.57 94.5611L245.551 94.5611L245.55 94.8111ZM245.725 94.8387L245.927 94.6917L245.866 94.6079L245.764 94.5917L245.725 94.8387ZM245.9 95.0794L245.698 95.2264L245.723 95.2608L245.758 95.285L245.9 95.0794ZM246.075 95.2004L245.933 95.406L246.024 95.4694L246.133 95.4436L246.075 95.2004ZM246.25 95.1588L246.308 95.402L246.42 95.3754L246.473 95.2727L246.25 95.1588ZM246.425 94.8169L246.615 94.6547L246.373 94.3702L246.202 94.703L246.425 94.8169ZM246.6 95.0223L246.41 95.1844L246.622 95.433L246.806 95.1636L246.6 95.0223ZM246.775 94.7669L246.863 94.533L246.68 94.4638L246.569 94.6256L246.775 94.7669ZM246.95 94.8329L247.177 94.7284L247.134 94.6352L247.038 94.599L246.95 94.8329ZM247.125 95.213L246.898 95.3175L246.961 95.4542L247.111 95.4626L247.125 95.213ZM247.3 95.2228L247.286 95.4724L247.365 95.4768L247.432 95.4351L247.3 95.2228ZM247.475 95.114L247.44 94.8665L247.388 94.8739L247.343 94.9017L247.475 95.114ZM247.65 95.089L247.685 95.3364L247.741 95.3285L247.787 95.2979L247.65 95.089ZM247.825 94.974L247.985 94.7815L247.842 94.6635L247.688 94.765L247.825 94.974ZM248 95.1191L247.84 95.3115L248.063 95.4961L248.213 95.2493L248 95.1191ZM248.175 94.8323L248.098 94.5943L248.01 94.6227L247.962 94.7021L248.175 94.8323ZM248.35 94.776L248.56 94.6409L248.457 94.4791L248.273 94.538L248.35 94.776ZM248.525 95.0487L248.315 95.1837L248.524 95.51L248.735 95.1846L248.525 95.0487ZM248.7 94.7785L248.887 94.6124L248.669 94.3671L248.49 94.6426L248.7 94.7785ZM248.875 94.9753L248.688 95.1414L248.837 95.3085L249.019 95.1795L248.875 94.9753ZM249.05 94.8517L249.263 94.7206L249.123 94.4938L248.906 94.6475L249.05 94.8517ZM249.225 95.136L249.012 95.2671L249.063 95.3492L249.155 95.3761L249.225 95.136ZM249.4 95.1868L249.33 95.4269L249.364 95.4367L249.4 95.4368L249.4 95.1868ZM249.575 95.1869L249.575 95.4369L249.735 95.437L249.802 95.2916L249.575 95.1869ZM249.75 94.8072L249.719 94.5592L249.581 94.5767L249.523 94.7026L249.75 94.8072ZM249.925 94.7851L249.989 94.5435L249.942 94.5309L249.894 94.5371L249.925 94.7851ZM250.1 94.8316L250.036 95.0732L250.091 95.0877L250.146 95.0772L250.1 94.8316ZM250.275 94.7985L250.451 94.6211L250.358 94.5284L250.229 94.5528L250.275 94.7985ZM250.45 94.9722L250.634 94.8026L250.626 94.7948L250.45 94.9722ZM250.625 95.1621L250.441 95.3315L250.522 95.4192L250.641 95.4116L250.625 95.1621ZM250.8 95.1511L250.816 95.4006L250.939 95.3927L251.008 95.2898L250.8 95.1511ZM250.975 94.8886L251.173 94.7365L250.961 94.4593L250.767 94.7499L250.975 94.8886ZM251.15 95.1168L250.952 95.2689L251.077 95.432L251.261 95.3408L251.15 95.1168ZM251.325 95.0301L251.462 94.8207L251.342 94.7427L251.214 94.8061L251.325 95.0301ZM251.5 95.1442L251.363 95.3536L251.469 95.4227L251.588 95.3783L251.5 95.1442ZM251.675 95.0785L251.638 94.8313L251.612 94.8352L251.587 94.8445L251.675 95.0785ZM251.85 95.0524L251.887 95.2997L251.971 95.2872L252.03 95.226L251.85 95.0524ZM252.025 94.8711L252.246 94.7547L252.085 94.4485L251.845 94.6975L252.025 94.8711ZM252.2 95.204L251.979 95.3203L252.198 95.7376L252.42 95.3219L252.2 95.204ZM252.375 94.8769L252.447 94.6373L252.251 94.5789L252.155 94.7589L252.375 94.8769ZM252.55 94.9291L252.478 95.1687L252.606 95.2066L252.708 95.1227L252.55 94.9291ZM252.725 94.7861L252.936 94.6519L252.785 94.4144L252.567 94.5925L252.725 94.7861ZM252.9 95.0611L252.689 95.1953L252.882 95.4983L253.099 95.2122L252.9 95.0611ZM253.075 94.8305L252.981 94.599L252.917 94.6248L252.876 94.6794L253.075 94.8305ZM253.25 94.7592L253.478 94.6569L253.379 94.4364L253.156 94.5277L253.25 94.7592ZM253.425 95.1495L253.197 95.2518L253.34 95.5711L253.596 95.3322L253.425 95.1495ZM253.6 94.986L253.662 94.7438L253.529 94.71L253.429 94.8034L253.6 94.986ZM253.775 95.0306L253.713 95.2729L253.758 95.2844L253.805 95.2789L253.775 95.0306ZM253.95 95.0096L254.04 94.7763L253.982 94.754L253.92 94.7614L253.95 95.0096ZM254.125 95.0769L254.035 95.3103L254.144 95.3521L254.246 95.2956L254.125 95.0769ZM254.3 94.98L254.243 94.7366L254.209 94.7445L254.179 94.7613L254.3 94.98ZM254.475 94.9389L254.561 94.7043L254.491 94.6784L254.418 94.6955L254.475 94.9389ZM254.65 95.0033L254.831 94.8312L254.791 94.7888L254.736 94.7687L254.65 95.0033ZM254.825 95.1876L254.644 95.3598L254.855 95.5826L255.03 95.3301L254.825 95.1876ZM255 94.9352L254.857 94.73L254.82 94.7557L254.795 94.7928L255 94.9352ZM255.175 94.8136L255.395 94.6953L255.263 94.4483L255.032 94.6083L255.175 94.8136ZM255.35 95.1393L255.13 95.2576L255.17 95.3333L255.249 95.368L255.35 95.1393ZM255.525 95.2166L255.424 95.4452L255.559 95.5048L255.676 95.4156L255.525 95.2166ZM255.7 95.0836L255.648 94.8389L255.593 94.8505L255.549 94.8845L255.7 95.0836ZM255.875 95.0467L255.927 95.2914L255.966 95.283L256.001 95.2627L255.875 95.0467ZM256.05 94.9447L255.955 94.7136L255.939 94.7201L255.924 94.7287L256.05 94.9447ZM256.225 94.8725L256.437 94.7396L256.325 94.561L256.13 94.6414L256.225 94.8725ZM256.4 95.1513L256.188 95.2842L256.278 95.4273L256.444 95.3973L256.4 95.1513ZM256.575 95.1196L256.619 95.3657L256.708 95.3497L256.766 95.2813L256.575 95.1196ZM256.75 94.9132L256.613 94.7042L256.583 94.724L256.559 94.7516L256.75 94.9132ZM256.925 94.7984L257.097 94.6173L256.954 94.4805L256.788 94.5894L256.925 94.7984ZM257.1 94.9649L256.928 95.146L257.121 95.3304L257.292 95.1246L257.1 94.9649ZM257.275 94.7542L257.494 94.6341L257.318 94.3114L257.083 94.5944L257.275 94.7542ZM257.45 95.0739L257.231 95.1939L257.356 95.4237L257.58 95.2874L257.45 95.0739ZM257.625 94.9672L257.525 94.7379L257.51 94.7448L257.495 94.7538L257.625 94.9672ZM257.8 94.8912L257.9 95.1205L257.915 95.1138L257.93 95.105L257.8 94.8912ZM257.975 94.7852L258.185 94.6498L258.053 94.4454L257.845 94.5714L257.975 94.7852ZM258.15 95.0568L257.94 95.1922L258.155 95.526L258.363 95.1878L258.15 95.0568ZM258.325 94.7724L258.559 94.6847L258.38 94.2059L258.112 94.6414L258.325 94.7724ZM258.5 95.2399L258.266 95.3276L258.466 95.863L258.723 95.3523L258.5 95.2399ZM258.675 94.8923L258.831 94.6971L258.59 94.5044L258.452 94.7799L258.675 94.8923ZM258.85 95.0323L258.694 95.2275L258.818 95.327L258.961 95.2564L258.85 95.0323ZM259.025 94.9458L259.236 94.8112L259.115 94.6224L258.914 94.7217L259.025 94.9458ZM259.2 95.2196L258.989 95.3542L259.239 95.7444L259.428 95.3218L259.2 95.2196ZM259.375 94.8291L259.398 94.5802L259.22 94.5636L259.147 94.7269L259.375 94.8291ZM259.55 94.8454L259.527 95.0943L259.584 95.0996L259.638 95.0795L259.55 94.8454ZM259.725 94.7799L259.696 94.5316L259.666 94.5351L259.637 94.5458L259.725 94.7799ZM259.9 94.7593L260.029 94.5451L259.956 94.5011L259.871 94.511L259.9 94.7593ZM260.075 94.8645L259.946 95.0788L260.028 95.1278L260.121 95.1102L260.075 94.8645ZM260.25 94.8316L260.341 94.5989L260.274 94.5727L260.204 94.5859L260.25 94.8316ZM260.425 94.9003L260.646 94.783L260.602 94.7013L260.516 94.6676L260.425 94.9003ZM260.6 95.2296L260.379 95.3469L260.529 95.6284L260.767 95.4161L260.6 95.2296ZM260.775 95.0733L260.942 95.2598L260.942 95.2592L260.775 95.0733ZM260.95 94.9159L261.158 94.7765L260.997 94.5375L260.783 94.73L260.95 94.9159ZM261.125 95.1764L260.917 95.3158L260.969 95.3932L261.059 95.4177L261.125 95.1764ZM261.3 95.224L261.234 95.4652L261.403 95.5109L261.504 95.3689L261.3 95.224ZM261.475 94.9779L261.561 94.7433L261.382 94.6773L261.271 94.833L261.475 94.9779ZM261.65 95.0423L261.564 95.2769L261.58 95.2829L261.597 95.2865L261.65 95.0423ZM261.825 95.0807L261.772 95.3249L261.949 95.3638L262.041 95.2064L261.825 95.0807ZM262 94.7799L262.21 94.6444L261.989 94.3014L261.784 94.6541L262 94.7799ZM262.175 95.0514L261.965 95.1869L261.989 95.2244L262.025 95.2512L262.175 95.0514ZM262.35 95.1831L262.2 95.3829L262.445 95.5675L262.576 95.2898L262.35 95.1831ZM262.525 94.8124L262.756 94.7173L262.541 94.1935L262.299 94.7057L262.525 94.8124ZM262.7 95.2378L262.469 95.3329L262.645 95.7624L262.907 95.3785L262.7 95.2378ZM262.875 94.9807L262.78 94.7493L262.711 94.7778L262.668 94.84L262.875 94.9807ZM263.05 94.909L263.243 94.7502L263.126 94.6078L262.955 94.6777L263.05 94.909ZM263.225 95.1217L263.032 95.2806L263.214 95.5012L263.408 95.2919L263.225 95.1217ZM263.4 94.9334L263.603 94.788L263.425 94.5389L263.217 94.7632L263.4 94.9334ZM263.575 95.1783L263.372 95.3236L263.508 95.5148L263.708 95.3903L263.575 95.1783ZM263.75 95.0689L263.882 95.2809L263.893 95.2741L263.904 95.2661L263.75 95.0689ZM263.925 94.9326L264.056 94.7199L263.908 94.6286L263.771 94.7354L263.925 94.9326ZM264.1 95.0406L263.969 95.2534L264.176 95.3814L264.309 95.1774L264.1 95.0406ZM264.275 94.7729L264.477 94.6252L264.263 94.3337L264.066 94.6361L264.275 94.7729ZM264.45 95.012L264.248 95.1596L264.26 95.1762L264.275 95.1906L264.45 95.012ZM264.625 95.1833L264.45 95.362L264.705 95.6115L264.853 95.2868L264.625 95.1833ZM264.8 94.7985L265.02 94.6797L264.781 94.2367L264.572 94.695L264.8 94.7985ZM264.975 95.1226L265.021 95.3684L265.358 95.3059L265.195 95.0039L264.975 95.1226ZM264.827 95.15L264.782 94.9042L264.425 94.9703L264.614 95.2801L264.827 95.15ZM264.934 95.325L265.181 95.3637L265.195 95.2731L265.147 95.1949L264.934 95.325ZM264.907 95.5L264.66 95.4613L264.639 95.5946L264.739 95.6852L264.907 95.5ZM265.099 95.675L265.257 95.869L265.483 95.6854L265.267 95.4898L265.099 95.675ZM264.884 95.85L264.726 95.656L264.69 95.6854L264.667 95.7259L264.884 95.85ZM264.784 96.025L264.567 95.9009L264.495 96.0268L264.569 96.1519L264.784 96.025ZM264.887 96.2L265.106 96.3209L265.175 96.1961L265.103 96.0731L264.887 96.2ZM264.79 96.375L264.572 96.2541L264.493 96.3964L264.591 96.526L264.79 96.375ZM264.923 96.55L265.146 96.6625L265.217 96.5233L265.122 96.399L264.923 96.55ZM264.835 96.725L264.612 96.6125L264.545 96.745L264.629 96.8671L264.835 96.725ZM264.956 96.9L265.139 97.0698L265.275 96.9227L265.161 96.7579L264.956 96.9ZM264.794 97.075L264.61 96.9052L264.504 97.0204L264.561 97.1665L264.794 97.075ZM264.863 97.25L264.63 97.3415L264.662 97.4236L264.739 97.4672L264.863 97.25ZM265.17 97.425L265.403 97.5149L265.48 97.3142L265.294 97.2078L265.17 97.425ZM265.102 97.6L264.869 97.5101L264.832 97.6078L264.875 97.7031L265.102 97.6ZM265.182 97.775L265.408 97.8819L265.457 97.7773L265.409 97.6719L265.182 97.775ZM265.099 97.95L265.201 98.1783L265.285 98.1405L265.325 98.0569L265.099 97.95ZM264.875 98.05L264.773 97.8218L264.738 97.8373L264.71 97.8626L264.875 98.05ZM264.7 98.2046L264.483 98.3295L264.636 98.5944L264.865 98.392L264.7 98.2046ZM264.525 97.9011L264.742 97.7762L264.53 97.4087L264.311 97.7722L264.525 97.9011ZM264.35 98.1918L264.119 98.2865L264.307 98.7474L264.564 98.3207L264.35 98.1918ZM264.175 97.7643L264.406 97.6695L264.193 97.1475L263.949 97.6565L264.175 97.7643ZM264 98.1305L263.845 98.3265L264.091 98.5208L264.226 98.2383L264 98.1305ZM263.825 97.992L263.628 98.1457L263.646 98.1694L263.67 98.1881L263.825 97.992ZM263.65 97.7674L263.847 97.6137L263.704 97.4292L263.51 97.5604L263.65 97.7674ZM263.475 97.8859L263.572 98.1161L263.595 98.1066L263.615 98.0929L263.475 97.8859ZM263.3 97.9599L263.108 98.1201L263.227 98.2622L263.397 98.1901L263.3 97.9599ZM263.125 97.7504L263.317 97.5901L263.054 97.2748L262.894 97.6536L263.125 97.7504ZM262.95 98.1672L262.79 98.359L263.049 98.576L263.181 98.2639L262.95 98.1672ZM262.775 98.021L262.935 97.8291L262.847 97.7552L262.733 97.7745L262.775 98.021ZM262.6 98.0506L262.455 98.2546L262.54 98.3144L262.642 98.2971L262.6 98.0506ZM262.425 97.9266L262.57 97.7226L262.447 97.636L262.313 97.703L262.425 97.9266ZM262.25 98.0141L262.138 97.7905L262.094 97.8127L262.061 97.8503L262.25 98.0141ZM262.075 98.216L261.848 98.3197L262.009 98.6739L262.264 98.3797L262.075 98.216ZM261.9 97.8321L262.127 97.7284L261.978 97.4001L261.723 97.6555L261.9 97.8321ZM261.725 98.0074L261.549 98.1848L261.726 98.3606L261.902 98.184L261.725 98.0074ZM261.55 97.8335L261.726 97.6562L261.542 97.4729L261.366 97.6644L261.55 97.8335ZM261.375 98.024L261.492 98.2449L261.53 98.2248L261.559 98.1931L261.375 98.024ZM261.2 98.1167L261.003 98.271L261.132 98.4354L261.317 98.3376L261.2 98.1167ZM261.025 97.8936L261.222 97.7393L260.984 97.4367L260.804 97.7764L261.025 97.8936ZM260.85 98.2235L260.62 98.3213L260.825 98.8041L261.071 98.3407L260.85 98.2235ZM260.675 97.8116L260.905 97.7139L260.744 97.3343L260.482 97.6528L260.675 97.8116ZM260.5 98.0245L260.586 98.2591L260.65 98.2356L260.693 98.1832L260.5 98.0245ZM260.325 98.0889L260.227 98.3187L260.318 98.3578L260.411 98.3235L260.325 98.0889ZM260.15 98.0139L259.976 98.1935L260.009 98.2256L260.052 98.2437L260.15 98.0139ZM259.975 97.8444L260.149 97.6648L259.959 97.4809L259.786 97.6806L259.975 97.8444ZM259.8 98.0463L259.588 98.1783L259.767 98.4663L259.989 98.21L259.8 98.0463ZM259.625 97.7648L259.837 97.6328L259.737 97.471L259.554 97.5251L259.625 97.7648ZM259.45 97.8166L259.408 98.063L259.465 98.0728L259.521 98.0563L259.45 97.8166ZM259.275 97.7866L259.317 97.5402L259.144 97.5105L259.057 97.664L259.275 97.7866ZM259.1 98.0975L258.891 98.2343L259.116 98.579L259.318 98.2202L259.1 98.0975ZM258.925 97.8297L259.134 97.6929L259.006 97.4961L258.801 97.6124L258.925 97.8297ZM258.75 97.9293L258.831 98.1658L258.853 98.1582L258.874 98.1466L258.75 97.9293ZM258.575 97.9893L258.494 97.7528L258.457 97.7653L258.426 97.7883L258.575 97.9893ZM258.4 98.1188L258.197 98.2642L258.344 98.4709L258.549 98.3197L258.4 98.1188ZM258.225 97.8741L258.428 97.7287L258.392 97.6774L258.335 97.6496L258.225 97.8741ZM258.05 97.7883L258.16 97.5638L258.015 97.4928L257.891 97.5954L258.05 97.7883ZM257.875 97.9326L257.915 98.1794L257.982 98.1685L258.034 98.1255L257.875 97.9326ZM257.7 97.961L257.66 97.7142L257.555 97.7313L257.494 97.8192L257.7 97.961ZM257.525 98.215L257.422 98.443L257.613 98.5287L257.731 98.3568L257.525 98.215ZM257.35 98.1362L257.453 97.9082L257.379 97.8751L257.3 97.8912L257.35 98.1362ZM257.175 98.1719L256.952 98.2845L257.038 98.455L257.225 98.4168L257.175 98.1719ZM257 97.8249L257.223 97.7123L257.053 97.3753L256.809 97.6633L257 97.8249ZM256.825 98.0315L256.649 98.2088L256.841 98.3996L257.016 98.1931L256.825 98.0315ZM256.65 97.8576L256.826 97.6803L256.727 97.5819L256.591 97.6146L256.65 97.8576ZM256.475 97.8998L256.487 98.1495L256.51 98.1484L256.534 98.1428L256.475 97.8998ZM256.3 97.9079L256.277 98.1569L256.294 98.1584L256.312 98.1576L256.3 97.9079ZM256.125 97.892L256.148 97.643L255.976 97.6275L255.9 97.7822L256.125 97.892ZM255.95 98.2499L255.715 98.3358L255.917 98.8871L256.175 98.3598L255.95 98.2499ZM255.775 97.7712L256.01 97.6854L255.881 97.3324L255.605 97.5878L255.775 97.7712ZM255.6 97.9334L255.76 98.1264L255.77 98.1168L255.6 97.9334ZM255.425 98.0781L255.263 98.2683L255.423 98.4045L255.584 98.2708L255.425 98.0781ZM255.25 97.9289L255.412 97.7387L255.289 97.6338L255.143 97.7029L255.25 97.9289ZM255.075 98.0117L254.896 98.1861L255.02 98.3141L255.182 98.2377L255.075 98.0117ZM254.9 97.832L255.079 97.6576L254.824 97.3951L254.672 97.7287L254.9 97.832ZM254.725 98.2178L254.522 98.3637L254.774 98.7147L254.953 98.3211L254.725 98.2178ZM254.55 97.9742L254.753 97.8284L254.698 97.7523L254.607 97.7309L254.55 97.9742ZM254.375 97.9331L254.432 97.6897L254.337 97.6674L254.252 97.7153L254.375 97.9331ZM254.2 98.0317L254.065 98.2418L254.191 98.3234L254.323 98.2495L254.2 98.0317ZM254.025 97.919L254.16 97.7088L254.123 97.6846L254.079 97.6749L254.025 97.919ZM253.85 97.88L253.904 97.636L253.798 97.6123L253.708 97.6742L253.85 97.88ZM253.675 98.0007L253.533 97.7947L253.527 97.7992L253.675 98.0007ZM253.5 98.1292L253.31 98.2915L253.461 98.4682L253.648 98.3307L253.5 98.1292ZM253.325 97.9242L253.515 97.7619L253.404 97.6315L253.242 97.6884L253.325 97.9242ZM253.15 97.9858L252.998 98.1846L253.106 98.2665L253.233 98.2217L253.15 97.9858ZM252.975 97.8523L253.127 97.6535L252.916 97.4925L252.767 97.7129L252.975 97.8523ZM252.8 98.1129L252.672 98.3278L252.876 98.4486L253.008 98.2523L252.8 98.1129ZM252.625 98.0089L252.753 97.794L252.567 97.6839L252.431 97.8511L252.625 98.0089ZM252.45 98.2239L252.22 98.3223L252.383 98.7021L252.644 98.3817L252.45 98.2239ZM252.275 97.8155L252.505 97.717L252.446 97.5808L252.299 97.5666L252.275 97.8155ZM252.1 97.7986L252.124 97.5498L251.942 97.5322L251.87 97.7005L252.1 97.7986ZM251.925 98.2085L251.971 98.4542L252.103 98.4294L252.155 98.3067L251.925 98.2085ZM251.75 98.2416L251.523 98.3458L251.604 98.5236L251.796 98.4873L251.75 98.2416ZM251.575 97.86L251.802 97.7558L251.733 97.6044L251.566 97.6101L251.575 97.86ZM251.4 97.866L251.391 97.6161L251.249 97.6211L251.18 97.7465L251.4 97.866ZM251.225 98.1876L251.006 98.3082L251.226 98.7082L251.445 98.3071L251.225 98.1876ZM251.05 97.8699L251.269 97.7493L251.14 97.5153L250.915 97.6594L251.05 97.8699ZM250.875 97.982L250.703 98.1632L250.845 98.2982L251.01 98.1925L250.875 97.982ZM250.7 97.8156L250.872 97.6344L250.764 97.5314L250.622 97.5781L250.7 97.8156ZM250.525 97.8731L250.478 98.1186L250.541 98.1309L250.603 98.1106L250.525 97.8731ZM250.35 97.8394L250.397 97.5939L250.272 97.5697L250.179 97.6571L250.35 97.8394ZM250.175 98.0037L250.104 98.2433L250.241 98.2842L250.346 98.186L250.175 98.0037ZM250 97.9517L249.813 98.1175L249.86 98.171L249.929 98.1914L250 97.9517ZM249.825 97.7542L250.012 97.5884L249.873 97.4318L249.695 97.5408L249.825 97.7542ZM249.65 97.861L249.768 98.0817L249.78 98.0744L249.65 97.861ZM249.475 97.9548L249.357 97.7344L249.309 97.7599L249.276 97.8028L249.475 97.9548ZM249.3 98.1835L249.091 98.3205L249.284 98.6154L249.499 98.3354L249.3 98.1835ZM249.125 97.9164L249.334 97.7794L249.151 97.5003L248.935 97.7543L249.125 97.9164ZM248.95 98.1219L248.774 98.2999L248.966 98.4887L249.14 98.284L248.95 98.1219ZM248.775 97.9493L248.951 97.7713L248.766 97.5893L248.591 97.7803L248.775 97.9493ZM248.6 98.1401L248.464 98.35L248.641 98.4647L248.784 98.3091L248.6 98.1401ZM248.425 98.0268L248.561 97.8169L248.44 97.739L248.312 97.8036L248.425 98.0268ZM248.25 98.1151L248.082 98.2998L248.209 98.4159L248.363 98.3383L248.25 98.1151ZM248.075 97.9555L248.243 97.7708L248.03 97.576L247.868 97.8153L248.075 97.9555ZM247.9 98.2139L247.897 98.4638L248.031 98.4656L248.107 98.3541L247.9 98.2139ZM247.725 98.2116L247.515 98.347L247.588 98.4599L247.722 98.4616L247.725 98.2116ZM247.55 97.9399L247.76 97.8045L247.741 97.7747L247.714 97.7514L247.55 97.9399ZM247.375 97.7874L247.539 97.5989L247.366 97.4481L247.201 97.6077L247.375 97.7874ZM247.2 97.9566L247.349 98.1571L247.362 98.1475L247.374 98.1363L247.2 97.9566ZM247.025 98.0869L246.819 98.2284L246.966 98.4426L247.174 98.2874L247.025 98.0869ZM246.85 97.8319L247.056 97.6904L246.997 97.605L246.896 97.5861L246.85 97.8319ZM246.675 97.7995L246.721 97.5537L246.634 97.5377L246.557 97.5791L246.675 97.7995ZM246.5 97.8933L246.39 98.1175L246.505 98.1743L246.618 98.1136L246.5 97.8933ZM246.325 97.8071L246.435 97.5828L246.2 97.4667L246.096 97.7079L246.325 97.8071ZM246.15 98.212L246.068 98.4484L246.288 98.5239L246.379 98.3112L246.15 98.212ZM245.975 98.1517L246.057 97.9153L245.962 97.8827L245.871 97.9243L245.975 98.1517ZM245.8 98.2317L245.594 98.3737L245.713 98.5462L245.904 98.459L245.8 98.2317ZM245.625 97.9782L245.831 97.8362L245.731 97.6916L245.561 97.7365L245.625 97.9782ZM245.45 98.0245L245.288 98.2145L245.387 98.2997L245.514 98.2662L245.45 98.0245ZM245.275 97.8748L245.437 97.6848L245.192 97.4753L245.051 97.7648L245.275 97.8748ZM245.1 98.2317L244.898 98.3791L245.142 98.7134L245.324 98.3418L245.1 98.2317ZM244.925 97.992L245.127 97.8446L244.997 97.6669L244.804 97.773L244.925 97.992ZM244.75 98.0883L244.625 98.3047L244.747 98.3753L244.871 98.3073L244.75 98.0883ZM244.575 97.987L244.7 97.7706L244.624 97.7267L244.538 97.7399L244.575 97.987ZM244.4 98.0135L244.417 98.263L244.427 98.2623L244.437 98.2607L244.4 98.0135ZM244.225 98.0253L244.208 97.7759L244.164 97.7789L244.123 97.7971L244.225 98.0253ZM244.05 98.1035L243.837 98.2348L243.952 98.421L244.152 98.3318L244.05 98.1035ZM243.875 97.82L244.088 97.6887L243.941 97.4513L243.721 97.6229L243.875 97.82ZM243.7 97.9566L243.57 98.1703L243.718 98.2598L243.854 98.1537L243.7 97.9566ZM243.525 97.8504L243.655 97.6367L243.431 97.5007L243.305 97.7309L243.525 97.8504ZM243.35 98.172L243.175 98.3503L243.411 98.5826L243.57 98.2915L243.35 98.172ZM243.175 98.0001L243.35 97.8217L243.34 97.8115L243.328 97.8026L243.175 98.0001ZM243 97.8643L243.153 97.6668L242.962 97.5187L242.808 97.7044L243 97.8643ZM242.825 98.0747L242.846 98.3238L242.95 98.3151L243.017 98.2346L242.825 98.0747ZM242.65 98.0893L242.442 98.2274L242.523 98.3507L242.671 98.3384L242.65 98.0893ZM242.475 97.8253L242.683 97.6871L242.59 97.5459L242.424 97.5806L242.475 97.8253ZM242.3 97.8618L242.337 98.1094L242.351 98.1066L242.3 97.8618ZM242.125 97.8883L242.088 97.6411L241.976 97.6579L241.915 97.753L242.125 97.8883ZM241.95 98.1603L241.723 98.2655L241.914 98.6777L242.16 98.2955L241.95 98.1603ZM241.775 97.7829L242.002 97.6777L241.785 97.2103L241.552 97.6699L241.775 97.7829ZM241.6 98.1281L241.44 98.32L241.681 98.5213L241.823 98.2411L241.6 98.1281ZM241.425 97.982L241.585 97.7901L241.567 97.7749L241.546 97.7635L241.425 97.982ZM241.25 97.8847L241.371 97.6662L241.256 97.6022L241.138 97.661L241.25 97.8847ZM241.075 97.9719L240.964 98.1959L241.075 98.2511L241.187 98.1957L241.075 97.9719ZM240.93 97.9L240.755 98.0782L240.783 98.1062L240.819 98.124L240.93 97.9ZM240.752 97.725L240.588 97.5361L240.384 97.7133L240.577 97.9032L240.752 97.725ZM240.954 97.55L240.806 97.3485L240.798 97.3545L240.79 97.3611L240.954 97.55ZM241.192 97.375L241.34 97.5765L241.675 97.3304L241.301 97.1498L241.192 97.375ZM240.829 97.2L240.727 96.9721L240.238 97.1925L240.721 97.4252L240.829 97.2ZM241.217 97.025L241.32 97.2529L241.82 97.0272L241.322 96.7979L241.217 97.025ZM240.837 96.85L240.629 96.7115L240.467 96.9549L240.732 97.0771L240.837 96.85ZM240.953 96.675L241.162 96.8135L241.219 96.7266L241.198 96.6243L240.953 96.675ZM240.917 96.5L240.765 96.3013L240.64 96.3968L240.672 96.5507L240.917 96.5ZM241.146 96.325L241.298 96.5237L241.37 96.4686L241.39 96.38L241.146 96.325ZM241.186 96.15L241.43 96.205L241.476 95.9994L241.281 95.9189L241.186 96.15ZM240.762 95.975L240.565 95.821L240.362 96.0804L240.666 96.2061L240.762 95.975ZM240.899 95.8L241.096 95.954L241.117 95.9269L241.13 95.8952L240.899 95.8ZM240.971 95.625L241.202 95.7202L241.255 95.5907L241.173 95.4775L240.971 95.625ZM240.843 95.45L240.707 95.2403L240.485 95.3842L240.641 95.5975L240.843 95.45ZM241.112 95.275L241.248 95.4846L241.428 95.3679L241.34 95.1724L241.112 95.275ZM241.034 95.1L240.796 95.1795L240.8 95.1913L240.806 95.2026L241.034 95.1ZM241 95V95.25H241.1V95V94.75H241V95ZM241.1 95L240.865 95.0851L240.94 95.2922L241.175 95.207L241.41 95.1219L241.335 94.9149L241.1 95ZM241.175 95.207L241.141 95.4547L241.316 95.4788L241.35 95.2311L241.384 94.9834L241.209 94.9594L241.175 95.207ZM241.35 95.2311L241.519 95.415L241.694 95.2538L241.525 95.0699L241.356 94.886L241.181 95.0472L241.35 95.2311ZM241.525 95.0699L241.621 95.3009L241.796 95.2285L241.7 94.9975L241.604 94.7665L241.429 94.8389L241.525 95.0699ZM241.7 94.9975L241.902 95.1446L242.077 94.9044L241.875 94.7572L241.673 94.61L241.498 94.8503L241.7 94.9975ZM241.875 94.7572L241.684 94.9186L241.859 95.1256L242.05 94.9642L242.241 94.8028L242.066 94.5958L241.875 94.7572ZM242.05 94.9642L241.846 95.1093L242.021 95.3549L242.225 95.2098L242.429 95.0647L242.254 94.8191L242.05 94.9642ZM242.225 95.2098L242.422 95.3635L242.597 95.1392L242.4 94.9855L242.203 94.8317L242.028 95.056L242.225 95.2098ZM242.4 94.9855L242.502 95.2139L242.677 95.1361L242.575 94.9077L242.473 94.6792L242.298 94.757L242.4 94.9855ZM242.575 94.9077L242.476 95.1372L242.651 95.2128L242.75 94.9833L242.849 94.7538L242.674 94.6782L242.575 94.9077ZM242.75 94.9833L242.896 95.1861L243.071 95.06L242.925 94.8572L242.779 94.6544L242.604 94.7805L242.75 94.9833ZM242.925 94.8572L242.764 95.0488L242.939 95.1954L243.1 95.0038L243.261 94.8122L243.086 94.6656L242.925 94.8572ZM243.1 95.0038L243.295 95.1601L243.47 94.9417L243.275 94.7854L243.08 94.6291L242.905 94.8475L243.1 95.0038ZM243.275 94.7854L243.067 94.924L243.242 95.1868L243.45 95.0482L243.658 94.9096L243.483 94.6468L243.275 94.7854ZM243.45 95.0482L243.527 95.286L243.702 95.2292L243.625 94.9914L243.548 94.7536L243.373 94.8104L243.45 95.0482ZM243.625 94.9914L243.641 95.2409L243.816 95.23L243.8 94.9805L243.784 94.731L243.609 94.7419L243.625 94.9914ZM243.8 94.9805L243.927 95.1958L244.102 95.0927L243.975 94.8773L243.848 94.6619L243.673 94.7651L243.8 94.9805ZM243.975 94.8773L243.805 95.0608L243.98 95.2228L244.15 95.0393L244.32 94.8559L244.145 94.6939L243.975 94.8773ZM244.15 95.0393L244.338 95.2041L244.513 95.0045L244.325 94.8397L244.137 94.6749L243.962 94.8745L244.15 95.0393ZM244.325 94.8397L244.32 95.0897L244.495 95.093L244.5 94.843L244.505 94.5931L244.33 94.5898L244.325 94.8397ZM244.5 94.843L244.442 95.0862L244.617 95.128L244.675 94.8848L244.733 94.6417L244.558 94.5999L244.5 94.843ZM244.675 94.8848L244.728 95.1291L244.903 95.0908L244.85 94.8466L244.797 94.6024L244.622 94.6406L244.675 94.8848ZM244.85 94.8466L244.621 94.9464L244.796 95.3483L245.025 95.2485L245.254 95.1487L245.079 94.7468L244.85 94.8466ZM245.025 95.2485L245.235 95.3849L245.41 95.1161L245.2 94.9797L244.99 94.8433L244.815 95.1121L245.025 95.2485ZM245.2 94.9797L245.374 95.1595L245.549 94.9903L245.375 94.8105L245.201 94.6308L245.026 94.7999L245.2 94.9797ZM245.375 94.8105L245.374 95.0605L245.549 95.0611L245.55 94.8111L245.551 94.5611L245.376 94.5605L245.375 94.8105ZM245.55 94.8111L245.511 95.058L245.686 95.0856L245.725 94.8387L245.764 94.5917L245.589 94.5641L245.55 94.8111ZM245.725 94.8387L245.523 94.9857L245.698 95.2264L245.9 95.0794L246.102 94.9324L245.927 94.6917L245.725 94.8387ZM245.9 95.0794L245.758 95.285L245.933 95.406L246.075 95.2004L246.217 94.9948L246.042 94.8738L245.9 95.0794ZM246.075 95.2004L246.133 95.4436L246.308 95.402L246.25 95.1588L246.192 94.9156L246.017 94.9572L246.075 95.2004ZM246.25 95.1588L246.473 95.2727L246.648 94.9308L246.425 94.8169L246.202 94.703L246.027 95.0449L246.25 95.1588ZM246.425 94.8169L246.235 94.9791L246.41 95.1844L246.6 95.0223L246.79 94.8601L246.615 94.6547L246.425 94.8169ZM246.6 95.0223L246.806 95.1636L246.981 94.9083L246.775 94.7669L246.569 94.6256L246.394 94.8809L246.6 95.0223ZM246.775 94.7669L246.687 95.0009L246.862 95.0668L246.95 94.8329L247.038 94.599L246.863 94.533L246.775 94.7669ZM246.95 94.8329L246.723 94.9375L246.898 95.3175L247.125 95.213L247.352 95.1084L247.177 94.7284L246.95 94.8329ZM247.125 95.213L247.111 95.4626L247.286 95.4724L247.3 95.2228L247.314 94.9732L247.139 94.9634L247.125 95.213ZM247.3 95.2228L247.432 95.4351L247.607 95.3263L247.475 95.114L247.343 94.9017L247.168 95.0105L247.3 95.2228ZM247.475 95.114L247.51 95.3615L247.685 95.3364L247.65 95.089L247.615 94.8415L247.44 94.8665L247.475 95.114ZM247.65 95.089L247.787 95.2979L247.962 95.1829L247.825 94.974L247.688 94.765L247.513 94.88L247.65 95.089ZM247.825 94.974L247.665 95.1664L247.84 95.3115L248 95.1191L248.16 94.9267L247.985 94.7815L247.825 94.974ZM248 95.1191L248.213 95.2493L248.388 94.9624L248.175 94.8323L247.962 94.7021L247.787 94.9889L248 95.1191ZM248.175 94.8323L248.252 95.0702L248.427 95.014L248.35 94.776L248.273 94.538L248.098 94.5943L248.175 94.8323ZM248.35 94.776L248.14 94.911L248.315 95.1837L248.525 95.0487L248.735 94.9137L248.56 94.6409L248.35 94.776ZM248.525 95.0487L248.735 95.1846L248.91 94.9144L248.7 94.7785L248.49 94.6426L248.315 94.9128L248.525 95.0487ZM248.7 94.7785L248.513 94.9446L248.688 95.1414L248.875 94.9753L249.062 94.8092L248.887 94.6124L248.7 94.7785ZM248.875 94.9753L249.019 95.1795L249.194 95.0559L249.05 94.8517L248.906 94.6475L248.731 94.7711L248.875 94.9753ZM249.05 94.8517L248.837 94.9827L249.012 95.2671L249.225 95.136L249.438 95.005L249.263 94.7206L249.05 94.8517ZM249.225 95.136L249.155 95.3761L249.33 95.4269L249.4 95.1868L249.47 94.9467L249.295 94.8959L249.225 95.136ZM249.4 95.1868L249.4 95.4368L249.575 95.4369L249.575 95.1869L249.575 94.9369L249.4 94.9368L249.4 95.1868ZM249.575 95.1869L249.802 95.2916L249.977 94.9119L249.75 94.8072L249.523 94.7026L249.348 95.0823L249.575 95.1869ZM249.75 94.8072L249.781 95.0553L249.956 95.0331L249.925 94.7851L249.894 94.5371L249.719 94.5592L249.75 94.8072ZM249.925 94.7851L249.861 95.0267L250.036 95.0732L250.1 94.8316L250.164 94.5899L249.989 94.5435L249.925 94.7851ZM250.1 94.8316L250.146 95.0772L250.321 95.0441L250.275 94.7985L250.229 94.5528L250.054 94.5859L250.1 94.8316ZM250.275 94.7985L250.099 94.9759L250.274 95.1496L250.45 94.9722L250.626 94.7948L250.451 94.6211L250.275 94.7985ZM250.45 94.9722L250.266 95.1416L250.441 95.3315L250.625 95.1621L250.809 94.9927L250.634 94.8028L250.45 94.9722ZM250.625 95.1621L250.641 95.4116L250.816 95.4006L250.8 95.1511L250.784 94.9016L250.609 94.9126L250.625 95.1621ZM250.8 95.1511L251.008 95.2898L251.183 95.0273L250.975 94.8886L250.767 94.7499L250.592 95.0124L250.8 95.1511ZM250.975 94.8886L250.777 95.0408L250.952 95.2689L251.15 95.1168L251.348 94.9646L251.173 94.7365L250.975 94.8886ZM251.15 95.1168L251.261 95.3408L251.436 95.2541L251.325 95.0301L251.214 94.8061L251.039 94.8927L251.15 95.1168ZM251.325 95.0301L251.188 95.2395L251.363 95.3536L251.5 95.1442L251.637 94.9348L251.462 94.8207L251.325 95.0301ZM251.5 95.1442L251.588 95.3783L251.763 95.3126L251.675 95.0785L251.587 94.8445L251.412 94.9101L251.5 95.1442ZM251.675 95.0785L251.712 95.3258L251.887 95.2997L251.85 95.0524L251.813 94.8052L251.638 94.8313L251.675 95.0785ZM251.85 95.0524L252.03 95.226L252.205 95.0446L252.025 94.8711L251.845 94.6975L251.67 94.8789L251.85 95.0524ZM252.025 94.8711L251.804 94.9874L251.979 95.3203L252.2 95.204L252.421 95.0877L252.246 94.7547L252.025 94.8711ZM252.2 95.204L252.42 95.3219L252.595 94.9948L252.375 94.8769L252.155 94.7589L251.98 95.0861L252.2 95.204ZM252.375 94.8769L252.303 95.1164L252.478 95.1687L252.55 94.9291L252.622 94.6896L252.447 94.6373L252.375 94.8769ZM252.55 94.9291L252.708 95.1227L252.883 94.9797L252.725 94.7861L252.567 94.5925L252.392 94.7356L252.55 94.9291ZM252.725 94.7861L252.514 94.9204L252.689 95.1953L252.9 95.0611L253.111 94.9268L252.936 94.6519L252.725 94.7861ZM252.9 95.0611L253.099 95.2122L253.274 94.9816L253.075 94.8305L252.876 94.6794L252.701 94.9099L252.9 95.0611ZM253.075 94.8305L253.169 95.062L253.344 94.9906L253.25 94.7592L253.156 94.5277L252.981 94.599L253.075 94.8305ZM253.25 94.7592L253.022 94.8614L253.197 95.2518L253.425 95.1495L253.653 95.0473L253.478 94.6569L253.25 94.7592ZM253.425 95.1495L253.596 95.3322L253.771 95.1687L253.6 94.986L253.429 94.8034L253.254 94.9669L253.425 95.1495ZM253.6 94.986L253.538 95.2283L253.713 95.2729L253.775 95.0306L253.837 94.7884L253.662 94.7438L253.6 94.986ZM253.775 95.0306L253.805 95.2789L253.98 95.2578L253.95 95.0096L253.92 94.7614L253.745 94.7824L253.775 95.0306ZM253.95 95.0096L253.86 95.2429L254.035 95.3103L254.125 95.0769L254.215 94.8436L254.04 94.7763L253.95 95.0096ZM254.125 95.0769L254.246 95.2956L254.421 95.1987L254.3 94.98L254.179 94.7613L254.004 94.8582L254.125 95.0769ZM254.3 94.98L254.357 95.2234L254.532 95.1823L254.475 94.9389L254.418 94.6955L254.243 94.7366L254.3 94.98ZM254.475 94.9389L254.389 95.1736L254.564 95.2379L254.65 95.0033L254.736 94.7687L254.561 94.7043L254.475 94.9389ZM254.65 95.0033L254.469 95.1754L254.644 95.3598L254.825 95.1876L255.006 95.0155L254.831 94.8312L254.65 95.0033ZM254.825 95.1876L255.03 95.3301L255.205 95.0777L255 94.9352L254.795 94.7928L254.62 95.0452L254.825 95.1876ZM255 94.9352L255.143 95.1405L255.318 95.0189L255.175 94.8136L255.032 94.6083L254.857 94.73L255 94.9352ZM255.175 94.8136L254.955 94.9319L255.13 95.2576L255.35 95.1393L255.57 95.0209L255.395 94.6953L255.175 94.8136ZM255.35 95.1393L255.249 95.368L255.424 95.4452L255.525 95.2166L255.626 94.9879L255.451 94.9106L255.35 95.1393ZM255.525 95.2166L255.676 95.4156L255.851 95.2826L255.7 95.0836L255.549 94.8845L255.374 95.0175L255.525 95.2166ZM255.7 95.0836L255.752 95.3282L255.927 95.2914L255.875 95.0467L255.823 94.8021L255.648 94.8389L255.7 95.0836ZM255.875 95.0467L256.001 95.2627L256.176 95.1607L256.05 94.9447L255.924 94.7287L255.749 94.8307L255.875 95.0467ZM256.05 94.9447L256.145 95.1758L256.32 95.1037L256.225 94.8725L256.13 94.6414L255.955 94.7136L256.05 94.9447ZM256.225 94.8725L256.013 95.0055L256.188 95.2842L256.4 95.1513L256.612 95.0183L256.437 94.7396L256.225 94.8725ZM256.4 95.1513L256.444 95.3973L256.619 95.3657L256.575 95.1196L256.531 94.8736L256.356 94.9053L256.4 95.1513ZM256.575 95.1196L256.766 95.2813L256.941 95.0749L256.75 94.9132L256.559 94.7516L256.384 94.958L256.575 95.1196ZM256.75 94.9132L256.887 95.1222L257.062 95.0073L256.925 94.7984L256.788 94.5894L256.613 94.7042L256.75 94.9132ZM256.925 94.7984L256.753 94.9795L256.928 95.146L257.1 94.9649L257.272 94.7838L257.097 94.6173L256.925 94.7984ZM257.1 94.9649L257.292 95.1246L257.467 94.9139L257.275 94.7542L257.083 94.5944L256.908 94.8052L257.1 94.9649ZM257.275 94.7542L257.056 94.8742L257.231 95.1939L257.45 95.0739L257.669 94.9539L257.494 94.6341L257.275 94.7542ZM257.45 95.0739L257.58 95.2874L257.755 95.1807L257.625 94.9672L257.495 94.7538L257.32 94.8604L257.45 95.0739ZM257.625 94.9672L257.725 95.1965L257.9 95.1205L257.8 94.8912L257.7 94.6619L257.525 94.7379L257.625 94.9672ZM257.8 94.8912L257.93 95.105L258.105 94.999L257.975 94.7852L257.845 94.5714L257.67 94.6774L257.8 94.8912ZM257.975 94.7852L257.765 94.9206L257.94 95.1922L258.15 95.0568L258.36 94.9214L258.185 94.6498L257.975 94.7852ZM258.15 95.0568L258.363 95.1878L258.538 94.9033L258.325 94.7724L258.112 94.6414L257.937 94.9258L258.15 95.0568ZM258.325 94.7724L258.091 94.86L258.266 95.3276L258.5 95.2399L258.734 95.1523L258.559 94.6847L258.325 94.7724ZM258.5 95.2399L258.723 95.3523L258.898 95.0047L258.675 94.8923L258.452 94.7799L258.277 95.1275L258.5 95.2399ZM258.675 94.8923L258.519 95.0875L258.694 95.2275L258.85 95.0323L259.006 94.8371L258.831 94.6971L258.675 94.8923ZM258.85 95.0323L258.961 95.2564L259.136 95.1699L259.025 94.9458L258.914 94.7217L258.739 94.8082L258.85 95.0323ZM259.025 94.9458L258.814 95.0804L258.989 95.3542L259.2 95.2196L259.411 95.085L259.236 94.8112L259.025 94.9458ZM259.2 95.2196L259.428 95.3218L259.603 94.9314L259.375 94.8291L259.147 94.7269L258.972 95.1174L259.2 95.2196ZM259.375 94.8291L259.352 95.0781L259.527 95.0943L259.55 94.8454L259.573 94.5965L259.398 94.5802L259.375 94.8291ZM259.55 94.8454L259.638 95.0795L259.813 95.014L259.725 94.7799L259.637 94.5458L259.462 94.6113L259.55 94.8454ZM259.725 94.7799L259.754 95.0282L259.929 95.0076L259.9 94.7593L259.871 94.511L259.696 94.5316L259.725 94.7799ZM259.9 94.7593L259.771 94.9736L259.946 95.0788L260.075 94.8645L260.204 94.6503L260.029 94.5451L259.9 94.7593ZM260.075 94.8645L260.121 95.1102L260.296 95.0773L260.25 94.8316L260.204 94.5859L260.029 94.6188L260.075 94.8645ZM260.25 94.8316L260.159 95.0644L260.334 95.133L260.425 94.9003L260.516 94.6676L260.341 94.5989L260.25 94.8316ZM260.425 94.9003L260.204 95.0176L260.379 95.3469L260.6 95.2296L260.821 95.1123L260.646 94.783L260.425 94.9003ZM260.6 95.2296L260.767 95.4161L260.942 95.2598L260.775 95.0733L260.608 94.8869L260.433 95.0432L260.6 95.2296ZM260.775 95.0733L260.942 95.2592L261.117 95.1018L260.95 94.9159L260.783 94.73L260.608 94.8874L260.775 95.0733ZM260.95 94.9159L260.742 95.0553L260.917 95.3158L261.125 95.1764L261.333 95.037L261.158 94.7765L260.95 94.9159ZM261.125 95.1764L261.059 95.4177L261.234 95.4652L261.3 95.224L261.366 94.9827L261.191 94.9352L261.125 95.1764ZM261.3 95.224L261.504 95.3689L261.679 95.1228L261.475 94.9779L261.271 94.833L261.096 95.0791L261.3 95.224ZM261.475 94.9779L261.389 95.2125L261.564 95.2769L261.65 95.0423L261.736 94.8077L261.561 94.7433L261.475 94.9779ZM261.65 95.0423L261.597 95.2865L261.772 95.3249L261.825 95.0807L261.878 94.8364L261.703 94.7981L261.65 95.0423ZM261.825 95.0807L262.041 95.2064L262.216 94.9056L262 94.7799L261.784 94.6541L261.609 94.9549L261.825 95.0807ZM262 94.7799L261.79 94.9153L261.965 95.1869L262.175 95.0514L262.385 94.916L262.21 94.6444L262 94.7799ZM262.175 95.0514L262.025 95.2512L262.2 95.3829L262.35 95.1831L262.5 94.9834L262.325 94.8517L262.175 95.0514ZM262.35 95.1831L262.576 95.2898L262.751 94.9191L262.525 94.8124L262.299 94.7057L262.124 95.0764L262.35 95.1831ZM262.525 94.8124L262.294 94.9075L262.469 95.3329L262.7 95.2378L262.931 95.1427L262.756 94.7173L262.525 94.8124ZM262.7 95.2378L262.907 95.3785L263.082 95.1213L262.875 94.9807L262.668 94.84L262.493 95.0972L262.7 95.2378ZM262.875 94.9807L262.97 95.212L263.145 95.1404L263.05 94.909L262.955 94.6777L262.78 94.7493L262.875 94.9807ZM263.05 94.909L262.857 95.0679L263.032 95.2806L263.225 95.1217L263.418 94.9628L263.243 94.7502L263.05 94.909ZM263.225 95.1217L263.408 95.2919L263.583 95.1036L263.4 94.9334L263.217 94.7632L263.042 94.9515L263.225 95.1217ZM263.4 94.9334L263.197 95.0788L263.372 95.3236L263.575 95.1783L263.778 95.0329L263.603 94.788L263.4 94.9334ZM263.575 95.1783L263.708 95.3903L263.882 95.2809L263.75 95.0689L263.618 94.8569L263.443 94.9663L263.575 95.1783ZM263.75 95.0689L263.904 95.2661L264.079 95.1299L263.925 94.9326L263.771 94.7354L263.596 94.8716L263.75 95.0689ZM263.925 94.9326L263.794 95.1454L263.969 95.2534L264.1 95.0406L264.231 94.8279L264.056 94.7199L263.925 94.9326ZM264.1 95.0406L264.309 95.1774L264.484 94.9096L264.275 94.7729L264.066 94.6361L263.891 94.9039L264.1 95.0406ZM264.275 94.7729L264.073 94.9205L264.248 95.1596L264.45 95.012L264.652 94.8644L264.477 94.6252L264.275 94.7729ZM264.45 95.012L264.275 95.1906L264.45 95.362L264.625 95.1833L264.8 95.0047L264.625 94.8334L264.45 95.012ZM264.625 95.1833L264.853 95.2868L265.028 94.902L264.8 94.7985L264.572 94.695L264.397 95.0798L264.625 95.1833ZM264.8 94.7985L264.58 94.9173L264.755 95.2414L264.975 95.1226L265.195 95.0039L265.02 94.6797L264.8 94.7985ZM264.975 95.1226L264.929 94.8768L264.782 94.9042L264.827 95.15L264.873 95.3958L265.021 95.3684L264.975 95.1226ZM264.827 95.15L264.614 95.2801L264.72 95.4551L264.934 95.325L265.147 95.1949L265.041 95.0199L264.827 95.15ZM264.934 95.325L264.687 95.2863L264.66 95.4613L264.907 95.5L265.154 95.5387L265.181 95.3637L264.934 95.325ZM264.907 95.5L264.739 95.6852L264.931 95.8602L265.099 95.675L265.267 95.4898L265.075 95.3148L264.907 95.5ZM265.099 95.675L264.942 95.481L264.726 95.656L264.884 95.85L265.042 96.044L265.257 95.869L265.099 95.675ZM264.884 95.85L264.667 95.7259L264.567 95.9009L264.784 96.025L265.001 96.1491L265.101 95.9741L264.884 95.85ZM264.784 96.025L264.569 96.1519L264.672 96.3269L264.887 96.2L265.103 96.0731L265 95.8981L264.784 96.025ZM264.887 96.2L264.668 96.0791L264.572 96.2541L264.79 96.375L265.009 96.4959L265.106 96.3209L264.887 96.2ZM264.79 96.375L264.591 96.526L264.724 96.701L264.923 96.55L265.122 96.399L264.99 96.224L264.79 96.375ZM264.923 96.55L264.7 96.4375L264.612 96.6125L264.835 96.725L265.058 96.8375L265.146 96.6625L264.923 96.55ZM264.835 96.725L264.629 96.8671L264.75 97.0421L264.956 96.9L265.161 96.7579L265.041 96.5829L264.835 96.725ZM264.956 96.9L264.772 96.7302L264.61 96.9052L264.794 97.075L264.977 97.2448L265.139 97.0698L264.956 96.9ZM264.794 97.075L264.561 97.1665L264.63 97.3415L264.863 97.25L265.095 97.1585L265.027 96.9835L264.794 97.075ZM264.863 97.25L264.739 97.4672L265.046 97.6422L265.17 97.425L265.294 97.2078L264.986 97.0328L264.863 97.25ZM265.17 97.425L264.937 97.3351L264.869 97.5101L265.102 97.6L265.336 97.6899L265.403 97.5149L265.17 97.425ZM265.102 97.6L264.875 97.7031L264.954 97.8781L265.182 97.775L265.409 97.6719L265.33 97.4969L265.102 97.6ZM265.182 97.775L264.956 97.6681L264.873 97.8431L265.099 97.95L265.325 98.0569L265.408 97.8819L265.182 97.775ZM265.099 97.95L264.997 97.7217L264.773 97.8218L264.875 98.05L264.977 98.2783L265.201 98.1783L265.099 97.95ZM264.875 98.05L264.71 97.8626L264.535 98.0172L264.7 98.2046L264.865 98.392L265.04 98.2374L264.875 98.05ZM264.7 98.2046L264.917 98.0797L264.742 97.7762L264.525 97.9011L264.308 98.026L264.483 98.3295L264.7 98.2046ZM264.525 97.9011L264.311 97.7722L264.136 98.0628L264.35 98.1918L264.564 98.3207L264.739 98.0301L264.525 97.9011ZM264.35 98.1918L264.581 98.0971L264.406 97.6695L264.175 97.7643L263.944 97.859L264.119 98.2865L264.35 98.1918ZM264.175 97.7643L263.949 97.6565L263.774 98.0227L264 98.1305L264.226 98.2383L264.401 97.872L264.175 97.7643ZM264 98.1305L264.155 97.9344L263.98 97.796L263.825 97.992L263.67 98.1881L263.845 98.3265L264 98.1305ZM263.825 97.992L264.022 97.8384L263.847 97.6137L263.65 97.7674L263.453 97.921L263.628 98.1457L263.825 97.992ZM263.65 97.7674L263.51 97.5604L263.335 97.6789L263.475 97.8859L263.615 98.0929L263.79 97.9744L263.65 97.7674ZM263.475 97.8859L263.378 97.6556L263.203 97.7296L263.3 97.9599L263.397 98.1901L263.572 98.1161L263.475 97.8859ZM263.3 97.9599L263.492 97.7996L263.317 97.5901L263.125 97.7504L262.933 97.9106L263.108 98.1201L263.3 97.9599ZM263.125 97.7504L262.894 97.6536L262.719 98.0704L262.95 98.1672L263.181 98.2639L263.356 97.8472L263.125 97.7504ZM262.95 98.1672L263.11 97.9753L262.935 97.8291L262.775 98.021L262.615 98.2128L262.79 98.359L262.95 98.1672ZM262.775 98.021L262.733 97.7745L262.558 97.8042L262.6 98.0506L262.642 98.2971L262.817 98.2674L262.775 98.021ZM262.6 98.0506L262.745 97.8467L262.57 97.7226L262.425 97.9266L262.28 98.1306L262.455 98.2546L262.6 98.0506ZM262.425 97.9266L262.313 97.703L262.138 97.7905L262.25 98.0141L262.362 98.2377L262.537 98.1502L262.425 97.9266ZM262.25 98.0141L262.061 97.8503L261.886 98.0522L262.075 98.216L262.264 98.3797L262.439 98.1778L262.25 98.0141ZM262.075 98.216L262.302 98.1123L262.127 97.7284L261.9 97.8321L261.673 97.9357L261.848 98.3197L262.075 98.216ZM261.9 97.8321L261.723 97.6555L261.548 97.8308L261.725 98.0074L261.902 98.184L262.077 98.0086L261.9 97.8321ZM261.725 98.0074L261.901 97.8301L261.726 97.6562L261.55 97.8335L261.374 98.0108L261.549 98.1848L261.725 98.0074ZM261.55 97.8335L261.366 97.6644L261.191 97.8549L261.375 98.024L261.559 98.1931L261.734 98.0026L261.55 97.8335ZM261.375 98.024L261.258 97.8031L261.083 97.8957L261.2 98.1167L261.317 98.3376L261.492 98.2449L261.375 98.024ZM261.2 98.1167L261.397 97.9624L261.222 97.7393L261.025 97.8936L260.828 98.0479L261.003 98.271L261.2 98.1167ZM261.025 97.8936L260.804 97.7764L260.629 98.1064L260.85 98.2235L261.071 98.3407L261.246 98.0107L261.025 97.8936ZM260.85 98.2235L261.08 98.1258L260.905 97.7139L260.675 97.8116L260.445 97.9094L260.62 98.3213L260.85 98.2235ZM260.675 97.8116L260.482 97.6528L260.307 97.8657L260.5 98.0245L260.693 98.1832L260.868 97.9704L260.675 97.8116ZM260.5 98.0245L260.414 97.7898L260.239 97.8542L260.325 98.0889L260.411 98.3235L260.586 98.2591L260.5 98.0245ZM260.325 98.0889L260.423 97.859L260.248 97.7841L260.15 98.0139L260.052 98.2437L260.227 98.3187L260.325 98.0889ZM260.15 98.0139L260.324 97.8343L260.149 97.6648L259.975 97.8444L259.801 98.0239L259.976 98.1935L260.15 98.0139ZM259.975 97.8444L259.786 97.6806L259.611 97.8825L259.8 98.0463L259.989 98.21L260.164 98.0081L259.975 97.8444ZM259.8 98.0463L260.012 97.9143L259.837 97.6328L259.625 97.7648L259.413 97.8968L259.588 98.1783L259.8 98.0463ZM259.625 97.7648L259.554 97.5251L259.379 97.5769L259.45 97.8166L259.521 98.0563L259.696 98.0045L259.625 97.7648ZM259.45 97.8166L259.492 97.5702L259.317 97.5402L259.275 97.7866L259.233 98.033L259.408 98.063L259.45 97.8166ZM259.275 97.7866L259.057 97.664L258.882 97.9749L259.1 98.0975L259.318 98.2202L259.493 97.9092L259.275 97.7866ZM259.1 98.0975L259.309 97.9608L259.134 97.6929L258.925 97.8297L258.716 97.9664L258.891 98.2343L259.1 98.0975ZM258.925 97.8297L258.801 97.6124L258.626 97.712L258.75 97.9293L258.874 98.1466L259.049 98.0469L258.925 97.8297ZM258.75 97.9293L258.669 97.6928L258.494 97.7528L258.575 97.9893L258.656 98.2258L258.831 98.1658L258.75 97.9293ZM258.575 97.9893L258.426 97.7883L258.251 97.9178L258.4 98.1188L258.549 98.3197L258.724 98.1903L258.575 97.9893ZM258.4 98.1188L258.603 97.9734L258.428 97.7287L258.225 97.8741L258.022 98.0195L258.197 98.2642L258.4 98.1188ZM258.225 97.8741L258.335 97.6496L258.16 97.5638L258.05 97.7883L257.94 98.0127L258.115 98.0985L258.225 97.8741ZM258.05 97.7883L257.891 97.5954L257.716 97.7397L257.875 97.9326L258.034 98.1255L258.209 97.9811L258.05 97.7883ZM257.875 97.9326L257.835 97.6858L257.66 97.7142L257.7 97.961L257.74 98.2077L257.915 98.1794L257.875 97.9326ZM257.7 97.961L257.494 97.8192L257.319 98.0732L257.525 98.215L257.731 98.3568L257.906 98.1028L257.7 97.961ZM257.525 98.215L257.628 97.9871L257.453 97.9082L257.35 98.1362L257.247 98.3641L257.422 98.443L257.525 98.215ZM257.35 98.1362L257.3 97.8912L257.125 97.9269L257.175 98.1719L257.225 98.4168L257.4 98.3811L257.35 98.1362ZM257.175 98.1719L257.398 98.0593L257.223 97.7123L257 97.8249L256.777 97.9375L256.952 98.2845L257.175 98.1719ZM257 97.8249L256.809 97.6633L256.634 97.8699L256.825 98.0315L257.016 98.1931L257.191 97.9865L257 97.8249ZM256.825 98.0315L257.001 97.8541L256.826 97.6803L256.65 97.8576L256.474 98.035L256.649 98.2088L256.825 98.0315ZM256.65 97.8576L256.591 97.6146L256.416 97.6567L256.475 97.8998L256.534 98.1428L256.709 98.1007L256.65 97.8576ZM256.475 97.8998L256.463 97.65L256.288 97.6582L256.3 97.9079L256.312 98.1576L256.487 98.1495L256.475 97.8998ZM256.3 97.9079L256.323 97.6589L256.148 97.643L256.125 97.892L256.102 98.141L256.277 98.1569L256.3 97.9079ZM256.125 97.892L255.9 97.7822L255.725 98.1401L255.95 98.2499L256.175 98.3598L256.35 98.0018L256.125 97.892ZM255.95 98.2499L256.185 98.1641L256.01 97.6854L255.775 97.7712L255.54 97.857L255.715 98.3358L255.95 98.2499ZM255.775 97.7712L255.605 97.5878L255.43 97.75L255.6 97.9334L255.77 98.1168L255.945 97.9546L255.775 97.7712ZM255.6 97.9334L255.441 97.7407L255.266 97.8855L255.425 98.0781L255.584 98.2708L255.759 98.126L255.6 97.9334ZM255.425 98.0781L255.587 97.8879L255.412 97.7387L255.25 97.9289L255.088 98.1191L255.263 98.2683L255.425 98.0781ZM255.25 97.9289L255.143 97.7029L254.968 97.7858L255.075 98.0117L255.182 98.2377L255.357 98.1549L255.25 97.9289ZM255.075 98.0117L255.254 97.8374L255.079 97.6576L254.9 97.832L254.721 98.0064L254.896 98.1861L255.075 98.0117ZM254.9 97.832L254.672 97.7287L254.497 98.1145L254.725 98.2178L254.953 98.3211L255.128 97.9352L254.9 97.832ZM254.725 98.2178L254.928 98.0719L254.753 97.8284L254.55 97.9742L254.347 98.1201L254.522 98.3637L254.725 98.2178ZM254.55 97.9742L254.607 97.7309L254.432 97.6897L254.375 97.9331L254.318 98.1764L254.493 98.2176L254.55 97.9742ZM254.375 97.9331L254.252 97.7153L254.077 97.8138L254.2 98.0317L254.323 98.2495L254.498 98.1509L254.375 97.9331ZM254.2 98.0317L254.335 97.8215L254.16 97.7088L254.025 97.919L253.89 98.1292L254.065 98.2418L254.2 98.0317ZM254.025 97.919L254.079 97.6749L253.904 97.636L253.85 97.88L253.796 98.1241L253.971 98.163L254.025 97.919ZM253.85 97.88L253.708 97.6742L253.533 97.7948L253.675 98.0007L253.817 98.2065L253.992 98.0859L253.85 97.88ZM253.675 98.0007L253.527 97.7992L253.352 97.9277L253.5 98.1292L253.648 98.3307L253.823 98.2022L253.675 98.0007ZM253.5 98.1292L253.69 97.9669L253.515 97.7619L253.325 97.9242L253.135 98.0866L253.31 98.2915L253.5 98.1292ZM253.325 97.9242L253.242 97.6884L253.067 97.75L253.15 97.9858L253.233 98.2217L253.408 98.1601L253.325 97.9242ZM253.15 97.9858L253.302 97.7871L253.127 97.6535L252.975 97.8523L252.823 98.0511L252.998 98.1846L253.15 97.9858ZM252.975 97.8523L252.767 97.7129L252.592 97.9735L252.8 98.1129L253.008 98.2523L253.183 97.9917L252.975 97.8523ZM252.8 98.1129L252.928 97.8979L252.753 97.794L252.625 98.0089L252.497 98.2239L252.672 98.3278L252.8 98.1129ZM252.625 98.0089L252.431 97.8511L252.256 98.066L252.45 98.2239L252.644 98.3817L252.819 98.1668L252.625 98.0089ZM252.45 98.2239L252.68 98.1254L252.505 97.717L252.275 97.8155L252.045 97.914L252.22 98.3223L252.45 98.2239ZM252.275 97.8155L252.299 97.5666L252.124 97.5498L252.1 97.7986L252.076 98.0475L252.251 98.0643L252.275 97.8155ZM252.1 97.7986L251.87 97.7005L251.695 98.1104L251.925 98.2085L252.155 98.3067L252.33 97.8968L252.1 97.7986ZM251.925 98.2085L251.879 97.9629L251.704 97.996L251.75 98.2416L251.796 98.4873L251.971 98.4542L251.925 98.2085ZM251.75 98.2416L251.977 98.1374L251.802 97.7558L251.575 97.86L251.348 97.9642L251.523 98.3458L251.75 98.2416ZM251.575 97.86L251.566 97.6101L251.391 97.6161L251.4 97.866L251.409 98.1158L251.584 98.1098L251.575 97.86ZM251.4 97.866L251.18 97.7465L251.005 98.0681L251.225 98.1876L251.445 98.3071L251.62 97.9855L251.4 97.866ZM251.225 98.1876L251.444 98.067L251.269 97.7493L251.05 97.8699L250.831 97.9905L251.006 98.3082L251.225 98.1876ZM251.05 97.8699L250.915 97.6594L250.74 97.7714L250.875 97.982L251.01 98.1925L251.185 98.0804L251.05 97.8699ZM250.875 97.982L251.047 97.8008L250.872 97.6344L250.7 97.8156L250.528 97.9968L250.703 98.1632L250.875 97.982ZM250.7 97.8156L250.622 97.5781L250.447 97.6357L250.525 97.8731L250.603 98.1106L250.778 98.0531L250.7 97.8156ZM250.525 97.8731L250.572 97.6277L250.397 97.5939L250.35 97.8394L250.303 98.0849L250.478 98.1186L250.525 97.8731ZM250.35 97.8394L250.179 97.6571L250.004 97.8214L250.175 98.0037L250.346 98.186L250.521 98.0217L250.35 97.8394ZM250.175 98.0037L250.246 97.764L250.071 97.7121L250 97.9517L249.929 98.1914L250.104 98.2433L250.175 98.0037ZM250 97.9517L250.187 97.7859L250.012 97.5884L249.825 97.7542L249.638 97.92L249.813 98.1175L250 97.9517ZM249.825 97.7542L249.695 97.5408L249.52 97.6476L249.65 97.861L249.78 98.0744L249.955 97.9676L249.825 97.7542ZM249.65 97.861L249.532 97.6406L249.357 97.7344L249.475 97.9548L249.593 98.1751L249.768 98.0814L249.65 97.861ZM249.475 97.9548L249.276 97.8028L249.101 98.0315L249.3 98.1835L249.499 98.3354L249.674 98.1067L249.475 97.9548ZM249.3 98.1835L249.509 98.0464L249.334 97.7794L249.125 97.9164L248.916 98.0535L249.091 98.3205L249.3 98.1835ZM249.125 97.9164L248.935 97.7543L248.76 97.9597L248.95 98.1219L249.14 98.284L249.315 98.0786L249.125 97.9164ZM248.95 98.1219L249.126 97.9439L248.951 97.7713L248.775 97.9493L248.599 98.1273L248.774 98.2999L248.95 98.1219ZM248.775 97.9493L248.591 97.7803L248.416 97.9711L248.6 98.1401L248.784 98.3091L248.959 98.1183L248.775 97.9493ZM248.6 98.1401L248.736 97.9302L248.561 97.8169L248.425 98.0268L248.289 98.2367L248.464 98.35L248.6 98.1401ZM248.425 98.0268L248.312 97.8036L248.137 97.8919L248.25 98.1151L248.363 98.3383L248.538 98.25L248.425 98.0268ZM248.25 98.1151L248.418 97.9304L248.243 97.7708L248.075 97.9555L247.907 98.1402L248.082 98.2998L248.25 98.1151ZM248.075 97.9555L247.868 97.8153L247.693 98.0737L247.9 98.2139L248.107 98.3541L248.282 98.0956L248.075 97.9555ZM247.9 98.2139L247.903 97.9639L247.728 97.9617L247.725 98.2116L247.722 98.4616L247.897 98.4638L247.9 98.2139ZM247.725 98.2116L247.935 98.0763L247.76 97.8045L247.55 97.9399L247.34 98.0753L247.515 98.347L247.725 98.2116ZM247.55 97.9399L247.714 97.7514L247.539 97.5989L247.375 97.7874L247.211 97.9759L247.386 98.1284L247.55 97.9399ZM247.375 97.7874L247.201 97.6077L247.026 97.7769L247.2 97.9566L247.374 98.1363L247.549 97.9671L247.375 97.7874ZM247.2 97.9566L247.051 97.7561L246.876 97.8864L247.025 98.0869L247.174 98.2874L247.349 98.1571L247.2 97.9566ZM247.025 98.0869L247.231 97.9454L247.056 97.6904L246.85 97.8319L246.644 97.9734L246.819 98.2284L247.025 98.0869ZM246.85 97.8319L246.896 97.5861L246.721 97.5537L246.675 97.7995L246.629 98.0453L246.804 98.0777L246.85 97.8319ZM246.675 97.7995L246.557 97.5791L246.382 97.6729L246.5 97.8933L246.618 98.1136L246.793 98.0199L246.675 97.7995ZM246.5 97.8933L246.61 97.669L246.435 97.5828L246.325 97.8071L246.215 98.0314L246.39 98.1175L246.5 97.8933ZM246.325 97.8071L246.096 97.7079L245.921 98.1128L246.15 98.212L246.379 98.3112L246.554 97.9063L246.325 97.8071ZM246.15 98.212L246.232 97.9757L246.057 97.9153L245.975 98.1517L245.893 98.388L246.068 98.4484L246.15 98.212ZM245.975 98.1517L245.871 97.9243L245.696 98.0043L245.8 98.2317L245.904 98.459L246.079 98.379L245.975 98.1517ZM245.8 98.2317L246.006 98.0896L245.831 97.8362L245.625 97.9782L245.419 98.1203L245.594 98.3737L245.8 98.2317ZM245.625 97.9782L245.561 97.7365L245.386 97.7828L245.45 98.0245L245.514 98.2662L245.689 98.2199L245.625 97.9782ZM245.45 98.0245L245.612 97.8345L245.437 97.6848L245.275 97.8748L245.113 98.0648L245.288 98.2145L245.45 98.0245ZM245.275 97.8748L245.051 97.7648L244.876 98.1216L245.1 98.2317L245.324 98.3418L245.499 97.9849L245.275 97.8748ZM245.1 98.2317L245.302 98.0843L245.127 97.8446L244.925 97.992L244.723 98.1394L244.898 98.3791L245.1 98.2317ZM244.925 97.992L244.804 97.773L244.629 97.8693L244.75 98.0883L244.871 98.3073L245.046 98.211L244.925 97.992ZM244.75 98.0883L244.875 97.8719L244.7 97.7706L244.575 97.987L244.45 98.2034L244.625 98.3047L244.75 98.0883ZM244.575 97.987L244.538 97.7399L244.363 97.7663L244.4 98.0135L244.437 98.2607L244.612 98.2342L244.575 97.987ZM244.4 98.0135L244.383 97.7641L244.208 97.7759L244.225 98.0253L244.242 98.2748L244.417 98.263L244.4 98.0135ZM244.225 98.0253L244.123 97.7971L243.948 97.8752L244.05 98.1035L244.152 98.3318L244.327 98.2536L244.225 98.0253ZM244.05 98.1035L244.263 97.9722L244.088 97.6887L243.875 97.82L243.662 97.9514L243.837 98.2348L244.05 98.1035ZM243.875 97.82L243.721 97.6229L243.546 97.7595L243.7 97.9566L243.854 98.1537L244.029 98.0172L243.875 97.82ZM243.7 97.9566L243.83 97.7429L243.655 97.6367L243.525 97.8504L243.395 98.0641L243.57 98.1703L243.7 97.9566ZM243.525 97.8504L243.305 97.7309L243.13 98.0525L243.35 98.172L243.57 98.2915L243.745 97.9699L243.525 97.8504ZM243.35 98.172L243.525 97.9936L243.35 97.8217L243.175 98.0001L243 98.1785L243.175 98.3503L243.35 98.172ZM243.175 98.0001L243.328 97.8026L243.153 97.6668L243 97.8643L242.847 98.0619L243.022 98.1976L243.175 98.0001ZM243 97.8643L242.808 97.7044L242.633 97.9148L242.825 98.0747L243.017 98.2346L243.192 98.0242L243 97.8643ZM242.825 98.0747L242.804 97.8255L242.629 97.8402L242.65 98.0893L242.671 98.3384L242.846 98.3238L242.825 98.0747ZM242.65 98.0893L242.858 97.9512L242.683 97.6871L242.475 97.8253L242.267 97.9634L242.442 98.2274L242.65 98.0893ZM242.475 97.8253L242.424 97.5806L242.249 97.6171L242.3 97.8618L242.351 98.1066L242.526 98.07L242.475 97.8253ZM242.3 97.8618L242.263 97.6146L242.088 97.6411L242.125 97.8883L242.162 98.1355L242.337 98.109L242.3 97.8618ZM242.125 97.8883L241.915 97.753L241.74 98.025L241.95 98.1603L242.16 98.2955L242.335 98.0235L242.125 97.8883ZM241.95 98.1603L242.177 98.0551L242.002 97.6777L241.775 97.7829L241.548 97.8881L241.723 98.2655L241.95 98.1603ZM241.775 97.7829L241.552 97.6699L241.377 98.015L241.6 98.1281L241.823 98.2411L241.998 97.896L241.775 97.7829ZM241.6 98.1281L241.76 97.9362L241.585 97.7901L241.425 97.982L241.265 98.1739L241.44 98.32L241.6 98.1281ZM241.425 97.982L241.546 97.7635L241.371 97.6662L241.25 97.8847L241.129 98.1032L241.304 98.2005L241.425 97.982ZM241.25 97.8847L241.138 97.661L240.963 97.7482L241.075 97.9719L241.187 98.1957L241.362 98.1085L241.25 97.8847ZM241.075 97.9719L241.186 97.748L241.041 97.676L240.93 97.9L240.819 98.124L240.964 98.1959L241.075 97.9719ZM240.93 97.9L241.105 97.7218L240.928 97.5468L240.752 97.725L240.577 97.9032L240.755 98.0782L240.93 97.9ZM240.752 97.725L240.916 97.9139L241.118 97.7389L240.954 97.55L240.79 97.3611L240.588 97.5361L240.752 97.725ZM240.954 97.55L241.102 97.7515L241.34 97.5765L241.192 97.375L241.044 97.1735L240.806 97.3485L240.954 97.55ZM241.192 97.375L241.301 97.1498L240.938 96.9748L240.829 97.2L240.721 97.4252L241.084 97.6002L241.192 97.375ZM240.829 97.2L240.932 97.4279L241.32 97.2529L241.217 97.025L241.114 96.7971L240.727 96.9721L240.829 97.2ZM241.217 97.025L241.322 96.7979L240.941 96.6229L240.837 96.85L240.732 97.0771L241.113 97.2521L241.217 97.025ZM240.837 96.85L241.045 96.9885L241.162 96.8135L240.953 96.675L240.745 96.5365L240.629 96.7115L240.837 96.85ZM240.953 96.675L241.198 96.6243L241.162 96.4493L240.917 96.5L240.672 96.5507L240.709 96.7257L240.953 96.675ZM240.917 96.5L241.069 96.6987L241.298 96.5237L241.146 96.325L240.994 96.1263L240.765 96.3013L240.917 96.5ZM241.146 96.325L241.39 96.38L241.43 96.205L241.186 96.15L240.942 96.095L240.902 96.27L241.146 96.325ZM241.186 96.15L241.281 95.9189L240.857 95.7439L240.762 95.975L240.666 96.2061L241.09 96.3811L241.186 96.15ZM240.762 95.975L240.959 96.129L241.096 95.954L240.899 95.8L240.702 95.646L240.565 95.821L240.762 95.975ZM240.899 95.8L241.13 95.8952L241.202 95.7202L240.971 95.625L240.74 95.5298L240.667 95.7048L240.899 95.8ZM240.971 95.625L241.173 95.4775L241.045 95.3025L240.843 95.45L240.641 95.5975L240.769 95.7725L240.971 95.625ZM240.843 95.45L240.979 95.6596L241.248 95.4846L241.112 95.275L240.976 95.0654L240.707 95.2403L240.843 95.45ZM241.112 95.275L241.34 95.1724L241.261 94.9974L241.034 95.1L240.806 95.2026L240.884 95.3776L241.112 95.275ZM241.034 95.1L241.271 95.0205L241.237 94.9205L241 95L240.763 95.0795L240.796 95.1795L241.034 95.1Z\"\n        fill=\"black\"\n        />\n    </g>\n    <rect\n        id=\"Rectangle 78_2\"\n        x=\"239.5\"\n        y=\"97.5\"\n        width=\"7\"\n        height=\"7\"\n        fill=\"#4A3D20\"\n        stroke=\"black\"\n    />\n    <rect\n        id=\"Rectangle 76_2\"\n        x=\"257.5\"\n        y=\"97.5\"\n        width=\"9\"\n        height=\"7\"\n        fill=\"#A99463\"\n        stroke=\"black\"\n    />\n    <rect\n        id=\"Rectangle 77_2\"\n        x=\"246.5\"\n        y=\"97.5\"\n        width=\"13\"\n        height=\"7\"\n        fill=\"#6F5E37\"\n        stroke=\"black\"\n    />\n    <rect\n        id=\"Rectangle 80_2\"\n        x=\"238.5\"\n        y=\"92.5\"\n        width=\"29\"\n        height=\"3\"\n        rx=\"0.5\"\n        fill=\"#5E503A\"\n        stroke=\"black\"\n    />\n    <g id=\"Union\">\n        <mask id=\"path-77-inside-1_6_626\" fill=\"white\">\n        <path\n            d=\"M261.328 55C262.296 55 263.125 55.6932 263.297 56.6455L267.301 78.8545C267.763 81.4157 267.745 84.0402 267.247 86.5947L266 93H240L239.416 90H233C232.448 90 232 89.5523 232 89V75C232 74.4477 232.448 74 233 74H239.574L242.703 56.6455C242.875 55.6932 243.704 55 244.672 55H261.328Z\"\n        />\n        </mask>\n        <path\n        d=\"M261.328 55C262.296 55 263.125 55.6932 263.297 56.6455L267.301 78.8545C267.763 81.4157 267.745 84.0402 267.247 86.5947L266 93H240L239.416 90H233C232.448 90 232 89.5523 232 89V75C232 74.4477 232.448 74 233 74H239.574L242.703 56.6455C242.875 55.6932 243.704 55 244.672 55H261.328Z\"\n        fill=\"#8B7655\"\n        />\n        <path\n        d=\"M263.297 56.6455L264.281 56.4681L264.281 56.4681L263.297 56.6455ZM267.301 78.8545L266.317 79.0319L266.317 79.0319L267.301 78.8545ZM267.247 86.5947L266.266 86.4036L266.265 86.4036L267.247 86.5947ZM266 93V94H266.824L266.982 93.1911L266 93ZM240 93L239.018 93.1911L239.176 94H240V93ZM239.416 90L240.398 89.8089L240.24 89H239.416V90ZM233 74V73V74ZM239.574 74V75H240.41L240.558 74.1774L239.574 74ZM242.703 56.6455L241.719 56.4681L241.719 56.4681L242.703 56.6455ZM261.328 55V56C261.812 56 262.227 56.3468 262.313 56.823L263.297 56.6455L264.281 56.4681C264.023 55.0396 262.78 54 261.328 54V55ZM263.297 56.6455L262.313 56.8229L266.317 79.0319L267.301 78.8545L268.285 78.6771L264.281 56.4681L263.297 56.6455ZM267.301 78.8545L266.317 79.0319C266.756 81.4712 266.739 83.9708 266.266 86.4036L267.247 86.5947L268.229 86.7859C268.75 84.1097 268.769 81.3601 268.285 78.677L267.301 78.8545ZM267.247 86.5947L266.265 86.4036L265.018 92.8089L266 93L266.982 93.1911L268.229 86.7858L267.247 86.5947ZM266 93V92H240V93V94H266V93ZM240 93L240.982 92.8089L240.398 89.8089L239.416 90L238.434 90.1911L239.018 93.1911L240 93ZM239.416 90V89H233V90V91H239.416V90ZM233 90V89H232H231C231 90.1046 231.895 91 233 91V90ZM232 89H233V75H232H231V89H232ZM232 75H233V74V73C231.895 73 231 73.8954 231 75H232ZM233 74V75H239.574V74V73H233V74ZM239.574 74L240.558 74.1774L243.687 56.8229L242.703 56.6455L241.719 56.4681L238.59 73.8226L239.574 74ZM242.703 56.6455L243.687 56.823C243.773 56.3468 244.188 56 244.672 56V55V54C243.22 54 241.977 55.0396 241.719 56.4681L242.703 56.6455ZM244.672 55V56H261.328V55V54H244.672V55Z\"\n        fill=\"black\"\n        mask=\"url(#path-77-inside-1_6_626)\"\n        />\n    </g>\n    <rect\n        id=\"Rectangle 83\"\n        x=\"251.5\"\n        y=\"48.5\"\n        width=\"3\"\n        height=\"7\"\n        rx=\"0.5\"\n        fill=\"#CECFD0\"\n        stroke=\"black\"\n    />\n    <path\n        id=\"Rectangle 84\"\n        d=\"M251.5 55.4766C251.387 55.4681 251.259 55.4561 251.118 55.4404C250.577 55.3803 249.864 55.2606 249.158 55.0254C247.724 54.5472 246.5 53.6679 246.5 52C246.5 50.3321 247.724 49.4528 249.158 48.9746C249.864 48.7394 250.577 48.6197 251.118 48.5596C251.259 48.5439 251.387 48.5319 251.5 48.5234V55.4766Z\"\n        fill=\"#CECFD0\"\n        stroke=\"black\"\n    />\n    <path\n        id=\"Rectangle 85\"\n        d=\"M258.844 48.5C260.732 48.5 262.543 49.25 263.878 50.585C264.974 51.6806 265.759 53.0475 266.153 54.5459L270.187 69.873C270.27 70.1899 270.031 70.4998 269.703 70.5H268.732C268.514 70.4998 268.322 70.3583 268.256 70.1504L263.531 55.1875C262.968 53.4033 260.622 53.0041 259.499 54.501C259.027 55.1298 258.287 55.5 257.501 55.5H254.5V48.5H258.844Z\"\n        fill=\"#CECFD0\"\n        stroke=\"black\"\n    />\n    <rect\n        id=\"Rectangle 86\"\n        x=\"241.5\"\n        y=\"76.5\"\n        width=\"23\"\n        height=\"11\"\n        rx=\"0.5\"\n        fill=\"#CECFD0\"\n        stroke=\"black\"\n    />\n    <path id=\"1.0 bar\" d=\"M244.986 79.6364V84H244.457V80.1903H244.432L243.366 80.8977V80.3608L244.457 79.6364H244.986ZM246.358 84.0341C246.253 84.0341 246.163 83.9964 246.087 83.9212C246.012 83.8459 245.974 83.7557 245.974 83.6506C245.974 83.5455 246.012 83.4553 246.087 83.38C246.163 83.3047 246.253 83.267 246.358 83.267C246.463 83.267 246.553 83.3047 246.629 83.38C246.704 83.4553 246.741 83.5455 246.741 83.6506C246.741 83.7202 246.724 83.7841 246.688 83.8423C246.654 83.9006 246.608 83.9474 246.55 83.983C246.493 84.017 246.429 84.0341 246.358 84.0341ZM248.906 84.0597C248.585 84.0597 248.312 83.9723 248.086 83.7976C247.86 83.6214 247.688 83.3665 247.568 83.0327C247.449 82.6974 247.389 82.2926 247.389 81.8182C247.389 81.3466 247.449 80.9439 247.568 80.6101C247.689 80.2749 247.862 80.0192 248.088 79.843C248.315 79.6655 248.588 79.5767 248.906 79.5767C249.224 79.5767 249.496 79.6655 249.722 79.843C249.95 80.0192 250.123 80.2749 250.242 80.6101C250.363 80.9439 250.423 81.3466 250.423 81.8182C250.423 82.2926 250.364 82.6974 250.244 83.0327C250.125 83.3665 249.952 83.6214 249.727 83.7976C249.501 83.9723 249.227 84.0597 248.906 84.0597ZM248.906 83.5909C249.224 83.5909 249.472 83.4375 249.648 83.1307C249.824 82.8239 249.912 82.3864 249.912 81.8182C249.912 81.4403 249.871 81.1186 249.79 80.853C249.711 80.5874 249.596 80.3849 249.445 80.2457C249.296 80.1065 249.116 80.0369 248.906 80.0369C248.591 80.0369 248.344 80.1925 248.167 80.5036C247.989 80.8132 247.901 81.2514 247.901 81.8182C247.901 82.196 247.94 82.517 248.02 82.7812C248.099 83.0455 248.214 83.2464 248.363 83.3842C248.513 83.522 248.695 83.5909 248.906 83.5909ZM252.997 84V79.6364H253.5V81.2472H253.543C253.58 81.1903 253.631 81.1179 253.696 81.0298C253.763 80.9403 253.858 80.8608 253.982 80.7912C254.107 80.7202 254.276 80.6847 254.489 80.6847C254.764 80.6847 255.007 80.7536 255.217 80.8913C255.428 81.0291 255.592 81.2244 255.71 81.4773C255.827 81.7301 255.886 82.0284 255.886 82.3722C255.886 82.7188 255.827 83.0192 255.71 83.2734C255.592 83.5263 255.428 83.7223 255.219 83.8615C255.011 83.9993 254.77 84.0682 254.497 84.0682C254.287 84.0682 254.119 84.0334 253.992 83.9638C253.866 83.8928 253.768 83.8125 253.7 83.723C253.632 83.6321 253.58 83.5568 253.543 83.4972H253.483V84H252.997ZM253.491 82.3636C253.491 82.6108 253.528 82.8288 253.6 83.0178C253.673 83.2053 253.778 83.3523 253.918 83.4588C254.057 83.5639 254.227 83.6165 254.429 83.6165C254.639 83.6165 254.815 83.5611 254.955 83.4503C255.097 83.3381 255.204 83.1875 255.275 82.9986C255.347 82.8082 255.384 82.5966 255.384 82.3636C255.384 82.1335 255.348 81.9261 255.277 81.7415C255.207 81.5554 255.102 81.4084 254.96 81.3004C254.819 81.1911 254.642 81.1364 254.429 81.1364C254.224 81.1364 254.053 81.1882 253.913 81.2919C253.774 81.3942 253.669 81.5376 253.598 81.7223C253.527 81.9055 253.491 82.1193 253.491 82.3636ZM257.619 84.0767C257.411 84.0767 257.223 84.0376 257.054 83.9595C256.885 83.88 256.751 83.7656 256.651 83.6165C256.552 83.4659 256.502 83.2841 256.502 83.071C256.502 82.8835 256.539 82.7315 256.613 82.6151C256.687 82.4972 256.786 82.4048 256.909 82.3381C257.033 82.2713 257.169 82.2216 257.318 82.1889C257.469 82.1548 257.62 82.1278 257.772 82.108C257.971 82.0824 258.132 82.0632 258.256 82.0504C258.381 82.0362 258.472 82.0128 258.528 81.9801C258.587 81.9474 258.616 81.8906 258.616 81.8097V81.7926C258.616 81.5824 258.558 81.419 258.443 81.3026C258.33 81.1861 258.157 81.1278 257.925 81.1278C257.685 81.1278 257.497 81.1804 257.361 81.2855C257.224 81.3906 257.129 81.5028 257.073 81.6222L256.596 81.4517C256.681 81.2528 256.795 81.098 256.937 80.9872C257.08 80.875 257.237 80.7969 257.406 80.7528C257.576 80.7074 257.744 80.6847 257.908 80.6847C258.013 80.6847 258.134 80.6974 258.271 80.723C258.408 80.7472 258.541 80.7976 258.669 80.8743C258.798 80.951 258.906 81.0668 258.991 81.2216C259.076 81.3764 259.119 81.5838 259.119 81.8438V84H258.616V83.5568H258.59C258.556 83.6278 258.499 83.7038 258.42 83.7848C258.34 83.8658 258.234 83.9347 258.102 83.9915C257.97 84.0483 257.809 84.0767 257.619 84.0767ZM257.695 83.625C257.894 83.625 258.062 83.5859 258.198 83.5078C258.336 83.4297 258.44 83.3288 258.509 83.2053C258.58 83.0817 258.616 82.9517 258.616 82.8153V82.3551C258.594 82.3807 258.548 82.4041 258.475 82.4254C258.404 82.4453 258.322 82.4631 258.228 82.4787C258.136 82.4929 258.045 82.5057 257.957 82.517C257.871 82.527 257.8 82.5355 257.746 82.5426C257.616 82.5597 257.494 82.5874 257.38 82.6257C257.268 82.6626 257.177 82.7187 257.107 82.794C257.039 82.8679 257.005 82.9687 257.005 83.0966C257.005 83.2713 257.07 83.4034 257.199 83.4929C257.33 83.581 257.495 83.625 257.695 83.625ZM260.036 84V80.7273H260.522V81.2216H260.556C260.616 81.0597 260.724 80.9283 260.88 80.8274C261.036 80.7266 261.213 80.6761 261.409 80.6761C261.445 80.6761 261.492 80.6768 261.547 80.6783C261.602 80.6797 261.644 80.6818 261.673 80.6847V81.196C261.656 81.1918 261.617 81.1854 261.556 81.1768C261.496 81.1669 261.433 81.1619 261.366 81.1619C261.207 81.1619 261.065 81.1953 260.94 81.2621C260.816 81.3274 260.718 81.4183 260.646 81.5348C260.575 81.6499 260.539 81.7812 260.539 81.929V84H260.036Z\" fill=\"black\"/>\n\n    </g>\n    <g id=\"regulator_2\">\n    <g id=\"Rectangle 79_3\">\n        <path d=\"M1000 198H1024V201H1000V198Z\" fill=\"#CECFD0\" />\n        <path\n        d=\"M1000 198V197.75H999.653L999.763 198.079L1000 198ZM1000.1 198L1000.34 197.915L1000.28 197.75H1000.1V198ZM1000.17 198.207L999.94 198.292L999.991 198.434L1000.14 198.455L1000.17 198.207ZM1000.35 198.231L1000.32 198.479L1000.43 198.495L1000.52 198.415L1000.35 198.231ZM1000.53 198.07L1000.43 197.839L1000.39 197.856L1000.36 197.886L1000.53 198.07ZM1000.7 197.997L1000.8 198.228L1000.86 198.202L1000.9 198.145L1000.7 197.997ZM1000.88 197.757L1001.07 197.596L1000.86 197.353L1000.67 197.61L1000.88 197.757ZM1001.05 197.964L1001.25 197.819L1001.25 197.811L1001.24 197.803L1001.05 197.964ZM1001.23 198.21L1001.02 198.355L1001.22 198.628L1001.42 198.364L1001.23 198.21ZM1001.4 197.985L1001.3 197.757L1001.24 197.782L1001.2 197.832L1001.4 197.985ZM1001.58 197.908L1001.67 197.678L1001.57 197.635L1001.47 197.679L1001.58 197.908ZM1001.75 197.983L1001.65 198.213L1001.78 198.269L1001.9 198.186L1001.75 197.983ZM1001.93 197.857L1002.09 197.666L1001.94 197.541L1001.78 197.654L1001.93 197.857ZM1002.1 198.004L1001.94 198.195L1002.14 198.36L1002.3 198.16L1002.1 198.004ZM1002.28 197.785L1002.48 197.647L1002.29 197.362L1002.08 197.629L1002.28 197.785ZM1002.45 198.048L1002.24 198.187L1002.35 198.344L1002.53 198.286L1002.45 198.048ZM1002.62 197.991L1002.61 197.742L1002.58 197.744L1002.55 197.754L1002.62 197.991ZM1002.8 197.98L1002.82 198.23L1002.88 198.226L1002.93 198.196L1002.8 197.98ZM1002.98 197.877L1003.14 197.694L1003.01 197.567L1002.85 197.662L1002.98 197.877ZM1003.15 198.039L1002.98 198.223L1003.17 198.397L1003.34 198.204L1003.15 198.039ZM1003.33 197.84L1003.33 197.59L1003.21 197.588L1003.14 197.675L1003.33 197.84ZM1003.5 197.843L1003.56 197.6L1003.53 197.594L1003.5 197.593L1003.5 197.843ZM1003.68 197.885L1003.62 198.128L1003.67 198.141L1003.73 198.129L1003.68 197.885ZM1003.85 197.847L1004.08 197.747L1004 197.559L1003.8 197.602L1003.85 197.847ZM1004.03 198.249L1003.8 198.348L1003.98 198.774L1004.23 198.385L1004.03 198.249ZM1004.2 197.98L1004.03 197.8L1004.01 197.82L1003.99 197.843L1004.2 197.98ZM1004.38 197.811L1004.38 197.561L1004.27 197.56L1004.2 197.631L1004.38 197.811ZM1004.55 197.811L1004.59 197.564L1004.57 197.561L1004.55 197.561L1004.55 197.811ZM1004.72 197.839L1004.93 197.692L1004.87 197.608L1004.76 197.592L1004.72 197.839ZM1004.9 198.079L1004.7 198.226L1004.72 198.261L1004.76 198.285L1004.9 198.079ZM1005.08 198.2L1004.93 198.406L1005.02 198.469L1005.13 198.444L1005.08 198.2ZM1005.25 198.159L1005.31 198.402L1005.42 198.375L1005.47 198.273L1005.25 198.159ZM1005.43 197.817L1005.62 197.655L1005.37 197.37L1005.2 197.703L1005.43 197.817ZM1005.6 198.022L1005.41 198.184L1005.62 198.433L1005.81 198.164L1005.6 198.022ZM1005.78 197.767L1005.86 197.533L1005.68 197.464L1005.57 197.626L1005.78 197.767ZM1005.95 197.833L1006.18 197.728L1006.13 197.635L1006.04 197.599L1005.95 197.833ZM1006.12 198.213L1005.9 198.318L1005.96 198.454L1006.11 198.463L1006.12 198.213ZM1006.3 198.223L1006.29 198.472L1006.36 198.477L1006.43 198.435L1006.3 198.223ZM1006.47 198.114L1006.44 197.867L1006.39 197.874L1006.34 197.902L1006.47 198.114ZM1006.65 198.089L1006.69 198.336L1006.74 198.329L1006.79 198.298L1006.65 198.089ZM1006.83 197.974L1006.98 197.782L1006.84 197.663L1006.69 197.765L1006.83 197.974ZM1007 198.119L1006.84 198.312L1007.06 198.496L1007.21 198.249L1007 198.119ZM1007.18 197.832L1007.1 197.594L1007.01 197.623L1006.96 197.702L1007.18 197.832ZM1007.35 197.776L1007.56 197.641L1007.46 197.479L1007.27 197.538L1007.35 197.776ZM1007.53 198.049L1007.31 198.184L1007.52 198.51L1007.73 198.185L1007.53 198.049ZM1007.7 197.779L1007.89 197.612L1007.67 197.367L1007.49 197.643L1007.7 197.779ZM1007.88 197.975L1007.69 198.141L1007.84 198.308L1008.02 198.179L1007.88 197.975ZM1008.05 197.852L1008.26 197.721L1008.12 197.494L1007.91 197.647L1008.05 197.852ZM1008.23 198.136L1008.01 198.267L1008.06 198.349L1008.16 198.376L1008.23 198.136ZM1008.4 198.187L1008.33 198.427L1008.36 198.437L1008.4 198.437L1008.4 198.187ZM1008.57 198.187L1008.57 198.437L1008.73 198.437L1008.8 198.292L1008.57 198.187ZM1008.75 197.807L1008.72 197.559L1008.58 197.577L1008.52 197.703L1008.75 197.807ZM1008.93 197.785L1008.99 197.543L1008.94 197.531L1008.89 197.537L1008.93 197.785ZM1009.1 197.832L1009.04 198.073L1009.09 198.088L1009.15 198.077L1009.1 197.832ZM1009.28 197.798L1009.45 197.621L1009.36 197.528L1009.23 197.553L1009.28 197.798ZM1009.45 197.972L1009.63 197.803L1009.63 197.795L1009.45 197.972ZM1009.62 198.162L1009.44 198.332L1009.52 198.419L1009.64 198.412L1009.62 198.162ZM1009.8 198.151L1009.82 198.401L1009.94 198.393L1010.01 198.29L1009.8 198.151ZM1009.98 197.889L1010.17 197.736L1009.96 197.459L1009.77 197.75L1009.98 197.889ZM1010.15 198.117L1009.95 198.269L1010.08 198.432L1010.26 198.341L1010.15 198.117ZM1010.32 198.03L1010.46 197.821L1010.34 197.743L1010.21 197.806L1010.32 198.03ZM1010.5 198.144L1010.36 198.354L1010.47 198.423L1010.59 198.378L1010.5 198.144ZM1010.68 198.079L1010.64 197.831L1010.61 197.835L1010.59 197.844L1010.68 198.079ZM1010.85 198.052L1010.89 198.3L1010.97 198.287L1011.03 198.226L1010.85 198.052ZM1011.03 197.871L1011.25 197.755L1011.09 197.448L1010.85 197.697L1011.03 197.871ZM1011.2 198.204L1010.98 198.32L1011.2 198.738L1011.42 198.322L1011.2 198.204ZM1011.38 197.877L1011.45 197.637L1011.25 197.579L1011.15 197.759L1011.38 197.877ZM1011.55 197.929L1011.48 198.169L1011.61 198.207L1011.71 198.123L1011.55 197.929ZM1011.73 197.786L1011.94 197.652L1011.78 197.414L1011.57 197.593L1011.73 197.786ZM1011.9 198.061L1011.69 198.195L1011.88 198.498L1012.1 198.212L1011.9 198.061ZM1012.08 197.831L1011.98 197.599L1011.92 197.625L1011.88 197.679L1012.08 197.831ZM1012.25 197.759L1012.48 197.657L1012.38 197.436L1012.16 197.528L1012.25 197.759ZM1012.43 198.15L1012.2 198.252L1012.34 198.571L1012.6 198.332L1012.43 198.15ZM1012.6 197.986L1012.66 197.744L1012.53 197.71L1012.43 197.803L1012.6 197.986ZM1012.78 198.031L1012.71 198.273L1012.76 198.284L1012.8 198.279L1012.78 198.031ZM1012.95 198.01L1013.04 197.776L1012.98 197.754L1012.92 197.761L1012.95 198.01ZM1013.12 198.077L1013.04 198.31L1013.14 198.352L1013.25 198.296L1013.12 198.077ZM1013.3 197.98L1013.24 197.737L1013.21 197.744L1013.18 197.761L1013.3 197.98ZM1013.48 197.939L1013.56 197.704L1013.49 197.678L1013.42 197.696L1013.48 197.939ZM1013.65 198.003L1013.83 197.831L1013.79 197.789L1013.74 197.769L1013.65 198.003ZM1013.82 198.188L1013.64 198.36L1013.86 198.583L1014.03 198.33L1013.82 198.188ZM1014 197.935L1013.86 197.73L1013.82 197.756L1013.79 197.793L1014 197.935ZM1014.17 197.814L1014.4 197.695L1014.26 197.448L1014.03 197.608L1014.17 197.814ZM1014.35 198.139L1014.13 198.258L1014.17 198.333L1014.25 198.368L1014.35 198.139ZM1014.52 198.217L1014.42 198.445L1014.56 198.505L1014.68 198.416L1014.52 198.217ZM1014.7 198.084L1014.65 197.839L1014.59 197.851L1014.55 197.885L1014.7 198.084ZM1014.88 198.047L1014.93 198.291L1014.97 198.283L1015 198.263L1014.88 198.047ZM1015.05 197.945L1014.95 197.714L1014.94 197.72L1014.92 197.729L1015.05 197.945ZM1015.23 197.873L1015.44 197.74L1015.32 197.561L1015.13 197.641L1015.23 197.873ZM1015.4 198.151L1015.19 198.284L1015.28 198.427L1015.44 198.397L1015.4 198.151ZM1015.57 198.12L1015.62 198.366L1015.71 198.35L1015.77 198.281L1015.57 198.12ZM1015.75 197.913L1015.61 197.704L1015.58 197.724L1015.56 197.752L1015.75 197.913ZM1015.93 197.798L1016.1 197.617L1015.95 197.48L1015.79 197.589L1015.93 197.798ZM1016.1 197.965L1015.93 198.146L1016.12 198.33L1016.29 198.125L1016.1 197.965ZM1016.27 197.754L1016.49 197.634L1016.32 197.311L1016.08 197.594L1016.27 197.754ZM1016.45 198.074L1016.23 198.194L1016.36 198.424L1016.58 198.287L1016.45 198.074ZM1016.62 197.967L1016.53 197.738L1016.51 197.745L1016.49 197.754L1016.62 197.967ZM1016.8 197.891L1016.9 198.121L1016.92 198.114L1016.93 198.105L1016.8 197.891ZM1016.98 197.785L1017.19 197.65L1017.05 197.445L1016.85 197.571L1016.98 197.785ZM1017.15 198.057L1016.94 198.192L1017.15 198.526L1017.36 198.188L1017.15 198.057ZM1017.33 197.772L1017.56 197.685L1017.38 197.206L1017.11 197.641L1017.33 197.772ZM1017.5 198.24L1017.27 198.328L1017.47 198.863L1017.72 198.352L1017.5 198.24ZM1017.68 197.892L1017.83 197.697L1017.59 197.504L1017.45 197.78L1017.68 197.892ZM1017.85 198.032L1017.69 198.228L1017.82 198.327L1017.96 198.256L1017.85 198.032ZM1018.02 197.946L1018.24 197.811L1018.12 197.622L1017.91 197.722L1018.02 197.946ZM1018.2 198.22L1017.99 198.354L1018.24 198.744L1018.43 198.322L1018.2 198.22ZM1018.38 197.829L1018.4 197.58L1018.22 197.564L1018.15 197.727L1018.38 197.829ZM1018.55 197.845L1018.53 198.094L1018.58 198.1L1018.64 198.08L1018.55 197.845ZM1018.73 197.78L1018.7 197.532L1018.67 197.535L1018.64 197.546L1018.73 197.78ZM1018.9 197.759L1019.03 197.545L1018.96 197.501L1018.87 197.511L1018.9 197.759ZM1019.08 197.865L1018.95 198.079L1019.03 198.128L1019.12 198.11L1019.08 197.865ZM1019.25 197.832L1019.34 197.599L1019.27 197.573L1019.2 197.586L1019.25 197.832ZM1019.43 197.9L1019.65 197.783L1019.6 197.701L1019.52 197.668L1019.43 197.9ZM1019.6 198.23L1019.38 198.347L1019.53 198.628L1019.77 198.416L1019.6 198.23ZM1019.77 198.073L1019.94 198.26L1019.94 198.259L1019.77 198.073ZM1019.95 197.916L1020.16 197.777L1020 197.537L1019.78 197.73L1019.95 197.916ZM1020.12 198.176L1019.92 198.316L1019.97 198.393L1020.06 198.418L1020.12 198.176ZM1020.3 198.224L1020.23 198.465L1020.4 198.511L1020.5 198.369L1020.3 198.224ZM1020.48 197.978L1020.56 197.743L1020.38 197.677L1020.27 197.833L1020.48 197.978ZM1020.65 198.042L1020.56 198.277L1020.58 198.283L1020.6 198.287L1020.65 198.042ZM1020.83 198.081L1020.77 198.325L1020.95 198.364L1021.04 198.206L1020.83 198.081ZM1021 197.78L1021.21 197.644L1020.99 197.301L1020.78 197.654L1021 197.78ZM1021.18 198.051L1020.96 198.187L1020.99 198.224L1021.02 198.251L1021.18 198.051ZM1021.35 198.183L1021.2 198.383L1021.45 198.567L1021.58 198.29L1021.35 198.183ZM1021.52 197.812L1021.76 197.717L1021.54 197.193L1021.3 197.706L1021.52 197.812ZM1021.7 198.238L1021.47 198.333L1021.65 198.762L1021.91 198.378L1021.7 198.238ZM1021.88 197.981L1021.78 197.749L1021.71 197.778L1021.67 197.84L1021.88 197.981ZM1022.05 197.909L1022.24 197.75L1022.13 197.608L1021.96 197.678L1022.05 197.909ZM1022.23 198.122L1022.03 198.281L1022.21 198.501L1022.41 198.292L1022.23 198.122ZM1022.4 197.933L1022.6 197.788L1022.43 197.539L1022.22 197.763L1022.4 197.933ZM1022.58 198.178L1022.37 198.324L1022.51 198.515L1022.71 198.39L1022.58 198.178ZM1022.75 198.069L1022.88 198.281L1022.89 198.274L1022.9 198.266L1022.75 198.069ZM1022.93 197.933L1023.06 197.72L1022.91 197.629L1022.77 197.735L1022.93 197.933ZM1023.1 198.041L1022.97 198.253L1023.18 198.381L1023.31 198.177L1023.1 198.041ZM1023.27 197.773L1023.48 197.625L1023.26 197.334L1023.07 197.636L1023.27 197.773ZM1023.45 198.012L1023.25 198.16L1023.26 198.176L1023.28 198.191L1023.45 198.012ZM1023.62 198.183L1023.45 198.362L1023.7 198.611L1023.85 198.287L1023.62 198.183ZM1023.8 197.798L1024.02 197.68L1023.78 197.237L1023.57 197.695L1023.8 197.798ZM1023.98 198.123L1024.02 198.368L1024.36 198.306L1024.19 198.004L1023.98 198.123ZM1023.83 198.15L1023.78 197.904L1023.42 197.97L1023.61 198.28L1023.83 198.15ZM1023.93 198.325L1024.18 198.364L1024.2 198.273L1024.15 198.195L1023.93 198.325ZM1023.91 198.5L1023.66 198.461L1023.64 198.595L1023.74 198.685L1023.91 198.5ZM1024.1 198.675L1024.26 198.869L1024.48 198.685L1024.27 198.49L1024.1 198.675ZM1023.88 198.85L1023.73 198.656L1023.69 198.685L1023.67 198.726L1023.88 198.85ZM1023.78 199.025L1023.57 198.901L1023.5 199.027L1023.57 199.152L1023.78 199.025ZM1023.89 199.2L1024.11 199.321L1024.17 199.196L1024.1 199.073L1023.89 199.2ZM1023.79 199.375L1023.57 199.254L1023.49 199.396L1023.59 199.526L1023.79 199.375ZM1023.92 199.55L1024.15 199.663L1024.22 199.523L1024.12 199.399L1023.92 199.55ZM1023.83 199.725L1023.61 199.612L1023.54 199.745L1023.63 199.867L1023.83 199.725ZM1023.96 199.9L1024.14 200.07L1024.28 199.923L1024.16 199.758L1023.96 199.9ZM1023.79 200.075L1023.61 199.905L1023.5 200.02L1023.56 200.166L1023.79 200.075ZM1023.86 200.25L1023.63 200.341L1023.66 200.424L1023.74 200.467L1023.86 200.25ZM1024.17 200.425L1024.4 200.515L1024.48 200.314L1024.29 200.208L1024.17 200.425ZM1024.1 200.6L1023.87 200.51L1023.83 200.608L1023.87 200.703L1024.1 200.6ZM1024.18 200.775L1024.41 200.882L1024.46 200.777L1024.41 200.672L1024.18 200.775ZM1024.1 200.95L1024.2 201.178L1024.29 201.141L1024.32 201.057L1024.1 200.95ZM1023.88 201.05L1023.77 200.822L1023.74 200.837L1023.71 200.863L1023.88 201.05ZM1023.7 201.205L1023.48 201.329L1023.64 201.594L1023.87 201.392L1023.7 201.205ZM1023.52 200.901L1023.74 200.776L1023.53 200.409L1023.31 200.772L1023.52 200.901ZM1023.35 201.192L1023.12 201.286L1023.31 201.747L1023.56 201.321L1023.35 201.192ZM1023.17 200.764L1023.41 200.67L1023.19 200.147L1022.95 200.656L1023.17 200.764ZM1023 201.13L1022.84 201.327L1023.09 201.521L1023.23 201.238L1023 201.13ZM1022.82 200.992L1022.63 201.146L1022.65 201.169L1022.67 201.188L1022.82 200.992ZM1022.65 200.767L1022.85 200.614L1022.7 200.429L1022.51 200.56L1022.65 200.767ZM1022.48 200.886L1022.57 201.116L1022.59 201.107L1022.62 201.093L1022.48 200.886ZM1022.3 200.96L1022.11 201.12L1022.23 201.262L1022.4 201.19L1022.3 200.96ZM1022.12 200.75L1022.32 200.59L1022.05 200.275L1021.89 200.654L1022.12 200.75ZM1021.95 201.167L1021.79 201.359L1022.05 201.576L1022.18 201.264L1021.95 201.167ZM1021.77 201.021L1021.94 200.829L1021.85 200.755L1021.73 200.774L1021.77 201.021ZM1021.6 201.051L1021.46 201.255L1021.54 201.314L1021.64 201.297L1021.6 201.051ZM1021.42 200.927L1021.57 200.723L1021.45 200.636L1021.31 200.703L1021.42 200.927ZM1021.25 201.014L1021.14 200.79L1021.09 200.813L1021.06 200.85L1021.25 201.014ZM1021.07 201.216L1020.85 201.32L1021.01 201.674L1021.26 201.38L1021.07 201.216ZM1020.9 200.832L1021.13 200.728L1020.98 200.4L1020.72 200.655L1020.9 200.832ZM1020.73 201.007L1020.55 201.185L1020.73 201.361L1020.9 201.184L1020.73 201.007ZM1020.55 200.834L1020.73 200.656L1020.54 200.473L1020.37 200.664L1020.55 200.834ZM1020.38 201.024L1020.49 201.245L1020.53 201.225L1020.56 201.193L1020.38 201.024ZM1020.2 201.117L1020 201.271L1020.13 201.435L1020.32 201.338L1020.2 201.117ZM1020.02 200.894L1020.22 200.739L1019.98 200.437L1019.8 200.776L1020.02 200.894ZM1019.85 201.224L1019.62 201.321L1019.83 201.804L1020.07 201.341L1019.85 201.224ZM1019.67 200.812L1019.91 200.714L1019.74 200.334L1019.48 200.653L1019.67 200.812ZM1019.5 201.024L1019.59 201.259L1019.65 201.236L1019.69 201.183L1019.5 201.024ZM1019.32 201.089L1019.23 201.319L1019.32 201.358L1019.41 201.323L1019.32 201.089ZM1019.15 201.014L1018.98 201.193L1019.01 201.226L1019.05 201.244L1019.15 201.014ZM1018.97 200.844L1019.15 200.665L1018.96 200.481L1018.79 200.681L1018.97 200.844ZM1018.8 201.046L1018.59 201.178L1018.77 201.466L1018.99 201.21L1018.8 201.046ZM1018.62 200.765L1018.84 200.633L1018.74 200.471L1018.55 200.525L1018.62 200.765ZM1018.45 200.817L1018.41 201.063L1018.47 201.073L1018.52 201.056L1018.45 200.817ZM1018.27 200.787L1018.32 200.54L1018.14 200.51L1018.06 200.664L1018.27 200.787ZM1018.1 201.098L1017.89 201.234L1018.12 201.579L1018.32 201.22L1018.1 201.098ZM1017.92 200.83L1018.13 200.693L1018.01 200.496L1017.8 200.612L1017.92 200.83ZM1017.75 200.929L1017.83 201.166L1017.85 201.158L1017.87 201.147L1017.75 200.929ZM1017.57 200.989L1017.49 200.753L1017.46 200.765L1017.43 200.788L1017.57 200.989ZM1017.4 201.119L1017.2 201.264L1017.34 201.471L1017.55 201.32L1017.4 201.119ZM1017.23 200.874L1017.43 200.729L1017.39 200.677L1017.34 200.65L1017.23 200.874ZM1017.05 200.788L1017.16 200.564L1017.02 200.493L1016.89 200.595L1017.05 200.788ZM1016.88 200.933L1016.92 201.179L1016.98 201.169L1017.03 201.125L1016.88 200.933ZM1016.7 200.961L1016.66 200.714L1016.55 200.731L1016.49 200.819L1016.7 200.961ZM1016.52 201.215L1016.42 201.443L1016.61 201.529L1016.73 201.357L1016.52 201.215ZM1016.35 201.136L1016.45 200.908L1016.38 200.875L1016.3 200.891L1016.35 201.136ZM1016.17 201.172L1015.95 201.284L1016.04 201.455L1016.22 201.417L1016.17 201.172ZM1016 200.825L1016.22 200.712L1016.05 200.375L1015.81 200.663L1016 200.825ZM1015.82 201.031L1015.65 201.209L1015.84 201.4L1016.02 201.193L1015.82 201.031ZM1015.65 200.858L1015.83 200.68L1015.73 200.582L1015.59 200.615L1015.65 200.858ZM1015.47 200.9L1015.49 201.149L1015.51 201.148L1015.53 201.143L1015.47 200.9ZM1015.3 200.908L1015.28 201.157L1015.29 201.158L1015.31 201.158L1015.3 200.908ZM1015.12 200.892L1015.15 200.643L1014.98 200.627L1014.9 200.782L1015.12 200.892ZM1014.95 201.25L1014.72 201.336L1014.92 201.887L1015.17 201.36L1014.95 201.25ZM1014.77 200.771L1015.01 200.685L1014.88 200.332L1014.61 200.588L1014.77 200.771ZM1014.6 200.933L1014.76 201.126L1014.77 201.117L1014.6 200.933ZM1014.42 201.078L1014.26 201.268L1014.42 201.405L1014.58 201.271L1014.42 201.078ZM1014.25 200.929L1014.41 200.739L1014.29 200.634L1014.14 200.703L1014.25 200.929ZM1014.07 201.012L1013.9 201.186L1014.02 201.314L1014.18 201.238L1014.07 201.012ZM1013.9 200.832L1014.08 200.658L1013.82 200.395L1013.67 200.729L1013.9 200.832ZM1013.72 201.218L1013.52 201.364L1013.77 201.715L1013.95 201.321L1013.72 201.218ZM1013.55 200.974L1013.75 200.828L1013.7 200.752L1013.61 200.731L1013.55 200.974ZM1013.37 200.933L1013.43 200.69L1013.34 200.667L1013.25 200.715L1013.37 200.933ZM1013.2 201.032L1013.06 201.242L1013.19 201.323L1013.32 201.249L1013.2 201.032ZM1013.02 200.919L1013.16 200.709L1013.12 200.685L1013.08 200.675L1013.02 200.919ZM1012.85 200.88L1012.9 200.636L1012.8 200.612L1012.71 200.674L1012.85 200.88ZM1012.67 201.001L1012.53 200.795L1012.53 200.799L1012.67 201.001ZM1012.5 201.129L1012.31 201.292L1012.46 201.468L1012.65 201.331L1012.5 201.129ZM1012.32 200.924L1012.52 200.762L1012.4 200.631L1012.24 200.688L1012.32 200.924ZM1012.15 200.986L1012 201.185L1012.11 201.266L1012.23 201.222L1012.15 200.986ZM1011.97 200.852L1012.13 200.654L1011.92 200.492L1011.77 200.713L1011.97 200.852ZM1011.8 201.113L1011.67 201.328L1011.88 201.449L1012.01 201.252L1011.8 201.113ZM1011.62 201.009L1011.75 200.794L1011.57 200.684L1011.43 200.851L1011.62 201.009ZM1011.45 201.224L1011.22 201.322L1011.38 201.702L1011.64 201.382L1011.45 201.224ZM1011.27 200.815L1011.5 200.717L1011.45 200.581L1011.3 200.567L1011.27 200.815ZM1011.1 200.799L1011.12 200.55L1010.94 200.532L1010.87 200.7L1011.1 200.799ZM1010.92 201.209L1010.97 201.454L1011.1 201.429L1011.15 201.307L1010.92 201.209ZM1010.75 201.242L1010.52 201.346L1010.6 201.524L1010.8 201.487L1010.75 201.242ZM1010.57 200.86L1010.8 200.756L1010.73 200.604L1010.57 200.61L1010.57 200.86ZM1010.4 200.866L1010.39 200.616L1010.25 200.621L1010.18 200.747L1010.4 200.866ZM1010.23 201.188L1010.01 201.308L1010.23 201.708L1010.44 201.307L1010.23 201.188ZM1010.05 200.87L1010.27 200.749L1010.14 200.515L1009.92 200.659L1010.05 200.87ZM1009.88 200.982L1009.7 201.163L1009.84 201.298L1010.01 201.192L1009.88 200.982ZM1009.7 200.816L1009.87 200.634L1009.76 200.531L1009.62 200.578L1009.7 200.816ZM1009.52 200.873L1009.48 201.119L1009.54 201.131L1009.6 201.111L1009.52 200.873ZM1009.35 200.839L1009.4 200.594L1009.27 200.57L1009.18 200.657L1009.35 200.839ZM1009.17 201.004L1009.1 201.243L1009.24 201.284L1009.35 201.186L1009.17 201.004ZM1009 200.952L1008.81 201.118L1008.86 201.171L1008.93 201.191L1009 200.952ZM1008.82 200.754L1009.01 200.588L1008.87 200.432L1008.69 200.541L1008.82 200.754ZM1008.65 200.861L1008.77 201.082L1008.78 201.074L1008.65 200.861ZM1008.47 200.955L1008.36 200.734L1008.31 200.76L1008.28 200.803L1008.47 200.955ZM1008.3 201.183L1008.09 201.32L1008.28 201.615L1008.5 201.335L1008.3 201.183ZM1008.12 200.916L1008.33 200.779L1008.15 200.5L1007.93 200.754L1008.12 200.916ZM1007.95 201.122L1007.77 201.3L1007.97 201.489L1008.14 201.284L1007.95 201.122ZM1007.78 200.949L1007.95 200.771L1007.77 200.589L1007.59 200.78L1007.78 200.949ZM1007.6 201.14L1007.46 201.35L1007.64 201.465L1007.78 201.309L1007.6 201.14ZM1007.42 201.027L1007.56 200.817L1007.44 200.739L1007.31 200.804L1007.42 201.027ZM1007.25 201.115L1007.08 201.3L1007.21 201.416L1007.36 201.338L1007.25 201.115ZM1007.07 200.955L1007.24 200.771L1007.03 200.576L1006.87 200.815L1007.07 200.955ZM1006.9 201.214L1006.9 201.464L1007.03 201.466L1007.11 201.354L1006.9 201.214ZM1006.72 201.212L1006.51 201.347L1006.59 201.46L1006.72 201.462L1006.72 201.212ZM1006.55 200.94L1006.76 200.805L1006.74 200.775L1006.71 200.751L1006.55 200.94ZM1006.38 200.787L1006.54 200.599L1006.37 200.448L1006.2 200.608L1006.38 200.787ZM1006.2 200.957L1006.35 201.157L1006.36 201.148L1006.37 201.136L1006.2 200.957ZM1006.02 201.087L1005.82 201.228L1005.97 201.443L1006.17 201.287L1006.02 201.087ZM1005.85 200.832L1006.06 200.69L1006 200.605L1005.9 200.586L1005.85 200.832ZM1005.67 200.8L1005.72 200.554L1005.63 200.538L1005.56 200.579L1005.67 200.8ZM1005.5 200.893L1005.39 201.118L1005.5 201.174L1005.62 201.114L1005.5 200.893ZM1005.32 200.807L1005.44 200.583L1005.2 200.467L1005.1 200.708L1005.32 200.807ZM1005.15 201.212L1005.07 201.448L1005.29 201.524L1005.38 201.311L1005.15 201.212ZM1004.97 201.152L1005.06 200.915L1004.96 200.883L1004.87 200.924L1004.97 201.152ZM1004.8 201.232L1004.59 201.374L1004.71 201.546L1004.9 201.459L1004.8 201.232ZM1004.62 200.978L1004.83 200.836L1004.73 200.692L1004.56 200.737L1004.62 200.978ZM1004.45 201.025L1004.29 201.214L1004.39 201.3L1004.51 201.266L1004.45 201.025ZM1004.27 200.875L1004.44 200.685L1004.19 200.475L1004.05 200.765L1004.27 200.875ZM1004.1 201.232L1003.9 201.379L1004.14 201.713L1004.32 201.342L1004.1 201.232ZM1003.92 200.992L1004.13 200.845L1004 200.667L1003.8 200.773L1003.92 200.992ZM1003.75 201.088L1003.62 201.305L1003.75 201.375L1003.87 201.307L1003.75 201.088ZM1003.57 200.987L1003.7 200.771L1003.62 200.727L1003.54 200.74L1003.57 200.987ZM1003.4 201.014L1003.42 201.263L1003.43 201.262L1003.44 201.261L1003.4 201.014ZM1003.22 201.025L1003.21 200.776L1003.16 200.779L1003.12 200.797L1003.22 201.025ZM1003.05 201.103L1002.84 201.235L1002.95 201.421L1003.15 201.332L1003.05 201.103ZM1002.88 200.82L1003.09 200.689L1002.94 200.451L1002.72 200.623L1002.88 200.82ZM1002.7 200.957L1002.57 201.17L1002.72 201.26L1002.85 201.154L1002.7 200.957ZM1002.53 200.85L1002.65 200.637L1002.43 200.501L1002.31 200.731L1002.53 200.85ZM1002.35 201.172L1002.17 201.35L1002.41 201.583L1002.57 201.291L1002.35 201.172ZM1002.17 201L1002.35 200.822L1002.34 200.812L1002.33 200.803L1002.17 201ZM1002 200.864L1002.15 200.667L1001.96 200.519L1001.81 200.704L1002 200.864ZM1001.82 201.075L1001.85 201.324L1001.95 201.315L1002.02 201.235L1001.82 201.075ZM1001.65 201.089L1001.44 201.227L1001.52 201.351L1001.67 201.338L1001.65 201.089ZM1001.47 200.825L1001.68 200.687L1001.59 200.546L1001.42 200.581L1001.47 200.825ZM1001.3 200.862L1001.34 201.109L1001.35 201.107L1001.3 200.862ZM1001.12 200.888L1001.09 200.641L1000.98 200.658L1000.91 200.753L1001.12 200.888ZM1000.95 201.16L1000.72 201.265L1000.91 201.678L1001.16 201.296L1000.95 201.16ZM1000.77 200.783L1001 200.678L1000.79 200.21L1000.55 200.67L1000.77 200.783ZM1000.6 201.128L1000.44 201.32L1000.68 201.521L1000.82 201.241L1000.6 201.128ZM1000.42 200.982L1000.59 200.79L1000.57 200.775L1000.55 200.763L1000.42 200.982ZM1000.25 200.885L1000.37 200.666L1000.26 200.602L1000.14 200.661L1000.25 200.885ZM1000.07 200.972L999.964 201.196L1000.08 201.251L1000.19 201.196L1000.07 200.972ZM999.93 200.9L999.755 201.078L999.783 201.106L999.819 201.124L999.93 200.9ZM999.752 200.725L999.588 200.536L999.384 200.713L999.577 200.903L999.752 200.725ZM999.954 200.55L999.806 200.349L999.798 200.354L999.79 200.361L999.954 200.55ZM1000.19 200.375L1000.34 200.576L1000.68 200.33L1000.3 200.15L1000.19 200.375ZM999.829 200.2L999.727 199.972L999.238 200.192L999.721 200.425L999.829 200.2ZM1000.22 200.025L1000.32 200.253L1000.82 200.027L1000.32 199.798L1000.22 200.025ZM999.837 199.85L999.629 199.711L999.467 199.955L999.732 200.077L999.837 199.85ZM999.953 199.675L1000.16 199.814L1000.22 199.727L1000.2 199.624L999.953 199.675ZM999.917 199.5L999.765 199.301L999.64 199.397L999.672 199.551L999.917 199.5ZM1000.15 199.325L1000.3 199.524L1000.37 199.469L1000.39 199.38L1000.15 199.325ZM1000.19 199.15L1000.43 199.205L1000.48 198.999L1000.28 198.919L1000.19 199.15ZM999.762 198.975L999.565 198.821L999.362 199.08L999.666 199.206L999.762 198.975ZM999.899 198.8L1000.1 198.954L1000.12 198.927L1000.13 198.895L999.899 198.8ZM999.971 198.625L1000.2 198.72L1000.26 198.591L1000.17 198.478L999.971 198.625ZM999.843 198.45L999.707 198.24L999.485 198.384L999.641 198.597L999.843 198.45ZM1000.11 198.275L1000.25 198.485L1000.43 198.368L1000.34 198.172L1000.11 198.275ZM1000.03 198.1L999.796 198.179L999.8 198.191L999.806 198.203L1000.03 198.1ZM1000 198V198.25H1000.1V198V197.75H1000V198ZM1000.1 198L999.865 198.085L999.94 198.292L1000.17 198.207L1000.41 198.122L1000.34 197.915L1000.1 198ZM1000.17 198.207L1000.14 198.455L1000.32 198.479L1000.35 198.231L1000.38 197.983L1000.21 197.959L1000.17 198.207ZM1000.35 198.231L1000.52 198.415L1000.69 198.254L1000.53 198.07L1000.36 197.886L1000.18 198.047L1000.35 198.231ZM1000.53 198.07L1000.62 198.301L1000.8 198.228L1000.7 197.997L1000.6 197.766L1000.43 197.839L1000.53 198.07ZM1000.7 197.997L1000.9 198.145L1001.08 197.904L1000.88 197.757L1000.67 197.61L1000.5 197.85L1000.7 197.997ZM1000.88 197.757L1000.68 197.919L1000.86 198.126L1001.05 197.964L1001.24 197.803L1001.07 197.596L1000.88 197.757ZM1001.05 197.964L1000.85 198.109L1001.02 198.355L1001.23 198.21L1001.43 198.065L1001.25 197.819L1001.05 197.964ZM1001.23 198.21L1001.42 198.364L1001.6 198.139L1001.4 197.985L1001.2 197.832L1001.03 198.056L1001.23 198.21ZM1001.4 197.985L1001.5 198.214L1001.68 198.136L1001.58 197.908L1001.47 197.679L1001.3 197.757L1001.4 197.985ZM1001.58 197.908L1001.48 198.137L1001.65 198.213L1001.75 197.983L1001.85 197.754L1001.67 197.678L1001.58 197.908ZM1001.75 197.983L1001.9 198.186L1002.07 198.06L1001.93 197.857L1001.78 197.654L1001.6 197.78L1001.75 197.983ZM1001.93 197.857L1001.76 198.049L1001.94 198.195L1002.1 198.004L1002.26 197.812L1002.09 197.666L1001.93 197.857ZM1002.1 198.004L1002.3 198.16L1002.47 197.942L1002.28 197.785L1002.08 197.629L1001.9 197.847L1002.1 198.004ZM1002.28 197.785L1002.07 197.924L1002.24 198.187L1002.45 198.048L1002.66 197.91L1002.48 197.647L1002.28 197.785ZM1002.45 198.048L1002.53 198.286L1002.7 198.229L1002.62 197.991L1002.55 197.754L1002.37 197.81L1002.45 198.048ZM1002.62 197.991L1002.64 198.241L1002.82 198.23L1002.8 197.98L1002.78 197.731L1002.61 197.742L1002.62 197.991ZM1002.8 197.98L1002.93 198.196L1003.1 198.093L1002.98 197.877L1002.85 197.662L1002.67 197.765L1002.8 197.98ZM1002.98 197.877L1002.81 198.061L1002.98 198.223L1003.15 198.039L1003.32 197.856L1003.14 197.694L1002.98 197.877ZM1003.15 198.039L1003.34 198.204L1003.51 198.005L1003.33 197.84L1003.14 197.675L1002.96 197.875L1003.15 198.039ZM1003.33 197.84L1003.32 198.09L1003.5 198.093L1003.5 197.843L1003.5 197.593L1003.33 197.59L1003.33 197.84ZM1003.5 197.843L1003.44 198.086L1003.62 198.128L1003.68 197.885L1003.73 197.642L1003.56 197.6L1003.5 197.843ZM1003.68 197.885L1003.73 198.129L1003.9 198.091L1003.85 197.847L1003.8 197.602L1003.62 197.641L1003.68 197.885ZM1003.85 197.847L1003.62 197.946L1003.8 198.348L1004.03 198.249L1004.25 198.149L1004.08 197.747L1003.85 197.847ZM1004.03 198.249L1004.23 198.385L1004.41 198.116L1004.2 197.98L1003.99 197.843L1003.82 198.112L1004.03 198.249ZM1004.2 197.98L1004.37 198.159L1004.55 197.99L1004.38 197.811L1004.2 197.631L1004.03 197.8L1004.2 197.98ZM1004.38 197.811L1004.37 198.061L1004.55 198.061L1004.55 197.811L1004.55 197.561L1004.38 197.561L1004.38 197.811ZM1004.55 197.811L1004.51 198.058L1004.69 198.086L1004.72 197.839L1004.76 197.592L1004.59 197.564L1004.55 197.811ZM1004.72 197.839L1004.52 197.986L1004.7 198.226L1004.9 198.079L1005.1 197.932L1004.93 197.692L1004.72 197.839ZM1004.9 198.079L1004.76 198.285L1004.93 198.406L1005.08 198.2L1005.22 197.995L1005.04 197.874L1004.9 198.079ZM1005.08 198.2L1005.13 198.444L1005.31 198.402L1005.25 198.159L1005.19 197.916L1005.02 197.957L1005.08 198.2ZM1005.25 198.159L1005.47 198.273L1005.65 197.931L1005.43 197.817L1005.2 197.703L1005.03 198.045L1005.25 198.159ZM1005.43 197.817L1005.23 197.979L1005.41 198.184L1005.6 198.022L1005.79 197.86L1005.62 197.655L1005.43 197.817ZM1005.6 198.022L1005.81 198.164L1005.98 197.908L1005.78 197.767L1005.57 197.626L1005.39 197.881L1005.6 198.022ZM1005.78 197.767L1005.69 198.001L1005.86 198.067L1005.95 197.833L1006.04 197.599L1005.86 197.533L1005.78 197.767ZM1005.95 197.833L1005.72 197.937L1005.9 198.318L1006.12 198.213L1006.35 198.108L1006.18 197.728L1005.95 197.833ZM1006.12 198.213L1006.11 198.463L1006.29 198.472L1006.3 198.223L1006.31 197.973L1006.14 197.963L1006.12 198.213ZM1006.3 198.223L1006.43 198.435L1006.61 198.326L1006.47 198.114L1006.34 197.902L1006.17 198.01L1006.3 198.223ZM1006.47 198.114L1006.51 198.361L1006.69 198.336L1006.65 198.089L1006.61 197.841L1006.44 197.867L1006.47 198.114ZM1006.65 198.089L1006.79 198.298L1006.96 198.183L1006.83 197.974L1006.69 197.765L1006.51 197.88L1006.65 198.089ZM1006.83 197.974L1006.67 198.166L1006.84 198.312L1007 198.119L1007.16 197.927L1006.98 197.782L1006.83 197.974ZM1007 198.119L1007.21 198.249L1007.39 197.962L1007.18 197.832L1006.96 197.702L1006.79 197.989L1007 198.119ZM1007.18 197.832L1007.25 198.07L1007.43 198.014L1007.35 197.776L1007.27 197.538L1007.1 197.594L1007.18 197.832ZM1007.35 197.776L1007.14 197.911L1007.31 198.184L1007.53 198.049L1007.74 197.914L1007.56 197.641L1007.35 197.776ZM1007.53 198.049L1007.73 198.185L1007.91 197.914L1007.7 197.779L1007.49 197.643L1007.32 197.913L1007.53 198.049ZM1007.7 197.779L1007.51 197.945L1007.69 198.141L1007.88 197.975L1008.06 197.809L1007.89 197.612L1007.7 197.779ZM1007.88 197.975L1008.02 198.179L1008.19 198.056L1008.05 197.852L1007.91 197.647L1007.73 197.771L1007.88 197.975ZM1008.05 197.852L1007.84 197.983L1008.01 198.267L1008.23 198.136L1008.44 198.005L1008.26 197.721L1008.05 197.852ZM1008.23 198.136L1008.16 198.376L1008.33 198.427L1008.4 198.187L1008.47 197.947L1008.29 197.896L1008.23 198.136ZM1008.4 198.187L1008.4 198.437L1008.57 198.437L1008.57 198.187L1008.58 197.937L1008.4 197.937L1008.4 198.187ZM1008.57 198.187L1008.8 198.292L1008.98 197.912L1008.75 197.807L1008.52 197.703L1008.35 198.082L1008.57 198.187ZM1008.75 197.807L1008.78 198.055L1008.96 198.033L1008.93 197.785L1008.89 197.537L1008.72 197.559L1008.75 197.807ZM1008.93 197.785L1008.86 198.027L1009.04 198.073L1009.1 197.832L1009.16 197.59L1008.99 197.543L1008.93 197.785ZM1009.1 197.832L1009.15 198.077L1009.32 198.044L1009.28 197.798L1009.23 197.553L1009.05 197.586L1009.1 197.832ZM1009.28 197.798L1009.1 197.976L1009.27 198.15L1009.45 197.972L1009.63 197.795L1009.45 197.621L1009.28 197.798ZM1009.45 197.972L1009.27 198.142L1009.44 198.332L1009.62 198.162L1009.81 197.993L1009.63 197.803L1009.45 197.972ZM1009.62 198.162L1009.64 198.412L1009.82 198.401L1009.8 198.151L1009.78 197.902L1009.61 197.913L1009.62 198.162ZM1009.8 198.151L1010.01 198.29L1010.18 198.027L1009.98 197.889L1009.77 197.75L1009.59 198.012L1009.8 198.151ZM1009.98 197.889L1009.78 198.041L1009.95 198.269L1010.15 198.117L1010.35 197.965L1010.17 197.736L1009.98 197.889ZM1010.15 198.117L1010.26 198.341L1010.44 198.254L1010.32 198.03L1010.21 197.806L1010.04 197.893L1010.15 198.117ZM1010.32 198.03L1010.19 198.239L1010.36 198.354L1010.5 198.144L1010.64 197.935L1010.46 197.821L1010.32 198.03ZM1010.5 198.144L1010.59 198.378L1010.76 198.313L1010.68 198.079L1010.59 197.844L1010.41 197.91L1010.5 198.144ZM1010.68 198.079L1010.71 198.326L1010.89 198.3L1010.85 198.052L1010.81 197.805L1010.64 197.831L1010.68 198.079ZM1010.85 198.052L1011.03 198.226L1011.2 198.045L1011.03 197.871L1010.85 197.697L1010.67 197.879L1010.85 198.052ZM1011.03 197.871L1010.8 197.987L1010.98 198.32L1011.2 198.204L1011.42 198.088L1011.25 197.755L1011.03 197.871ZM1011.2 198.204L1011.42 198.322L1011.6 197.995L1011.38 197.877L1011.15 197.759L1010.98 198.086L1011.2 198.204ZM1011.38 197.877L1011.3 198.116L1011.48 198.169L1011.55 197.929L1011.62 197.69L1011.45 197.637L1011.38 197.877ZM1011.55 197.929L1011.71 198.123L1011.88 197.98L1011.73 197.786L1011.57 197.593L1011.39 197.736L1011.55 197.929ZM1011.73 197.786L1011.51 197.92L1011.69 198.195L1011.9 198.061L1012.11 197.927L1011.94 197.652L1011.73 197.786ZM1011.9 198.061L1012.1 198.212L1012.27 197.982L1012.08 197.831L1011.88 197.679L1011.7 197.91L1011.9 198.061ZM1012.08 197.831L1012.17 198.062L1012.34 197.991L1012.25 197.759L1012.16 197.528L1011.98 197.599L1012.08 197.831ZM1012.25 197.759L1012.02 197.861L1012.2 198.252L1012.43 198.15L1012.65 198.047L1012.48 197.657L1012.25 197.759ZM1012.43 198.15L1012.6 198.332L1012.77 198.169L1012.6 197.986L1012.43 197.803L1012.25 197.967L1012.43 198.15ZM1012.6 197.986L1012.54 198.228L1012.71 198.273L1012.78 198.031L1012.84 197.788L1012.66 197.744L1012.6 197.986ZM1012.78 198.031L1012.8 198.279L1012.98 198.258L1012.95 198.01L1012.92 197.761L1012.75 197.782L1012.78 198.031ZM1012.95 198.01L1012.86 198.243L1013.04 198.31L1013.12 198.077L1013.21 197.844L1013.04 197.776L1012.95 198.01ZM1013.12 198.077L1013.25 198.296L1013.42 198.199L1013.3 197.98L1013.18 197.761L1013 197.858L1013.12 198.077ZM1013.3 197.98L1013.36 198.223L1013.53 198.182L1013.48 197.939L1013.42 197.696L1013.24 197.737L1013.3 197.98ZM1013.48 197.939L1013.39 198.174L1013.56 198.238L1013.65 198.003L1013.74 197.769L1013.56 197.704L1013.48 197.939ZM1013.65 198.003L1013.47 198.175L1013.64 198.36L1013.82 198.188L1014.01 198.015L1013.83 197.831L1013.65 198.003ZM1013.82 198.188L1014.03 198.33L1014.21 198.078L1014 197.935L1013.79 197.793L1013.62 198.045L1013.82 198.188ZM1014 197.935L1014.14 198.141L1014.32 198.019L1014.17 197.814L1014.03 197.608L1013.86 197.73L1014 197.935ZM1014.17 197.814L1013.95 197.932L1014.13 198.258L1014.35 198.139L1014.57 198.021L1014.4 197.695L1014.17 197.814ZM1014.35 198.139L1014.25 198.368L1014.42 198.445L1014.52 198.217L1014.63 197.988L1014.45 197.911L1014.35 198.139ZM1014.52 198.217L1014.68 198.416L1014.85 198.283L1014.7 198.084L1014.55 197.885L1014.37 198.018L1014.52 198.217ZM1014.7 198.084L1014.75 198.328L1014.93 198.291L1014.88 198.047L1014.82 197.802L1014.65 197.839L1014.7 198.084ZM1014.88 198.047L1015 198.263L1015.18 198.161L1015.05 197.945L1014.92 197.729L1014.75 197.831L1014.88 198.047ZM1015.05 197.945L1015.15 198.176L1015.32 198.104L1015.23 197.873L1015.13 197.641L1014.95 197.714L1015.05 197.945ZM1015.23 197.873L1015.01 198.005L1015.19 198.284L1015.4 198.151L1015.61 198.018L1015.44 197.74L1015.23 197.873ZM1015.4 198.151L1015.44 198.397L1015.62 198.366L1015.57 198.12L1015.53 197.874L1015.36 197.905L1015.4 198.151ZM1015.57 198.12L1015.77 198.281L1015.94 198.075L1015.75 197.913L1015.56 197.752L1015.38 197.958L1015.57 198.12ZM1015.75 197.913L1015.89 198.122L1016.06 198.007L1015.93 197.798L1015.79 197.589L1015.61 197.704L1015.75 197.913ZM1015.93 197.798L1015.75 197.979L1015.93 198.146L1016.1 197.965L1016.27 197.784L1016.1 197.617L1015.93 197.798ZM1016.1 197.965L1016.29 198.125L1016.47 197.914L1016.27 197.754L1016.08 197.594L1015.91 197.805L1016.1 197.965ZM1016.27 197.754L1016.06 197.874L1016.23 198.194L1016.45 198.074L1016.67 197.954L1016.49 197.634L1016.27 197.754ZM1016.45 198.074L1016.58 198.287L1016.76 198.181L1016.62 197.967L1016.49 197.754L1016.32 197.86L1016.45 198.074ZM1016.62 197.967L1016.72 198.197L1016.9 198.121L1016.8 197.891L1016.7 197.662L1016.53 197.738L1016.62 197.967ZM1016.8 197.891L1016.93 198.105L1017.1 197.999L1016.98 197.785L1016.85 197.571L1016.67 197.677L1016.8 197.891ZM1016.98 197.785L1016.76 197.921L1016.94 198.192L1017.15 198.057L1017.36 197.921L1017.19 197.65L1016.98 197.785ZM1017.15 198.057L1017.36 198.188L1017.54 197.903L1017.33 197.772L1017.11 197.641L1016.94 197.926L1017.15 198.057ZM1017.33 197.772L1017.09 197.86L1017.27 198.328L1017.5 198.24L1017.73 198.152L1017.56 197.685L1017.33 197.772ZM1017.5 198.24L1017.72 198.352L1017.9 198.005L1017.68 197.892L1017.45 197.78L1017.28 198.128L1017.5 198.24ZM1017.68 197.892L1017.52 198.087L1017.69 198.228L1017.85 198.032L1018.01 197.837L1017.83 197.697L1017.68 197.892ZM1017.85 198.032L1017.96 198.256L1018.14 198.17L1018.02 197.946L1017.91 197.722L1017.74 197.808L1017.85 198.032ZM1018.02 197.946L1017.81 198.08L1017.99 198.354L1018.2 198.22L1018.41 198.085L1018.24 197.811L1018.02 197.946ZM1018.2 198.22L1018.43 198.322L1018.6 197.931L1018.38 197.829L1018.15 197.727L1017.97 198.117L1018.2 198.22ZM1018.38 197.829L1018.35 198.078L1018.53 198.094L1018.55 197.845L1018.57 197.596L1018.4 197.58L1018.38 197.829ZM1018.55 197.845L1018.64 198.08L1018.81 198.014L1018.73 197.78L1018.64 197.546L1018.46 197.611L1018.55 197.845ZM1018.73 197.78L1018.75 198.028L1018.93 198.008L1018.9 197.759L1018.87 197.511L1018.7 197.532L1018.73 197.78ZM1018.9 197.759L1018.77 197.974L1018.95 198.079L1019.08 197.865L1019.2 197.65L1019.03 197.545L1018.9 197.759ZM1019.08 197.865L1019.12 198.11L1019.3 198.077L1019.25 197.832L1019.2 197.586L1019.03 197.619L1019.08 197.865ZM1019.25 197.832L1019.16 198.064L1019.33 198.133L1019.43 197.9L1019.52 197.668L1019.34 197.599L1019.25 197.832ZM1019.43 197.9L1019.2 198.018L1019.38 198.347L1019.6 198.23L1019.82 198.112L1019.65 197.783L1019.43 197.9ZM1019.6 198.23L1019.77 198.416L1019.94 198.26L1019.77 198.073L1019.61 197.887L1019.43 198.043L1019.6 198.23ZM1019.77 198.073L1019.94 198.259L1020.12 198.102L1019.95 197.916L1019.78 197.73L1019.61 197.887L1019.77 198.073ZM1019.95 197.916L1019.74 198.055L1019.92 198.316L1020.12 198.176L1020.33 198.037L1020.16 197.777L1019.95 197.916ZM1020.12 198.176L1020.06 198.418L1020.23 198.465L1020.3 198.224L1020.37 197.983L1020.19 197.935L1020.12 198.176ZM1020.3 198.224L1020.5 198.369L1020.68 198.123L1020.48 197.978L1020.27 197.833L1020.1 198.079L1020.3 198.224ZM1020.48 197.978L1020.39 198.213L1020.56 198.277L1020.65 198.042L1020.74 197.808L1020.56 197.743L1020.48 197.978ZM1020.65 198.042L1020.6 198.287L1020.77 198.325L1020.83 198.081L1020.88 197.836L1020.7 197.798L1020.65 198.042ZM1020.83 198.081L1021.04 198.206L1021.22 197.906L1021 197.78L1020.78 197.654L1020.61 197.955L1020.83 198.081ZM1021 197.78L1020.79 197.915L1020.96 198.187L1021.18 198.051L1021.39 197.916L1021.21 197.644L1021 197.78ZM1021.18 198.051L1021.02 198.251L1021.2 198.383L1021.35 198.183L1021.5 197.983L1021.33 197.852L1021.18 198.051ZM1021.35 198.183L1021.58 198.29L1021.75 197.919L1021.52 197.812L1021.3 197.706L1021.12 198.076L1021.35 198.183ZM1021.52 197.812L1021.29 197.908L1021.47 198.333L1021.7 198.238L1021.93 198.143L1021.76 197.717L1021.52 197.812ZM1021.7 198.238L1021.91 198.378L1022.08 198.121L1021.88 197.981L1021.67 197.84L1021.49 198.097L1021.7 198.238ZM1021.88 197.981L1021.97 198.212L1022.14 198.14L1022.05 197.909L1021.96 197.678L1021.78 197.749L1021.88 197.981ZM1022.05 197.909L1021.86 198.068L1022.03 198.281L1022.23 198.122L1022.42 197.963L1022.24 197.75L1022.05 197.909ZM1022.23 198.122L1022.41 198.292L1022.58 198.104L1022.4 197.933L1022.22 197.763L1022.04 197.952L1022.23 198.122ZM1022.4 197.933L1022.2 198.079L1022.37 198.324L1022.58 198.178L1022.78 198.033L1022.6 197.788L1022.4 197.933ZM1022.58 198.178L1022.71 198.39L1022.88 198.281L1022.75 198.069L1022.62 197.857L1022.44 197.966L1022.58 198.178ZM1022.75 198.069L1022.9 198.266L1023.08 198.13L1022.93 197.933L1022.77 197.735L1022.6 197.872L1022.75 198.069ZM1022.93 197.933L1022.79 198.145L1022.97 198.253L1023.1 198.041L1023.23 197.828L1023.06 197.72L1022.93 197.933ZM1023.1 198.041L1023.31 198.177L1023.48 197.91L1023.27 197.773L1023.07 197.636L1022.89 197.904L1023.1 198.041ZM1023.27 197.773L1023.07 197.921L1023.25 198.16L1023.45 198.012L1023.65 197.864L1023.48 197.625L1023.27 197.773ZM1023.45 198.012L1023.28 198.191L1023.45 198.362L1023.62 198.183L1023.8 198.005L1023.62 197.833L1023.45 198.012ZM1023.62 198.183L1023.85 198.287L1024.03 197.902L1023.8 197.798L1023.57 197.695L1023.4 198.08L1023.62 198.183ZM1023.8 197.798L1023.58 197.917L1023.76 198.241L1023.98 198.123L1024.19 198.004L1024.02 197.68L1023.8 197.798ZM1023.98 198.123L1023.93 197.877L1023.78 197.904L1023.83 198.15L1023.87 198.396L1024.02 198.368L1023.98 198.123ZM1023.83 198.15L1023.61 198.28L1023.72 198.455L1023.93 198.325L1024.15 198.195L1024.04 198.02L1023.83 198.15ZM1023.93 198.325L1023.69 198.286L1023.66 198.461L1023.91 198.5L1024.15 198.539L1024.18 198.364L1023.93 198.325ZM1023.91 198.5L1023.74 198.685L1023.93 198.86L1024.1 198.675L1024.27 198.49L1024.07 198.315L1023.91 198.5ZM1024.1 198.675L1023.94 198.481L1023.73 198.656L1023.88 198.85L1024.04 199.044L1024.26 198.869L1024.1 198.675ZM1023.88 198.85L1023.67 198.726L1023.57 198.901L1023.78 199.025L1024 199.149L1024.1 198.974L1023.88 198.85ZM1023.78 199.025L1023.57 199.152L1023.67 199.327L1023.89 199.2L1024.1 199.073L1024 198.898L1023.78 199.025ZM1023.89 199.2L1023.67 199.079L1023.57 199.254L1023.79 199.375L1024.01 199.496L1024.11 199.321L1023.89 199.2ZM1023.79 199.375L1023.59 199.526L1023.72 199.701L1023.92 199.55L1024.12 199.399L1023.99 199.224L1023.79 199.375ZM1023.92 199.55L1023.7 199.437L1023.61 199.612L1023.83 199.725L1024.06 199.838L1024.15 199.663L1023.92 199.55ZM1023.83 199.725L1023.63 199.867L1023.75 200.042L1023.96 199.9L1024.16 199.758L1024.04 199.583L1023.83 199.725ZM1023.96 199.9L1023.77 199.73L1023.61 199.905L1023.79 200.075L1023.98 200.245L1024.14 200.07L1023.96 199.9ZM1023.79 200.075L1023.56 200.166L1023.63 200.341L1023.86 200.25L1024.1 200.159L1024.03 199.984L1023.79 200.075ZM1023.86 200.25L1023.74 200.467L1024.05 200.642L1024.17 200.425L1024.29 200.208L1023.99 200.033L1023.86 200.25ZM1024.17 200.425L1023.94 200.335L1023.87 200.51L1024.1 200.6L1024.34 200.69L1024.4 200.515L1024.17 200.425ZM1024.1 200.6L1023.87 200.703L1023.95 200.878L1024.18 200.775L1024.41 200.672L1024.33 200.497L1024.1 200.6ZM1024.18 200.775L1023.96 200.668L1023.87 200.843L1024.1 200.95L1024.32 201.057L1024.41 200.882L1024.18 200.775ZM1024.1 200.95L1024 200.722L1023.77 200.822L1023.88 201.05L1023.98 201.278L1024.2 201.178L1024.1 200.95ZM1023.88 201.05L1023.71 200.863L1023.53 201.017L1023.7 201.205L1023.87 201.392L1024.04 201.237L1023.88 201.05ZM1023.7 201.205L1023.92 201.08L1023.74 200.776L1023.52 200.901L1023.31 201.026L1023.48 201.329L1023.7 201.205ZM1023.52 200.901L1023.31 200.772L1023.14 201.063L1023.35 201.192L1023.56 201.321L1023.74 201.03L1023.52 200.901ZM1023.35 201.192L1023.58 201.097L1023.41 200.67L1023.17 200.764L1022.94 200.859L1023.12 201.286L1023.35 201.192ZM1023.17 200.764L1022.95 200.656L1022.77 201.023L1023 201.13L1023.23 201.238L1023.4 200.872L1023.17 200.764ZM1023 201.13L1023.16 200.934L1022.98 200.796L1022.82 200.992L1022.67 201.188L1022.84 201.327L1023 201.13ZM1022.82 200.992L1023.02 200.838L1022.85 200.614L1022.65 200.767L1022.45 200.921L1022.63 201.146L1022.82 200.992ZM1022.65 200.767L1022.51 200.56L1022.33 200.679L1022.48 200.886L1022.62 201.093L1022.79 200.974L1022.65 200.767ZM1022.48 200.886L1022.38 200.656L1022.2 200.73L1022.3 200.96L1022.4 201.19L1022.57 201.116L1022.48 200.886ZM1022.3 200.96L1022.49 200.8L1022.32 200.59L1022.12 200.75L1021.93 200.911L1022.11 201.12L1022.3 200.96ZM1022.12 200.75L1021.89 200.654L1021.72 201.07L1021.95 201.167L1022.18 201.264L1022.36 200.847L1022.12 200.75ZM1021.95 201.167L1022.11 200.975L1021.94 200.829L1021.77 201.021L1021.61 201.213L1021.79 201.359L1021.95 201.167ZM1021.77 201.021L1021.73 200.774L1021.56 200.804L1021.6 201.051L1021.64 201.297L1021.82 201.267L1021.77 201.021ZM1021.6 201.051L1021.74 200.847L1021.57 200.723L1021.42 200.927L1021.28 201.131L1021.46 201.255L1021.6 201.051ZM1021.42 200.927L1021.31 200.703L1021.14 200.79L1021.25 201.014L1021.36 201.238L1021.54 201.15L1021.42 200.927ZM1021.25 201.014L1021.06 200.85L1020.89 201.052L1021.07 201.216L1021.26 201.38L1021.44 201.178L1021.25 201.014ZM1021.07 201.216L1021.3 201.112L1021.13 200.728L1020.9 200.832L1020.67 200.936L1020.85 201.32L1021.07 201.216ZM1020.9 200.832L1020.72 200.655L1020.55 200.831L1020.73 201.007L1020.9 201.184L1021.08 201.009L1020.9 200.832ZM1020.73 201.007L1020.9 200.83L1020.73 200.656L1020.55 200.834L1020.37 201.011L1020.55 201.185L1020.73 201.007ZM1020.55 200.834L1020.37 200.664L1020.19 200.855L1020.38 201.024L1020.56 201.193L1020.73 201.003L1020.55 200.834ZM1020.38 201.024L1020.26 200.803L1020.08 200.896L1020.2 201.117L1020.32 201.338L1020.49 201.245L1020.38 201.024ZM1020.2 201.117L1020.4 200.962L1020.22 200.739L1020.02 200.894L1019.83 201.048L1020 201.271L1020.2 201.117ZM1020.02 200.894L1019.8 200.776L1019.63 201.106L1019.85 201.224L1020.07 201.341L1020.25 201.011L1020.02 200.894ZM1019.85 201.224L1020.08 201.126L1019.91 200.714L1019.67 200.812L1019.44 200.909L1019.62 201.321L1019.85 201.224ZM1019.67 200.812L1019.48 200.653L1019.31 200.866L1019.5 201.024L1019.69 201.183L1019.87 200.97L1019.67 200.812ZM1019.5 201.024L1019.41 200.79L1019.24 200.854L1019.32 201.089L1019.41 201.323L1019.59 201.259L1019.5 201.024ZM1019.32 201.089L1019.42 200.859L1019.25 200.784L1019.15 201.014L1019.05 201.244L1019.23 201.319L1019.32 201.089ZM1019.15 201.014L1019.32 200.834L1019.15 200.665L1018.97 200.844L1018.8 201.024L1018.98 201.193L1019.15 201.014ZM1018.97 200.844L1018.79 200.681L1018.61 200.883L1018.8 201.046L1018.99 201.21L1019.16 201.008L1018.97 200.844ZM1018.8 201.046L1019.01 200.914L1018.84 200.633L1018.62 200.765L1018.41 200.897L1018.59 201.178L1018.8 201.046ZM1018.62 200.765L1018.55 200.525L1018.38 200.577L1018.45 200.817L1018.52 201.056L1018.7 201.004L1018.62 200.765ZM1018.45 200.817L1018.49 200.57L1018.32 200.54L1018.27 200.787L1018.23 201.033L1018.41 201.063L1018.45 200.817ZM1018.27 200.787L1018.06 200.664L1017.88 200.975L1018.1 201.098L1018.32 201.22L1018.49 200.909L1018.27 200.787ZM1018.1 201.098L1018.31 200.961L1018.13 200.693L1017.92 200.83L1017.72 200.966L1017.89 201.234L1018.1 201.098ZM1017.92 200.83L1017.8 200.612L1017.63 200.712L1017.75 200.929L1017.87 201.147L1018.05 201.047L1017.92 200.83ZM1017.75 200.929L1017.67 200.693L1017.49 200.753L1017.57 200.989L1017.66 201.226L1017.83 201.166L1017.75 200.929ZM1017.57 200.989L1017.43 200.788L1017.25 200.918L1017.4 201.119L1017.55 201.32L1017.72 201.19L1017.57 200.989ZM1017.4 201.119L1017.6 200.973L1017.43 200.729L1017.23 200.874L1017.02 201.02L1017.2 201.264L1017.4 201.119ZM1017.23 200.874L1017.34 200.65L1017.16 200.564L1017.05 200.788L1016.94 201.013L1017.11 201.099L1017.23 200.874ZM1017.05 200.788L1016.89 200.595L1016.72 200.74L1016.88 200.933L1017.03 201.125L1017.21 200.981L1017.05 200.788ZM1016.88 200.933L1016.83 200.686L1016.66 200.714L1016.7 200.961L1016.74 201.208L1016.92 201.179L1016.88 200.933ZM1016.7 200.961L1016.49 200.819L1016.32 201.073L1016.52 201.215L1016.73 201.357L1016.91 201.103L1016.7 200.961ZM1016.52 201.215L1016.63 200.987L1016.45 200.908L1016.35 201.136L1016.25 201.364L1016.42 201.443L1016.52 201.215ZM1016.35 201.136L1016.3 200.891L1016.13 200.927L1016.17 201.172L1016.22 201.417L1016.4 201.381L1016.35 201.136ZM1016.17 201.172L1016.4 201.059L1016.22 200.712L1016 200.825L1015.78 200.937L1015.95 201.284L1016.17 201.172ZM1016 200.825L1015.81 200.663L1015.63 200.87L1015.82 201.031L1016.02 201.193L1016.19 200.986L1016 200.825ZM1015.82 201.031L1016 200.854L1015.83 200.68L1015.65 200.858L1015.47 201.035L1015.65 201.209L1015.82 201.031ZM1015.65 200.858L1015.59 200.615L1015.42 200.657L1015.47 200.9L1015.53 201.143L1015.71 201.101L1015.65 200.858ZM1015.47 200.9L1015.46 200.65L1015.29 200.658L1015.3 200.908L1015.31 201.158L1015.49 201.149L1015.47 200.9ZM1015.3 200.908L1015.32 200.659L1015.15 200.643L1015.12 200.892L1015.1 201.141L1015.28 201.157L1015.3 200.908ZM1015.12 200.892L1014.9 200.782L1014.73 201.14L1014.95 201.25L1015.17 201.36L1015.35 201.002L1015.12 200.892ZM1014.95 201.25L1015.18 201.164L1015.01 200.685L1014.77 200.771L1014.54 200.857L1014.72 201.336L1014.95 201.25ZM1014.77 200.771L1014.61 200.588L1014.43 200.75L1014.6 200.933L1014.77 201.117L1014.94 200.955L1014.77 200.771ZM1014.6 200.933L1014.44 200.741L1014.27 200.885L1014.42 201.078L1014.58 201.271L1014.76 201.126L1014.6 200.933ZM1014.42 201.078L1014.59 200.888L1014.41 200.739L1014.25 200.929L1014.09 201.119L1014.26 201.268L1014.42 201.078ZM1014.25 200.929L1014.14 200.703L1013.97 200.786L1014.07 201.012L1014.18 201.238L1014.36 201.155L1014.25 200.929ZM1014.07 201.012L1014.25 200.837L1014.08 200.658L1013.9 200.832L1013.72 201.006L1013.9 201.186L1014.07 201.012ZM1013.9 200.832L1013.67 200.729L1013.5 201.115L1013.72 201.218L1013.95 201.321L1014.13 200.935L1013.9 200.832ZM1013.72 201.218L1013.93 201.072L1013.75 200.828L1013.55 200.974L1013.35 201.12L1013.52 201.364L1013.72 201.218ZM1013.55 200.974L1013.61 200.731L1013.43 200.69L1013.37 200.933L1013.32 201.176L1013.49 201.218L1013.55 200.974ZM1013.37 200.933L1013.25 200.715L1013.08 200.814L1013.2 201.032L1013.32 201.249L1013.5 201.151L1013.37 200.933ZM1013.2 201.032L1013.34 200.821L1013.16 200.709L1013.02 200.919L1012.89 201.129L1013.06 201.242L1013.2 201.032ZM1013.02 200.919L1013.08 200.675L1012.9 200.636L1012.85 200.88L1012.8 201.124L1012.97 201.163L1013.02 200.919ZM1012.85 200.88L1012.71 200.674L1012.53 200.795L1012.67 201.001L1012.82 201.207L1012.99 201.086L1012.85 200.88ZM1012.67 201.001L1012.53 200.799L1012.35 200.928L1012.5 201.129L1012.65 201.331L1012.82 201.202L1012.67 201.001ZM1012.5 201.129L1012.69 200.967L1012.52 200.762L1012.32 200.924L1012.13 201.087L1012.31 201.292L1012.5 201.129ZM1012.32 200.924L1012.24 200.688L1012.07 200.75L1012.15 200.986L1012.23 201.222L1012.41 201.16L1012.32 200.924ZM1012.15 200.986L1012.3 200.787L1012.13 200.654L1011.97 200.852L1011.82 201.051L1012 201.185L1012.15 200.986ZM1011.97 200.852L1011.77 200.713L1011.59 200.973L1011.8 201.113L1012.01 201.252L1012.18 200.992L1011.97 200.852ZM1011.8 201.113L1011.93 200.898L1011.75 200.794L1011.62 201.009L1011.5 201.224L1011.67 201.328L1011.8 201.113ZM1011.62 201.009L1011.43 200.851L1011.26 201.066L1011.45 201.224L1011.64 201.382L1011.82 201.167L1011.62 201.009ZM1011.45 201.224L1011.68 201.125L1011.5 200.717L1011.27 200.815L1011.05 200.914L1011.22 201.322L1011.45 201.224ZM1011.27 200.815L1011.3 200.567L1011.12 200.55L1011.1 200.799L1011.08 201.047L1011.25 201.064L1011.27 200.815ZM1011.1 200.799L1010.87 200.7L1010.7 201.11L1010.92 201.209L1011.15 201.307L1011.33 200.897L1011.1 200.799ZM1010.92 201.209L1010.88 200.963L1010.7 200.996L1010.75 201.242L1010.8 201.487L1010.97 201.454L1010.92 201.209ZM1010.75 201.242L1010.98 201.137L1010.8 200.756L1010.57 200.86L1010.35 200.964L1010.52 201.346L1010.75 201.242ZM1010.57 200.86L1010.57 200.61L1010.39 200.616L1010.4 200.866L1010.41 201.116L1010.58 201.11L1010.57 200.86ZM1010.4 200.866L1010.18 200.747L1010.01 201.068L1010.23 201.188L1010.44 201.307L1010.62 200.985L1010.4 200.866ZM1010.23 201.188L1010.44 201.067L1010.27 200.749L1010.05 200.87L1009.83 200.991L1010.01 201.308L1010.23 201.188ZM1010.05 200.87L1009.92 200.659L1009.74 200.771L1009.88 200.982L1010.01 201.192L1010.18 201.08L1010.05 200.87ZM1009.88 200.982L1010.05 200.801L1009.87 200.634L1009.7 200.816L1009.53 200.997L1009.7 201.163L1009.88 200.982ZM1009.7 200.816L1009.62 200.578L1009.45 200.636L1009.52 200.873L1009.6 201.111L1009.78 201.053L1009.7 200.816ZM1009.52 200.873L1009.57 200.628L1009.4 200.594L1009.35 200.839L1009.3 201.085L1009.48 201.119L1009.52 200.873ZM1009.35 200.839L1009.18 200.657L1009 200.821L1009.17 201.004L1009.35 201.186L1009.52 201.022L1009.35 200.839ZM1009.17 201.004L1009.25 200.764L1009.07 200.712L1009 200.952L1008.93 201.191L1009.1 201.243L1009.17 201.004ZM1009 200.952L1009.19 200.786L1009.01 200.588L1008.82 200.754L1008.64 200.92L1008.81 201.118L1009 200.952ZM1008.82 200.754L1008.69 200.541L1008.52 200.648L1008.65 200.861L1008.78 201.074L1008.96 200.968L1008.82 200.754ZM1008.65 200.861L1008.53 200.641L1008.36 200.734L1008.47 200.955L1008.59 201.175L1008.77 201.081L1008.65 200.861ZM1008.47 200.955L1008.28 200.803L1008.1 201.032L1008.3 201.183L1008.5 201.335L1008.67 201.107L1008.47 200.955ZM1008.3 201.183L1008.51 201.046L1008.33 200.779L1008.12 200.916L1007.92 201.053L1008.09 201.32L1008.3 201.183ZM1008.12 200.916L1007.93 200.754L1007.76 200.96L1007.95 201.122L1008.14 201.284L1008.32 201.079L1008.12 200.916ZM1007.95 201.122L1008.13 200.944L1007.95 200.771L1007.78 200.949L1007.6 201.127L1007.77 201.3L1007.95 201.122ZM1007.78 200.949L1007.59 200.78L1007.42 200.971L1007.6 201.14L1007.78 201.309L1007.96 201.118L1007.78 200.949ZM1007.6 201.14L1007.74 200.93L1007.56 200.817L1007.42 201.027L1007.29 201.237L1007.46 201.35L1007.6 201.14ZM1007.42 201.027L1007.31 200.804L1007.14 200.892L1007.25 201.115L1007.36 201.338L1007.54 201.25L1007.42 201.027ZM1007.25 201.115L1007.42 200.93L1007.24 200.771L1007.07 200.955L1006.91 201.14L1007.08 201.3L1007.25 201.115ZM1007.07 200.955L1006.87 200.815L1006.69 201.074L1006.9 201.214L1007.11 201.354L1007.28 201.096L1007.07 200.955ZM1006.9 201.214L1006.9 200.964L1006.73 200.962L1006.72 201.212L1006.72 201.462L1006.9 201.464L1006.9 201.214ZM1006.72 201.212L1006.94 201.076L1006.76 200.805L1006.55 200.94L1006.34 201.075L1006.51 201.347L1006.72 201.212ZM1006.55 200.94L1006.71 200.751L1006.54 200.599L1006.38 200.787L1006.21 200.976L1006.39 201.128L1006.55 200.94ZM1006.38 200.787L1006.2 200.608L1006.03 200.777L1006.2 200.957L1006.37 201.136L1006.55 200.967L1006.38 200.787ZM1006.2 200.957L1006.05 200.756L1005.88 200.886L1006.02 201.087L1006.17 201.287L1006.35 201.157L1006.2 200.957ZM1006.02 201.087L1006.23 200.945L1006.06 200.69L1005.85 200.832L1005.64 200.973L1005.82 201.228L1006.02 201.087ZM1005.85 200.832L1005.9 200.586L1005.72 200.554L1005.67 200.8L1005.63 201.045L1005.8 201.078L1005.85 200.832ZM1005.67 200.8L1005.56 200.579L1005.38 200.673L1005.5 200.893L1005.62 201.114L1005.79 201.02L1005.67 200.8ZM1005.5 200.893L1005.61 200.669L1005.44 200.583L1005.32 200.807L1005.21 201.031L1005.39 201.118L1005.5 200.893ZM1005.32 200.807L1005.1 200.708L1004.92 201.113L1005.15 201.212L1005.38 201.311L1005.55 200.906L1005.32 200.807ZM1005.15 201.212L1005.23 200.976L1005.06 200.915L1004.97 201.152L1004.89 201.388L1005.07 201.448L1005.15 201.212ZM1004.97 201.152L1004.87 200.924L1004.7 201.004L1004.8 201.232L1004.9 201.459L1005.08 201.379L1004.97 201.152ZM1004.8 201.232L1005.01 201.09L1004.83 200.836L1004.62 200.978L1004.42 201.12L1004.59 201.374L1004.8 201.232ZM1004.62 200.978L1004.56 200.737L1004.39 200.783L1004.45 201.025L1004.51 201.266L1004.69 201.22L1004.62 200.978ZM1004.45 201.025L1004.61 200.835L1004.44 200.685L1004.27 200.875L1004.11 201.065L1004.29 201.214L1004.45 201.025ZM1004.27 200.875L1004.05 200.765L1003.88 201.122L1004.1 201.232L1004.32 201.342L1004.5 200.985L1004.27 200.875ZM1004.1 201.232L1004.3 201.084L1004.13 200.845L1003.92 200.992L1003.72 201.139L1003.9 201.379L1004.1 201.232ZM1003.92 200.992L1003.8 200.773L1003.63 200.869L1003.75 201.088L1003.87 201.307L1004.05 201.211L1003.92 200.992ZM1003.75 201.088L1003.88 200.872L1003.7 200.771L1003.57 200.987L1003.45 201.203L1003.62 201.305L1003.75 201.088ZM1003.57 200.987L1003.54 200.74L1003.36 200.766L1003.4 201.014L1003.44 201.261L1003.61 201.234L1003.57 200.987ZM1003.4 201.014L1003.38 200.764L1003.21 200.776L1003.22 201.025L1003.24 201.275L1003.42 201.263L1003.4 201.014ZM1003.22 201.025L1003.12 200.797L1002.95 200.875L1003.05 201.103L1003.15 201.332L1003.33 201.254L1003.22 201.025ZM1003.05 201.103L1003.26 200.972L1003.09 200.689L1002.88 200.82L1002.66 200.951L1002.84 201.235L1003.05 201.103ZM1002.88 200.82L1002.72 200.623L1002.55 200.759L1002.7 200.957L1002.85 201.154L1003.03 201.017L1002.88 200.82ZM1002.7 200.957L1002.83 200.743L1002.65 200.637L1002.53 200.85L1002.4 201.064L1002.57 201.17L1002.7 200.957ZM1002.53 200.85L1002.31 200.731L1002.13 201.053L1002.35 201.172L1002.57 201.291L1002.74 200.97L1002.53 200.85ZM1002.35 201.172L1002.53 200.994L1002.35 200.822L1002.17 201L1002 201.178L1002.17 201.35L1002.35 201.172ZM1002.17 201L1002.33 200.803L1002.15 200.667L1002 200.864L1001.85 201.062L1002.02 201.198L1002.17 201ZM1002 200.864L1001.81 200.704L1001.63 200.915L1001.82 201.075L1002.02 201.235L1002.19 201.024L1002 200.864ZM1001.82 201.075L1001.8 200.826L1001.63 200.84L1001.65 201.089L1001.67 201.338L1001.85 201.324L1001.82 201.075ZM1001.65 201.089L1001.86 200.951L1001.68 200.687L1001.47 200.825L1001.27 200.963L1001.44 201.227L1001.65 201.089ZM1001.47 200.825L1001.42 200.581L1001.25 200.617L1001.3 200.862L1001.35 201.107L1001.53 201.07L1001.47 200.825ZM1001.3 200.862L1001.26 200.615L1001.09 200.641L1001.12 200.888L1001.16 201.135L1001.34 201.109L1001.3 200.862ZM1001.12 200.888L1000.91 200.753L1000.74 201.025L1000.95 201.16L1001.16 201.296L1001.34 201.024L1001.12 200.888ZM1000.95 201.16L1001.18 201.055L1001 200.678L1000.77 200.783L1000.55 200.888L1000.72 201.265L1000.95 201.16ZM1000.77 200.783L1000.55 200.67L1000.38 201.015L1000.6 201.128L1000.82 201.241L1001 200.896L1000.77 200.783ZM1000.6 201.128L1000.76 200.936L1000.59 200.79L1000.42 200.982L1000.26 201.174L1000.44 201.32L1000.6 201.128ZM1000.42 200.982L1000.55 200.763L1000.37 200.666L1000.25 200.885L1000.13 201.103L1000.3 201.2L1000.42 200.982ZM1000.25 200.885L1000.14 200.661L999.963 200.748L1000.07 200.972L1000.19 201.196L1000.36 201.108L1000.25 200.885ZM1000.07 200.972L1000.19 200.748L1000.04 200.676L999.93 200.9L999.819 201.124L999.964 201.196L1000.07 200.972ZM999.93 200.9L1000.11 200.722L999.928 200.547L999.752 200.725L999.577 200.903L999.755 201.078L999.93 200.9ZM999.752 200.725L999.916 200.914L1000.12 200.739L999.954 200.55L999.79 200.361L999.588 200.536L999.752 200.725ZM999.954 200.55L1000.1 200.751L1000.34 200.576L1000.19 200.375L1000.04 200.174L999.806 200.349L999.954 200.55ZM1000.19 200.375L1000.3 200.15L999.938 199.975L999.829 200.2L999.721 200.425L1000.08 200.6L1000.19 200.375ZM999.829 200.2L999.932 200.428L1000.32 200.253L1000.22 200.025L1000.11 199.797L999.727 199.972L999.829 200.2ZM1000.22 200.025L1000.32 199.798L999.941 199.623L999.837 199.85L999.732 200.077L1000.11 200.252L1000.22 200.025ZM999.837 199.85L1000.05 199.989L1000.16 199.814L999.953 199.675L999.745 199.536L999.629 199.711L999.837 199.85ZM999.953 199.675L1000.2 199.624L1000.16 199.449L999.917 199.5L999.672 199.551L999.709 199.726L999.953 199.675ZM999.917 199.5L1000.07 199.699L1000.3 199.524L1000.15 199.325L999.994 199.126L999.765 199.301L999.917 199.5ZM1000.15 199.325L1000.39 199.38L1000.43 199.205L1000.19 199.15L999.942 199.095L999.902 199.27L1000.15 199.325ZM1000.19 199.15L1000.28 198.919L999.857 198.744L999.762 198.975L999.666 199.206L1000.09 199.381L1000.19 199.15ZM999.762 198.975L999.959 199.129L1000.1 198.954L999.899 198.8L999.702 198.646L999.565 198.821L999.762 198.975ZM999.899 198.8L1000.13 198.895L1000.2 198.72L999.971 198.625L999.74 198.53L999.667 198.705L999.899 198.8ZM999.971 198.625L1000.17 198.478L1000.04 198.303L999.843 198.45L999.641 198.597L999.769 198.772L999.971 198.625ZM999.843 198.45L999.979 198.66L1000.25 198.485L1000.11 198.275L999.976 198.065L999.707 198.24L999.843 198.45ZM1000.11 198.275L1000.34 198.172L1000.26 197.997L1000.03 198.1L999.806 198.203L999.884 198.378L1000.11 198.275ZM1000.03 198.1L1000.27 198.021L1000.24 197.921L1000 198L999.763 198.079L999.796 198.179L1000.03 198.1Z\"\n        fill=\"black\"\n        />\n    </g>\n    <rect\n        id=\"Rectangle 78_3\"\n        x=\"998.5\"\n        y=\"200.5\"\n        width=\"7\"\n        height=\"7\"\n        fill=\"#4A3D20\"\n        stroke=\"black\"\n    />\n    <rect\n        id=\"Rectangle 76_3\"\n        x=\"1016.5\"\n        y=\"200.5\"\n        width=\"9\"\n        height=\"7\"\n        fill=\"#A99463\"\n        stroke=\"black\"\n    />\n    <rect\n        id=\"Rectangle 77_3\"\n        x=\"1005.5\"\n        y=\"200.5\"\n        width=\"13\"\n        height=\"7\"\n        fill=\"#6F5E37\"\n        stroke=\"black\"\n    />\n    <rect\n        id=\"Rectangle 80_3\"\n        x=\"997.5\"\n        y=\"195.5\"\n        width=\"29\"\n        height=\"3\"\n        rx=\"0.5\"\n        fill=\"#5E503A\"\n        stroke=\"black\"\n    />\n    <g id=\"Union_2\">\n        <mask id=\"path-90-inside-2_6_626\" fill=\"white\">\n        <path\n            d=\"M1020.33 158C1021.3 158 1022.13 158.693 1022.3 159.646L1026.3 181.854C1026.76 184.416 1026.74 187.04 1026.25 189.595L1025 196H999L998.416 193H992C991.448 193 991 192.552 991 192V178C991 177.448 991.448 177 992 177H998.574L1001.7 159.646C1001.87 158.693 1002.7 158 1003.67 158H1020.33Z\"\n        />\n        </mask>\n        <path\n        d=\"M1020.33 158C1021.3 158 1022.13 158.693 1022.3 159.646L1026.3 181.854C1026.76 184.416 1026.74 187.04 1026.25 189.595L1025 196H999L998.416 193H992C991.448 193 991 192.552 991 192V178C991 177.448 991.448 177 992 177H998.574L1001.7 159.646C1001.87 158.693 1002.7 158 1003.67 158H1020.33Z\"\n        fill=\"#8B7655\"\n        />\n        <path\n        d=\"M1022.3 159.646L1023.28 159.468L1023.28 159.468L1022.3 159.646ZM1026.3 181.854L1025.32 182.032L1025.32 182.032L1026.3 181.854ZM1026.25 189.595L1025.27 189.404L1025.27 189.404L1026.25 189.595ZM1025 196V197H1025.82L1025.98 196.191L1025 196ZM999 196L998.018 196.191L998.176 197H999V196ZM998.416 193L999.398 192.809L999.24 192H998.416V193ZM992 177V176V177ZM998.574 177V178H999.41L999.558 177.177L998.574 177ZM1001.7 159.646L1000.72 159.468L1000.72 159.468L1001.7 159.646ZM1020.33 158V159C1020.81 159 1021.23 159.347 1021.31 159.823L1022.3 159.646L1023.28 159.468C1023.02 158.04 1021.78 157 1020.33 157V158ZM1022.3 159.646L1021.31 159.823L1025.32 182.032L1026.3 181.854L1027.28 181.677L1023.28 159.468L1022.3 159.646ZM1026.3 181.854L1025.32 182.032C1025.76 184.471 1025.74 186.971 1025.27 189.404L1026.25 189.595L1027.23 189.786C1027.75 187.11 1027.77 184.36 1027.28 181.677L1026.3 181.854ZM1026.25 189.595L1025.27 189.404L1024.02 195.809L1025 196L1025.98 196.191L1027.23 189.786L1026.25 189.595ZM1025 196V195H999V196V197H1025V196ZM999 196L999.982 195.809L999.398 192.809L998.416 193L997.434 193.191L998.018 196.191L999 196ZM998.416 193V192H992V193V194H998.416V193ZM992 193V192H991H990C990 193.105 990.895 194 992 194V193ZM991 192H992V178H991H990V192H991ZM991 178H992V177V176C990.895 176 990 176.895 990 178H991ZM992 177V178H998.574V177V176H992V177ZM998.574 177L999.558 177.177L1002.69 159.823L1001.7 159.646L1000.72 159.468L997.59 176.823L998.574 177ZM1001.7 159.646L1002.69 159.823C1002.77 159.347 1003.19 159 1003.67 159V158V157C1002.22 157 1000.98 158.04 1000.72 159.468L1001.7 159.646ZM1003.67 158V159H1020.33V158V157H1003.67V158Z\"\n        fill=\"black\"\n        mask=\"url(#path-90-inside-2_6_626)\"\n        />\n    </g>\n    <rect\n        id=\"Rectangle 83_2\"\n        x=\"1010.5\"\n        y=\"151.5\"\n        width=\"3\"\n        height=\"7\"\n        rx=\"0.5\"\n        fill=\"#CECFD0\"\n        stroke=\"black\"\n    />\n    <path\n        id=\"Rectangle 84_2\"\n        d=\"M1010.5 158.477C1010.39 158.468 1010.26 158.456 1010.12 158.44C1009.58 158.38 1008.86 158.261 1008.16 158.025C1006.72 157.547 1005.5 156.668 1005.5 155C1005.5 153.332 1006.72 152.453 1008.16 151.975C1008.86 151.739 1009.58 151.62 1010.12 151.56C1010.26 151.544 1010.39 151.532 1010.5 151.523V158.477Z\"\n        fill=\"#CECFD0\"\n        stroke=\"black\"\n    />\n    <path\n        id=\"Rectangle 85_2\"\n        d=\"M1017.84 151.5C1019.73 151.5 1021.54 152.25 1022.88 153.585C1023.97 154.681 1024.76 156.047 1025.15 157.546L1029.19 172.873C1029.27 173.19 1029.03 173.5 1028.7 173.5H1027.73C1027.51 173.5 1027.32 173.358 1027.26 173.15L1022.53 158.188C1021.97 156.403 1019.62 156.004 1018.5 157.501C1018.03 158.13 1017.29 158.5 1016.5 158.5H1013.5V151.5H1017.84Z\"\n        fill=\"#CECFD0\"\n        stroke=\"black\"\n    />\n    <rect\n        id=\"Rectangle 86_2\"\n        x=\"1000.5\"\n        y=\"179.5\"\n        width=\"23\"\n        height=\"11\"\n        rx=\"0.5\"\n        fill=\"#CECFD0\"\n        stroke=\"black\"\n    />\n    <path id=\"1.0 bar_2\" d=\"M1003.99 182.636V187H1003.46V183.19H1003.43L1002.37 183.898V183.361L1003.46 182.636H1003.99ZM1005.36 187.034C1005.25 187.034 1005.16 186.996 1005.09 186.921C1005.01 186.846 1004.97 186.756 1004.97 186.651C1004.97 186.545 1005.01 186.455 1005.09 186.38C1005.16 186.305 1005.25 186.267 1005.36 186.267C1005.46 186.267 1005.55 186.305 1005.63 186.38C1005.7 186.455 1005.74 186.545 1005.74 186.651C1005.74 186.72 1005.72 186.784 1005.69 186.842C1005.65 186.901 1005.61 186.947 1005.55 186.983C1005.49 187.017 1005.43 187.034 1005.36 187.034ZM1007.91 187.06C1007.59 187.06 1007.31 186.972 1007.09 186.798C1006.86 186.621 1006.69 186.366 1006.57 186.033C1006.45 185.697 1006.39 185.293 1006.39 184.818C1006.39 184.347 1006.45 183.944 1006.57 183.61C1006.69 183.275 1006.86 183.019 1007.09 182.843C1007.32 182.665 1007.59 182.577 1007.91 182.577C1008.22 182.577 1008.5 182.665 1008.72 182.843C1008.95 183.019 1009.12 183.275 1009.24 183.61C1009.36 183.944 1009.42 184.347 1009.42 184.818C1009.42 185.293 1009.36 185.697 1009.24 186.033C1009.12 186.366 1008.95 186.621 1008.73 186.798C1008.5 186.972 1008.23 187.06 1007.91 187.06ZM1007.91 186.591C1008.22 186.591 1008.47 186.437 1008.65 186.131C1008.82 185.824 1008.91 185.386 1008.91 184.818C1008.91 184.44 1008.87 184.119 1008.79 183.853C1008.71 183.587 1008.6 183.385 1008.45 183.246C1008.3 183.107 1008.12 183.037 1007.91 183.037C1007.59 183.037 1007.34 183.192 1007.17 183.504C1006.99 183.813 1006.9 184.251 1006.9 184.818C1006.9 185.196 1006.94 185.517 1007.02 185.781C1007.1 186.045 1007.21 186.246 1007.36 186.384C1007.51 186.522 1007.69 186.591 1007.91 186.591ZM1012 187V182.636H1012.5V184.247H1012.54C1012.58 184.19 1012.63 184.118 1012.7 184.03C1012.76 183.94 1012.86 183.861 1012.98 183.791C1013.11 183.72 1013.28 183.685 1013.49 183.685C1013.76 183.685 1014.01 183.754 1014.22 183.891C1014.43 184.029 1014.59 184.224 1014.71 184.477C1014.83 184.73 1014.89 185.028 1014.89 185.372C1014.89 185.719 1014.83 186.019 1014.71 186.273C1014.59 186.526 1014.43 186.722 1014.22 186.862C1014.01 186.999 1013.77 187.068 1013.5 187.068C1013.29 187.068 1013.12 187.033 1012.99 186.964C1012.87 186.893 1012.77 186.812 1012.7 186.723C1012.63 186.632 1012.58 186.557 1012.54 186.497H1012.48V187H1012ZM1012.49 185.364C1012.49 185.611 1012.53 185.829 1012.6 186.018C1012.67 186.205 1012.78 186.352 1012.92 186.459C1013.06 186.564 1013.23 186.616 1013.43 186.616C1013.64 186.616 1013.81 186.561 1013.96 186.45C1014.1 186.338 1014.2 186.187 1014.27 185.999C1014.35 185.808 1014.38 185.597 1014.38 185.364C1014.38 185.134 1014.35 184.926 1014.28 184.741C1014.21 184.555 1014.1 184.408 1013.96 184.3C1013.82 184.191 1013.64 184.136 1013.43 184.136C1013.22 184.136 1013.05 184.188 1012.91 184.292C1012.77 184.394 1012.67 184.538 1012.6 184.722C1012.53 184.906 1012.49 185.119 1012.49 185.364ZM1016.62 187.077C1016.41 187.077 1016.22 187.038 1016.05 186.96C1015.88 186.88 1015.75 186.766 1015.65 186.616C1015.55 186.466 1015.5 186.284 1015.5 186.071C1015.5 185.884 1015.54 185.732 1015.61 185.615C1015.69 185.497 1015.79 185.405 1015.91 185.338C1016.03 185.271 1016.17 185.222 1016.32 185.189C1016.47 185.155 1016.62 185.128 1016.77 185.108C1016.97 185.082 1017.13 185.063 1017.26 185.05C1017.38 185.036 1017.47 185.013 1017.53 184.98C1017.59 184.947 1017.62 184.891 1017.62 184.81V184.793C1017.62 184.582 1017.56 184.419 1017.44 184.303C1017.33 184.186 1017.16 184.128 1016.93 184.128C1016.69 184.128 1016.5 184.18 1016.36 184.286C1016.22 184.391 1016.13 184.503 1016.07 184.622L1015.6 184.452C1015.68 184.253 1015.79 184.098 1015.94 183.987C1016.08 183.875 1016.24 183.797 1016.41 183.753C1016.58 183.707 1016.74 183.685 1016.91 183.685C1017.01 183.685 1017.13 183.697 1017.27 183.723C1017.41 183.747 1017.54 183.798 1017.67 183.874C1017.8 183.951 1017.91 184.067 1017.99 184.222C1018.08 184.376 1018.12 184.584 1018.12 184.844V187H1017.62V186.557H1017.59C1017.56 186.628 1017.5 186.704 1017.42 186.785C1017.34 186.866 1017.23 186.935 1017.1 186.991C1016.97 187.048 1016.81 187.077 1016.62 187.077ZM1016.7 186.625C1016.89 186.625 1017.06 186.586 1017.2 186.508C1017.34 186.43 1017.44 186.329 1017.51 186.205C1017.58 186.082 1017.62 185.952 1017.62 185.815V185.355C1017.59 185.381 1017.55 185.404 1017.48 185.425C1017.4 185.445 1017.32 185.463 1017.23 185.479C1017.14 185.493 1017.05 185.506 1016.96 185.517C1016.87 185.527 1016.8 185.536 1016.75 185.543C1016.62 185.56 1016.49 185.587 1016.38 185.626C1016.27 185.663 1016.18 185.719 1016.11 185.794C1016.04 185.868 1016 185.969 1016 186.097C1016 186.271 1016.07 186.403 1016.2 186.493C1016.33 186.581 1016.5 186.625 1016.7 186.625ZM1019.04 187V183.727H1019.52V184.222H1019.56C1019.62 184.06 1019.72 183.928 1019.88 183.827C1020.04 183.727 1020.21 183.676 1020.41 183.676C1020.45 183.676 1020.49 183.677 1020.55 183.678C1020.6 183.68 1020.64 183.682 1020.67 183.685V184.196C1020.66 184.192 1020.62 184.185 1020.56 184.177C1020.5 184.167 1020.43 184.162 1020.37 184.162C1020.21 184.162 1020.06 184.195 1019.94 184.262C1019.82 184.327 1019.72 184.418 1019.65 184.535C1019.57 184.65 1019.54 184.781 1019.54 184.929V187H1019.04Z\" fill=\"black\"/>\n<g id=\"labels\">\n<path id=\"pressure regulator\" d=\"M106.074 341.864V331.364H107.207V332.577H107.347C107.433 332.444 107.552 332.275 107.705 332.07C107.86 331.861 108.082 331.675 108.371 331.513C108.662 331.347 109.057 331.264 109.554 331.264C110.197 331.264 110.764 331.425 111.254 331.746C111.745 332.068 112.128 332.524 112.403 333.114C112.678 333.704 112.815 334.4 112.815 335.202C112.815 336.01 112.678 336.711 112.403 337.305C112.128 337.895 111.746 338.352 111.259 338.677C110.772 338.998 110.21 339.159 109.574 339.159C109.083 339.159 108.691 339.078 108.396 338.915C108.101 338.75 107.874 338.562 107.714 338.354C107.555 338.142 107.433 337.966 107.347 337.827H107.247V341.864H106.074ZM107.227 335.182C107.227 335.759 107.312 336.267 107.481 336.708C107.65 337.146 107.897 337.489 108.222 337.737C108.546 337.982 108.944 338.105 109.415 338.105C109.905 338.105 110.315 337.976 110.643 337.717C110.974 337.455 111.223 337.104 111.388 336.663C111.558 336.219 111.642 335.725 111.642 335.182C111.642 334.645 111.559 334.161 111.393 333.73C111.231 333.296 110.984 332.953 110.653 332.701C110.325 332.446 109.912 332.318 109.415 332.318C108.938 332.318 108.536 332.439 108.212 332.681C107.887 332.92 107.642 333.254 107.476 333.685C107.31 334.113 107.227 334.612 107.227 335.182ZM114.605 339V331.364H115.739V332.517H115.818C115.957 332.139 116.209 331.833 116.574 331.597C116.938 331.362 117.349 331.244 117.807 331.244C117.893 331.244 118.001 331.246 118.13 331.249C118.259 331.253 118.357 331.258 118.423 331.264V332.457C118.384 332.447 118.292 332.433 118.15 332.413C118.011 332.389 117.863 332.378 117.707 332.378C117.336 332.378 117.005 332.456 116.713 332.612C116.425 332.764 116.196 332.976 116.027 333.248C115.861 333.516 115.778 333.823 115.778 334.168V339H114.605ZM122.783 339.159C122.048 339.159 121.413 338.997 120.879 338.672C120.349 338.344 119.94 337.886 119.651 337.3C119.366 336.71 119.224 336.024 119.224 335.241C119.224 334.459 119.366 333.77 119.651 333.173C119.94 332.573 120.341 332.106 120.854 331.771C121.371 331.433 121.975 331.264 122.664 331.264C123.062 331.264 123.455 331.33 123.842 331.463C124.23 331.596 124.583 331.811 124.901 332.109C125.219 332.404 125.473 332.795 125.662 333.283C125.851 333.77 125.945 334.37 125.945 335.082V335.58H120.059V334.565H124.752C124.752 334.134 124.666 333.75 124.494 333.412C124.325 333.074 124.083 332.807 123.768 332.612C123.456 332.416 123.088 332.318 122.664 332.318C122.197 332.318 121.792 332.434 121.451 332.666C121.113 332.895 120.853 333.193 120.67 333.561C120.488 333.929 120.397 334.323 120.397 334.744V335.42C120.397 335.997 120.496 336.486 120.695 336.887C120.897 337.285 121.178 337.588 121.536 337.797C121.893 338.002 122.309 338.105 122.783 338.105C123.092 338.105 123.37 338.062 123.619 337.976C123.871 337.886 124.088 337.754 124.27 337.578C124.452 337.399 124.593 337.177 124.692 336.912L125.826 337.23C125.707 337.615 125.506 337.953 125.224 338.244C124.943 338.533 124.595 338.758 124.18 338.92C123.766 339.08 123.3 339.159 122.783 339.159ZM133.139 333.074L132.085 333.372C132.019 333.196 131.921 333.026 131.792 332.86C131.666 332.691 131.494 332.552 131.275 332.442C131.056 332.333 130.776 332.278 130.435 332.278C129.967 332.278 129.578 332.386 129.266 332.602C128.958 332.814 128.804 333.084 128.804 333.412C128.804 333.704 128.91 333.934 129.122 334.103C129.334 334.272 129.666 334.413 130.116 334.526L131.25 334.804C131.933 334.97 132.442 335.223 132.776 335.565C133.111 335.903 133.278 336.339 133.278 336.872C133.278 337.31 133.152 337.701 132.901 338.045C132.652 338.39 132.304 338.662 131.857 338.861C131.409 339.06 130.889 339.159 130.295 339.159C129.517 339.159 128.872 338.99 128.362 338.652C127.851 338.314 127.528 337.82 127.392 337.17L128.506 336.892C128.612 337.303 128.812 337.611 129.107 337.817C129.406 338.022 129.795 338.125 130.276 338.125C130.822 338.125 131.257 338.009 131.578 337.777C131.903 337.542 132.065 337.26 132.065 336.932C132.065 336.667 131.973 336.445 131.787 336.266C131.601 336.083 131.316 335.947 130.932 335.858L129.659 335.56C128.96 335.394 128.446 335.137 128.118 334.789C127.793 334.438 127.631 333.999 127.631 333.472C127.631 333.041 127.752 332.66 127.994 332.328C128.239 331.997 128.572 331.737 128.993 331.548C129.417 331.359 129.898 331.264 130.435 331.264C131.19 331.264 131.784 331.43 132.214 331.761C132.649 332.093 132.957 332.53 133.139 333.074ZM140.454 333.074L139.4 333.372C139.333 333.196 139.236 333.026 139.106 332.86C138.98 332.691 138.808 332.552 138.589 332.442C138.371 332.333 138.09 332.278 137.749 332.278C137.282 332.278 136.892 332.386 136.581 332.602C136.273 332.814 136.118 333.084 136.118 333.412C136.118 333.704 136.224 333.934 136.437 334.103C136.649 334.272 136.98 334.413 137.431 334.526L138.564 334.804C139.247 334.97 139.756 335.223 140.091 335.565C140.425 335.903 140.593 336.339 140.593 336.872C140.593 337.31 140.467 337.701 140.215 338.045C139.966 338.39 139.618 338.662 139.171 338.861C138.724 339.06 138.203 339.159 137.61 339.159C136.831 339.159 136.186 338.99 135.676 338.652C135.166 338.314 134.842 337.82 134.706 337.17L135.82 336.892C135.926 337.303 136.127 337.611 136.422 337.817C136.72 338.022 137.109 338.125 137.59 338.125C138.137 338.125 138.571 338.009 138.893 337.777C139.217 337.542 139.38 337.26 139.38 336.932C139.38 336.667 139.287 336.445 139.101 336.266C138.916 336.083 138.631 335.947 138.246 335.858L136.974 335.56C136.274 335.394 135.76 335.137 135.432 334.789C135.108 334.438 134.945 333.999 134.945 333.472C134.945 333.041 135.066 332.66 135.308 332.328C135.553 331.997 135.886 331.737 136.307 331.548C136.732 331.359 137.212 331.264 137.749 331.264C138.505 331.264 139.098 331.43 139.529 331.761C139.963 332.093 140.271 332.53 140.454 333.074ZM147.172 335.878V331.364H148.345V339H147.172V337.707H147.092C146.913 338.095 146.635 338.425 146.257 338.697C145.879 338.965 145.402 339.099 144.825 339.099C144.348 339.099 143.923 338.995 143.552 338.786C143.181 338.574 142.889 338.256 142.677 337.832C142.465 337.404 142.359 336.866 142.359 336.216V331.364H143.532V336.136C143.532 336.693 143.688 337.137 144 337.469C144.315 337.8 144.716 337.966 145.203 337.966C145.494 337.966 145.791 337.891 146.093 337.742C146.398 337.593 146.653 337.364 146.858 337.056C147.067 336.748 147.172 336.355 147.172 335.878ZM150.494 339V331.364H151.627V332.517H151.707C151.846 332.139 152.098 331.833 152.463 331.597C152.827 331.362 153.238 331.244 153.695 331.244C153.782 331.244 153.889 331.246 154.019 331.249C154.148 331.253 154.246 331.258 154.312 331.264V332.457C154.272 332.447 154.181 332.433 154.039 332.413C153.899 332.389 153.752 332.378 153.596 332.378C153.225 332.378 152.893 332.456 152.602 332.612C152.313 332.764 152.085 332.976 151.916 333.248C151.75 333.516 151.667 333.823 151.667 334.168V339H150.494ZM158.672 339.159C157.936 339.159 157.302 338.997 156.768 338.672C156.238 338.344 155.828 337.886 155.54 337.3C155.255 336.71 155.112 336.024 155.112 335.241C155.112 334.459 155.255 333.77 155.54 333.173C155.828 332.573 156.229 332.106 156.743 331.771C157.26 331.433 157.863 331.264 158.553 331.264C158.95 331.264 159.343 331.33 159.731 331.463C160.119 331.596 160.472 331.811 160.79 332.109C161.108 332.404 161.362 332.795 161.551 333.283C161.74 333.77 161.834 334.37 161.834 335.082V335.58H155.948V334.565H160.641C160.641 334.134 160.555 333.75 160.382 333.412C160.213 333.074 159.971 332.807 159.656 332.612C159.345 332.416 158.977 332.318 158.553 332.318C158.085 332.318 157.681 332.434 157.34 332.666C157.002 332.895 156.741 333.193 156.559 333.561C156.377 333.929 156.286 334.323 156.286 334.744V335.42C156.286 335.997 156.385 336.486 156.584 336.887C156.786 337.285 157.066 337.588 157.424 337.797C157.782 338.002 158.198 338.105 158.672 338.105C158.98 338.105 159.259 338.062 159.507 337.976C159.759 337.886 159.976 337.754 160.159 337.578C160.341 337.399 160.482 337.177 160.581 336.912L161.715 337.23C161.595 337.615 161.395 337.953 161.113 338.244C160.831 338.533 160.483 338.758 160.069 338.92C159.655 339.08 159.189 339.159 158.672 339.159ZM167.556 339V331.364H168.69V332.517H168.769C168.909 332.139 169.16 331.833 169.525 331.597C169.89 331.362 170.301 331.244 170.758 331.244C170.844 331.244 170.952 331.246 171.081 331.249C171.21 331.253 171.308 331.258 171.374 331.264V332.457C171.335 332.447 171.244 332.433 171.101 332.413C170.962 332.389 170.814 332.378 170.659 332.378C170.287 332.378 169.956 332.456 169.664 332.612C169.376 332.764 169.147 332.976 168.978 333.248C168.812 333.516 168.73 333.823 168.73 334.168V339H167.556ZM175.735 339.159C174.999 339.159 174.364 338.997 173.83 338.672C173.3 338.344 172.891 337.886 172.602 337.3C172.317 336.71 172.175 336.024 172.175 335.241C172.175 334.459 172.317 333.77 172.602 333.173C172.891 332.573 173.292 332.106 173.806 331.771C174.323 331.433 174.926 331.264 175.615 331.264C176.013 331.264 176.406 331.33 176.794 331.463C177.181 331.596 177.534 331.811 177.852 332.109C178.171 332.404 178.424 332.795 178.613 333.283C178.802 333.77 178.896 334.37 178.896 335.082V335.58H173.01V334.565H177.703C177.703 334.134 177.617 333.75 177.445 333.412C177.276 333.074 177.034 332.807 176.719 332.612C176.407 332.416 176.039 332.318 175.615 332.318C175.148 332.318 174.744 332.434 174.402 332.666C174.064 332.895 173.804 333.193 173.622 333.561C173.439 333.929 173.348 334.323 173.348 334.744V335.42C173.348 335.997 173.448 336.486 173.646 336.887C173.849 337.285 174.129 337.588 174.487 337.797C174.845 338.002 175.261 338.105 175.735 338.105C176.043 338.105 176.321 338.062 176.57 337.976C176.822 337.886 177.039 337.754 177.221 337.578C177.403 337.399 177.544 337.177 177.644 336.912L178.777 337.23C178.658 337.615 178.457 337.953 178.176 338.244C177.894 338.533 177.546 338.758 177.132 338.92C176.717 339.08 176.252 339.159 175.735 339.159ZM183.764 342.023C183.197 342.023 182.71 341.95 182.302 341.804C181.894 341.661 181.555 341.473 181.283 341.237C181.014 341.005 180.801 340.757 180.642 340.491L181.576 339.835C181.682 339.974 181.816 340.134 181.979 340.312C182.141 340.495 182.363 340.652 182.645 340.785C182.93 340.921 183.303 340.989 183.764 340.989C184.38 340.989 184.889 340.839 185.29 340.541C185.691 340.243 185.892 339.776 185.892 339.139V337.588H185.792C185.706 337.727 185.583 337.9 185.424 338.105C185.268 338.307 185.043 338.488 184.748 338.647C184.456 338.803 184.062 338.881 183.565 338.881C182.948 338.881 182.395 338.735 181.904 338.443C181.417 338.152 181.031 337.727 180.746 337.17C180.464 336.614 180.323 335.937 180.323 335.142C180.323 334.36 180.461 333.679 180.736 333.099C181.011 332.515 181.394 332.065 181.884 331.746C182.375 331.425 182.942 331.264 183.585 331.264C184.082 331.264 184.476 331.347 184.768 331.513C185.063 331.675 185.288 331.861 185.444 332.07C185.603 332.275 185.726 332.444 185.812 332.577H185.931V331.364H187.065V339.219C187.065 339.875 186.916 340.409 186.617 340.82C186.322 341.234 185.925 341.537 185.424 341.729C184.927 341.925 184.374 342.023 183.764 342.023ZM183.724 337.827C184.195 337.827 184.592 337.719 184.917 337.504C185.242 337.288 185.489 336.978 185.658 336.574C185.827 336.17 185.911 335.686 185.911 335.122C185.911 334.572 185.829 334.086 185.663 333.665C185.497 333.245 185.252 332.915 184.927 332.676C184.602 332.437 184.201 332.318 183.724 332.318C183.227 332.318 182.812 332.444 182.481 332.696C182.153 332.948 181.906 333.286 181.74 333.71C181.578 334.134 181.497 334.605 181.497 335.122C181.497 335.652 181.579 336.121 181.745 336.529C181.914 336.933 182.163 337.252 182.491 337.484C182.822 337.712 183.233 337.827 183.724 337.827ZM194.025 335.878V331.364H195.198V339H194.025V337.707H193.945C193.767 338.095 193.488 338.425 193.11 338.697C192.732 338.965 192.255 339.099 191.678 339.099C191.201 339.099 190.777 338.995 190.406 338.786C190.035 338.574 189.743 338.256 189.531 337.832C189.319 337.404 189.213 336.866 189.213 336.216V331.364H190.386V336.136C190.386 336.693 190.542 337.137 190.853 337.469C191.168 337.8 191.569 337.966 192.056 337.966C192.348 337.966 192.645 337.891 192.946 337.742C193.251 337.593 193.506 337.364 193.712 337.056C193.921 336.748 194.025 336.355 194.025 335.878ZM198.521 328.818V339H197.347V328.818H198.521ZM202.917 339.179C202.433 339.179 201.994 339.088 201.599 338.906C201.205 338.72 200.892 338.453 200.66 338.105C200.428 337.754 200.312 337.33 200.312 336.832C200.312 336.395 200.398 336.04 200.57 335.768C200.742 335.493 200.973 335.278 201.261 335.122C201.55 334.966 201.868 334.85 202.216 334.774C202.567 334.695 202.92 334.632 203.275 334.585C203.739 334.526 204.115 334.481 204.403 334.451C204.695 334.418 204.907 334.363 205.04 334.287C205.175 334.211 205.243 334.078 205.243 333.889V333.849C205.243 333.359 205.109 332.978 204.841 332.706C204.576 332.434 204.173 332.298 203.633 332.298C203.073 332.298 202.633 332.421 202.315 332.666C201.997 332.911 201.773 333.173 201.644 333.452L200.53 333.054C200.729 332.59 200.994 332.229 201.326 331.97C201.661 331.708 202.025 331.526 202.42 331.423C202.817 331.317 203.208 331.264 203.593 331.264C203.838 331.264 204.12 331.294 204.438 331.354C204.76 331.41 205.069 331.528 205.368 331.707C205.669 331.886 205.92 332.156 206.118 332.517C206.317 332.878 206.417 333.362 206.417 333.969V339H205.243V337.966H205.184C205.104 338.132 204.972 338.309 204.786 338.498C204.6 338.687 204.354 338.848 204.045 338.98C203.737 339.113 203.361 339.179 202.917 339.179ZM203.096 338.125C203.56 338.125 203.951 338.034 204.269 337.852C204.59 337.669 204.832 337.434 204.995 337.146C205.161 336.857 205.243 336.554 205.243 336.236V335.162C205.194 335.222 205.084 335.276 204.915 335.326C204.75 335.372 204.557 335.414 204.339 335.45C204.123 335.483 203.913 335.513 203.707 335.54C203.505 335.563 203.341 335.583 203.215 335.599C202.91 335.639 202.625 335.704 202.36 335.793C202.098 335.879 201.886 336.01 201.724 336.186C201.564 336.358 201.485 336.594 201.485 336.892C201.485 337.3 201.636 337.608 201.937 337.817C202.242 338.022 202.628 338.125 203.096 338.125ZM211.879 331.364V332.358H207.922V331.364H211.879ZM209.075 329.534H210.249V336.812C210.249 337.144 210.297 337.393 210.393 337.558C210.492 337.721 210.618 337.83 210.771 337.886C210.926 337.939 211.09 337.966 211.263 337.966C211.392 337.966 211.498 337.959 211.581 337.946C211.664 337.929 211.73 337.916 211.78 337.906L212.018 338.96C211.939 338.99 211.828 339.02 211.685 339.05C211.543 339.083 211.362 339.099 211.143 339.099C210.812 339.099 210.487 339.028 210.169 338.886C209.854 338.743 209.592 338.526 209.384 338.234C209.178 337.943 209.075 337.575 209.075 337.131V329.534ZM216.664 339.159C215.975 339.159 215.37 338.995 214.85 338.667C214.333 338.339 213.928 337.88 213.637 337.29C213.348 336.7 213.204 336.01 213.204 335.222C213.204 334.426 213.348 333.732 213.637 333.138C213.928 332.545 214.333 332.085 214.85 331.756C215.37 331.428 215.975 331.264 216.664 331.264C217.354 331.264 217.957 331.428 218.474 331.756C218.994 332.085 219.399 332.545 219.687 333.138C219.979 333.732 220.125 334.426 220.125 335.222C220.125 336.01 219.979 336.7 219.687 337.29C219.399 337.88 218.994 338.339 218.474 338.667C217.957 338.995 217.354 339.159 216.664 339.159ZM216.664 338.105C217.188 338.105 217.619 337.971 217.957 337.702C218.295 337.434 218.545 337.081 218.708 336.643C218.87 336.206 218.951 335.732 218.951 335.222C218.951 334.711 218.87 334.236 218.708 333.795C218.545 333.354 218.295 332.998 217.957 332.726C217.619 332.454 217.188 332.318 216.664 332.318C216.141 332.318 215.71 332.454 215.372 332.726C215.034 332.998 214.783 333.354 214.621 333.795C214.459 334.236 214.377 334.711 214.377 335.222C214.377 335.732 214.459 336.206 214.621 336.643C214.783 337.081 215.034 337.434 215.372 337.702C215.71 337.971 216.141 338.105 216.664 338.105ZM221.916 339V331.364H223.049V332.517H223.129C223.268 332.139 223.52 331.833 223.884 331.597C224.249 331.362 224.66 331.244 225.117 331.244C225.204 331.244 225.311 331.246 225.441 331.249C225.57 331.253 225.668 331.258 225.734 331.264V332.457C225.694 332.447 225.603 332.433 225.46 332.413C225.321 332.389 225.174 332.378 225.018 332.378C224.647 332.378 224.315 332.456 224.024 332.612C223.735 332.764 223.507 332.976 223.338 333.248C223.172 333.516 223.089 333.823 223.089 334.168V339H221.916Z\" fill=\"black\"/>\n<path id=\"saturated steam inlet at 100 psig\" d=\"M16.5992 157.074L15.5452 157.372C15.4789 157.196 15.3811 157.026 15.2519 156.86C15.1259 156.691 14.9536 156.552 14.7348 156.442C14.5161 156.333 14.236 156.278 13.8946 156.278C13.4273 156.278 13.0378 156.386 12.7263 156.602C12.4181 156.814 12.2639 157.084 12.2639 157.412C12.2639 157.704 12.37 157.934 12.5821 158.103C12.7942 158.272 13.1257 158.413 13.5764 158.526L14.71 158.804C15.3927 158.97 15.9015 159.223 16.2362 159.565C16.571 159.903 16.7384 160.339 16.7384 160.872C16.7384 161.31 16.6124 161.701 16.3605 162.045C16.1119 162.39 15.7639 162.662 15.3165 162.861C14.8691 163.06 14.3487 163.159 13.7554 163.159C12.9765 163.159 12.3319 162.99 11.8215 162.652C11.311 162.314 10.9879 161.82 10.852 161.17L11.9656 160.892C12.0717 161.303 12.2722 161.611 12.5672 161.817C12.8655 162.022 13.2549 162.125 13.7355 162.125C14.2824 162.125 14.7166 162.009 15.0381 161.777C15.3629 161.542 15.5253 161.26 15.5253 160.932C15.5253 160.667 15.4325 160.445 15.2469 160.266C15.0613 160.083 14.7762 159.947 14.3918 159.858L13.1191 159.56C12.4197 159.394 11.906 159.137 11.5779 158.789C11.253 158.438 11.0906 157.999 11.0906 157.472C11.0906 157.041 11.2116 156.66 11.4536 156.328C11.6988 155.997 12.0319 155.737 12.4529 155.548C12.8771 155.359 13.3577 155.264 13.8946 155.264C14.6503 155.264 15.2436 155.43 15.6744 155.761C16.1086 156.093 16.4169 156.53 16.5992 157.074ZM20.7517 163.179C20.2678 163.179 19.8286 163.088 19.4342 162.906C19.0398 162.72 18.7266 162.453 18.4946 162.105C18.2626 161.754 18.1466 161.33 18.1466 160.832C18.1466 160.395 18.2327 160.04 18.4051 159.768C18.5774 159.493 18.8078 159.278 19.0961 159.122C19.3845 158.966 19.7027 158.85 20.0507 158.774C20.402 158.695 20.755 158.632 21.1096 158.585C21.5737 158.526 21.9498 158.481 22.2382 158.451C22.5299 158.418 22.742 158.363 22.8746 158.287C23.0104 158.211 23.0784 158.078 23.0784 157.889V157.849C23.0784 157.359 22.9442 156.978 22.6757 156.706C22.4105 156.434 22.0078 156.298 21.4676 156.298C20.9075 156.298 20.4683 156.421 20.1501 156.666C19.8319 156.911 19.6082 157.173 19.479 157.452L18.3653 157.054C18.5642 156.59 18.8293 156.229 19.1608 155.97C19.4955 155.708 19.8601 155.526 20.2545 155.423C20.6523 155.317 21.0434 155.264 21.4278 155.264C21.6731 155.264 21.9548 155.294 22.273 155.354C22.5945 155.41 22.9044 155.528 23.2027 155.707C23.5043 155.886 23.7545 156.156 23.9534 156.517C24.1523 156.878 24.2517 157.362 24.2517 157.969V163H23.0784V161.966H23.0187C22.9392 162.132 22.8066 162.309 22.621 162.498C22.4354 162.687 22.1885 162.848 21.8802 162.98C21.572 163.113 21.1958 163.179 20.7517 163.179ZM20.9307 162.125C21.3947 162.125 21.7858 162.034 22.104 161.852C22.4255 161.669 22.6674 161.434 22.8298 161.146C22.9955 160.857 23.0784 160.554 23.0784 160.236V159.162C23.0287 159.222 22.9193 159.276 22.7503 159.326C22.5845 159.372 22.3923 159.414 22.1736 159.45C21.9581 159.483 21.7477 159.513 21.5422 159.54C21.34 159.563 21.1759 159.583 21.05 159.599C20.7451 159.639 20.46 159.704 20.1949 159.793C19.933 159.879 19.7209 160.01 19.5585 160.186C19.3994 160.358 19.3199 160.594 19.3199 160.892C19.3199 161.3 19.4707 161.608 19.7723 161.817C20.0772 162.022 20.4633 162.125 20.9307 162.125ZM29.7142 155.364V156.358H25.7568V155.364H29.7142ZM26.9102 153.534H28.0835V160.812C28.0835 161.144 28.1316 161.393 28.2277 161.558C28.3271 161.721 28.4531 161.83 28.6056 161.886C28.7613 161.939 28.9254 161.966 29.0977 161.966C29.227 161.966 29.3331 161.959 29.4159 161.946C29.4988 161.929 29.5651 161.916 29.6148 161.906L29.8534 162.96C29.7739 162.99 29.6628 163.02 29.5203 163.05C29.3778 163.083 29.1972 163.099 28.9784 163.099C28.647 163.099 28.3222 163.028 28.004 162.886C27.6891 162.743 27.4273 162.526 27.2185 162.234C27.013 161.943 26.9102 161.575 26.9102 161.131V153.534ZM36.2916 159.878V155.364H37.4649V163H36.2916V161.707H36.2121C36.0331 162.095 35.7547 162.425 35.3769 162.697C34.999 162.965 34.5218 163.099 33.945 163.099C33.4678 163.099 33.0435 162.995 32.6723 162.786C32.3011 162.574 32.0094 162.256 31.7973 161.832C31.5852 161.404 31.4791 160.866 31.4791 160.216V155.364H32.6524V160.136C32.6524 160.693 32.8082 161.137 33.1198 161.469C33.4346 161.8 33.8357 161.966 34.3229 161.966C34.6146 161.966 34.9112 161.891 35.2128 161.742C35.5177 161.593 35.7729 161.364 35.9784 161.056C36.1872 160.748 36.2916 160.355 36.2916 159.878ZM39.6139 163V155.364H40.7474V156.517H40.827C40.9662 156.139 41.2181 155.833 41.5827 155.597C41.9472 155.362 42.3582 155.244 42.8156 155.244C42.9018 155.244 43.0095 155.246 43.1388 155.249C43.268 155.253 43.3658 155.258 43.4321 155.264V156.457C43.3923 156.447 43.3012 156.433 43.1586 156.413C43.0194 156.389 42.872 156.378 42.7162 156.378C42.345 156.378 42.0135 156.456 41.7219 156.612C41.4335 156.764 41.2048 156.976 41.0358 157.248C40.8701 157.516 40.7872 157.823 40.7872 158.168V163H39.6139ZM47.07 163.179C46.5861 163.179 46.147 163.088 45.7526 162.906C45.3582 162.72 45.045 162.453 44.8129 162.105C44.5809 161.754 44.4649 161.33 44.4649 160.832C44.4649 160.395 44.5511 160.04 44.7235 159.768C44.8958 159.493 45.1262 159.278 45.4145 159.122C45.7029 158.966 46.021 158.85 46.3691 158.774C46.7204 158.695 47.0734 158.632 47.428 158.585C47.892 158.526 48.2682 158.481 48.5566 158.451C48.8482 158.418 49.0603 158.363 49.1929 158.287C49.3288 158.211 49.3968 158.078 49.3968 157.889V157.849C49.3968 157.359 49.2625 156.978 48.9941 156.706C48.7289 156.434 48.3262 156.298 47.786 156.298C47.2258 156.298 46.7867 156.421 46.4685 156.666C46.1503 156.911 45.9266 157.173 45.7973 157.452L44.6837 157.054C44.8825 156.59 45.1477 156.229 45.4791 155.97C45.8139 155.708 46.1785 155.526 46.5729 155.423C46.9706 155.317 47.3617 155.264 47.7462 155.264C47.9914 155.264 48.2732 155.294 48.5914 155.354C48.9128 155.41 49.2227 155.528 49.521 155.707C49.8227 155.886 50.0729 156.156 50.2718 156.517C50.4706 156.878 50.57 157.362 50.57 157.969V163H49.3968V161.966H49.3371C49.2575 162.132 49.125 162.309 48.9394 162.498C48.7538 162.687 48.5068 162.848 48.1986 162.98C47.8904 163.113 47.5142 163.179 47.07 163.179ZM47.249 162.125C47.713 162.125 48.1041 162.034 48.4223 161.852C48.7438 161.669 48.9858 161.434 49.1482 161.146C49.3139 160.857 49.3968 160.554 49.3968 160.236V159.162C49.347 159.222 49.2377 159.276 49.0686 159.326C48.9029 159.372 48.7107 159.414 48.4919 159.45C48.2765 159.483 48.066 159.513 47.8605 159.54C47.6584 159.563 47.4943 159.583 47.3683 159.599C47.0634 159.639 46.7784 159.704 46.5132 159.793C46.2514 159.879 46.0393 160.01 45.8769 160.186C45.7178 160.358 45.6382 160.594 45.6382 160.892C45.6382 161.3 45.789 161.608 46.0906 161.817C46.3956 162.022 46.7817 162.125 47.249 162.125ZM56.0326 155.364V156.358H52.0752V155.364H56.0326ZM53.2286 153.534H54.4019V160.812C54.4019 161.144 54.45 161.393 54.5461 161.558C54.6455 161.721 54.7715 161.83 54.9239 161.886C55.0797 161.939 55.2438 161.966 55.4161 161.966C55.5454 161.966 55.6514 161.959 55.7343 161.946C55.8171 161.929 55.8834 161.916 55.9331 161.906L56.1718 162.96C56.0922 162.99 55.9812 163.02 55.8387 163.05C55.6962 163.083 55.5155 163.099 55.2968 163.099C54.9653 163.099 54.6405 163.028 54.3224 162.886C54.0075 162.743 53.7456 162.526 53.5368 162.234C53.3314 161.943 53.2286 161.575 53.2286 161.131V153.534ZM60.9172 163.159C60.1814 163.159 59.5467 162.997 59.0131 162.672C58.4827 162.344 58.0734 161.886 57.7851 161.3C57.5 160.71 57.3575 160.024 57.3575 159.241C57.3575 158.459 57.5 157.77 57.7851 157.173C58.0734 156.573 58.4745 156.106 58.9882 155.771C59.5052 155.433 60.1085 155.264 60.7979 155.264C61.1956 155.264 61.5883 155.33 61.9761 155.463C62.3639 155.596 62.7169 155.811 63.0351 156.109C63.3532 156.404 63.6068 156.795 63.7957 157.283C63.9846 157.77 64.0791 158.37 64.0791 159.082V159.58H58.1927V158.565H62.8859C62.8859 158.134 62.7997 157.75 62.6274 157.412C62.4584 157.074 62.2164 156.807 61.9015 156.612C61.59 156.416 61.2221 156.318 60.7979 156.318C60.3305 156.318 59.9262 156.434 59.5848 156.666C59.2467 156.895 58.9865 157.193 58.8042 157.561C58.622 157.929 58.5308 158.323 58.5308 158.744V159.42C58.5308 159.997 58.6302 160.486 58.8291 160.887C59.0313 161.285 59.3113 161.588 59.6693 161.797C60.0273 162.002 60.4432 162.105 60.9172 162.105C61.2254 162.105 61.5038 162.062 61.7524 161.976C62.0043 161.886 62.2214 161.754 62.4037 161.578C62.586 161.399 62.7268 161.177 62.8263 160.912L63.9598 161.23C63.8405 161.615 63.6399 161.953 63.3582 162.244C63.0765 162.533 62.7285 162.758 62.3142 162.92C61.8999 163.08 61.4342 163.159 60.9172 163.159ZM68.7474 163.159C68.1111 163.159 67.5493 162.998 67.0621 162.677C66.5748 162.352 66.1937 161.895 65.9186 161.305C65.6435 160.711 65.5059 160.01 65.5059 159.202C65.5059 158.4 65.6435 157.704 65.9186 157.114C66.1937 156.524 66.5765 156.068 67.067 155.746C67.5576 155.425 68.1243 155.264 68.7673 155.264C69.2645 155.264 69.6572 155.347 69.9456 155.513C70.2372 155.675 70.4593 155.861 70.6118 156.07C70.7675 156.275 70.8885 156.444 70.9747 156.577H71.0741V152.818H72.2474V163H71.1139V161.827H70.9747C70.8885 161.966 70.7659 162.142 70.6068 162.354C70.4477 162.562 70.2207 162.75 69.9257 162.915C69.6307 163.078 69.238 163.159 68.7474 163.159ZM68.9065 162.105C69.3772 162.105 69.7749 161.982 70.0997 161.737C70.4245 161.489 70.6714 161.146 70.8405 160.708C71.0095 160.267 71.094 159.759 71.094 159.182C71.094 158.612 71.0112 158.113 70.8454 157.685C70.6797 157.254 70.4345 156.92 70.1096 156.681C69.7848 156.439 69.3838 156.318 68.9065 156.318C68.4094 156.318 67.9951 156.446 67.6636 156.701C67.3355 156.953 67.0886 157.296 66.9229 157.73C66.7604 158.161 66.6792 158.645 66.6792 159.182C66.6792 159.725 66.7621 160.219 66.9278 160.663C67.0969 161.104 67.3454 161.455 67.6736 161.717C68.005 161.976 68.416 162.105 68.9065 162.105ZM83.9058 157.074L82.8518 157.372C82.7855 157.196 82.6878 157.026 82.5585 156.86C82.4326 156.691 82.2602 156.552 82.0415 156.442C81.8227 156.333 81.5426 156.278 81.2013 156.278C80.7339 156.278 80.3445 156.386 80.0329 156.602C79.7247 156.814 79.5706 157.084 79.5706 157.412C79.5706 157.704 79.6766 157.934 79.8888 158.103C80.1009 158.272 80.4323 158.413 80.8831 158.526L82.0166 158.804C82.6994 158.97 83.2081 159.223 83.5429 159.565C83.8776 159.903 84.045 160.339 84.045 160.872C84.045 161.31 83.9191 161.701 83.6672 162.045C83.4186 162.39 83.0706 162.662 82.6231 162.861C82.1757 163.06 81.6553 163.159 81.0621 163.159C80.2832 163.159 79.6385 162.99 79.1281 162.652C78.6177 162.314 78.2945 161.82 78.1586 161.17L79.2723 160.892C79.3783 161.303 79.5789 161.611 79.8738 161.817C80.1721 162.022 80.5616 162.125 81.0422 162.125C81.589 162.125 82.0232 162.009 82.3447 161.777C82.6695 161.542 82.8319 161.26 82.8319 160.932C82.8319 160.667 82.7391 160.445 82.5535 160.266C82.3679 160.083 82.0829 159.947 81.6984 159.858L80.4257 159.56C79.7264 159.394 79.2126 159.137 78.8845 158.789C78.5597 158.438 78.3973 157.999 78.3973 157.472C78.3973 157.041 78.5183 156.66 78.7602 156.328C79.0055 155.997 79.3386 155.737 79.7595 155.548C80.1837 155.359 80.6643 155.264 81.2013 155.264C81.9569 155.264 82.5502 155.43 82.9811 155.761C83.4153 156.093 83.7235 156.53 83.9058 157.074ZM89.1322 155.364V156.358H85.1748V155.364H89.1322ZM86.3282 153.534H87.5015V160.812C87.5015 161.144 87.5496 161.393 87.6457 161.558C87.7451 161.721 87.8711 161.83 88.0235 161.886C88.1793 161.939 88.3434 161.966 88.5157 161.966C88.645 161.966 88.751 161.959 88.8339 161.946C88.9168 161.929 88.983 161.916 89.0328 161.906L89.2714 162.96C89.1919 162.99 89.0808 163.02 88.9383 163.05C88.7958 163.083 88.6151 163.099 88.3964 163.099C88.065 163.099 87.7401 163.028 87.422 162.886C87.1071 162.743 86.8453 162.526 86.6365 162.234C86.431 161.943 86.3282 161.575 86.3282 161.131V153.534ZM94.0168 163.159C93.281 163.159 92.6463 162.997 92.1127 162.672C91.5824 162.344 91.173 161.886 90.8847 161.3C90.5996 160.71 90.4571 160.024 90.4571 159.241C90.4571 158.459 90.5996 157.77 90.8847 157.173C91.173 156.573 91.5741 156.106 92.0878 155.771C92.6048 155.433 93.2081 155.264 93.8975 155.264C94.2952 155.264 94.6879 155.33 95.0757 155.463C95.4635 155.596 95.8165 155.811 96.1347 156.109C96.4529 156.404 96.7064 156.795 96.8953 157.283C97.0843 157.77 97.1787 158.37 97.1787 159.082V159.58H91.2923V158.565H95.9855C95.9855 158.134 95.8994 157.75 95.727 157.412C95.558 157.074 95.316 156.807 95.0012 156.612C94.6896 156.416 94.3217 156.318 93.8975 156.318C93.4301 156.318 93.0258 156.434 92.6844 156.666C92.3463 156.895 92.0861 157.193 91.9039 157.561C91.7216 157.929 91.6304 158.323 91.6304 158.744V159.42C91.6304 159.997 91.7298 160.486 91.9287 160.887C92.1309 161.285 92.411 161.588 92.7689 161.797C93.1269 162.002 93.5428 162.105 94.0168 162.105C94.325 162.105 94.6034 162.062 94.852 161.976C95.1039 161.886 95.321 161.754 95.5033 161.578C95.6856 161.399 95.8264 161.177 95.9259 160.912L97.0594 161.23C96.9401 161.615 96.7396 161.953 96.4578 162.244C96.1761 162.533 95.8281 162.758 95.4138 162.92C94.9995 163.08 94.5338 163.159 94.0168 163.159ZM101.211 163.179C100.727 163.179 100.288 163.088 99.8932 162.906C99.4988 162.72 99.1856 162.453 98.9536 162.105C98.7216 161.754 98.6056 161.33 98.6056 160.832C98.6056 160.395 98.6917 160.04 98.8641 159.768C99.0364 159.493 99.2668 159.278 99.5551 159.122C99.8435 158.966 100.162 158.85 100.51 158.774C100.861 158.695 101.214 158.632 101.569 158.585C102.033 158.526 102.409 158.481 102.697 158.451C102.989 158.418 103.201 158.363 103.334 158.287C103.469 158.211 103.537 158.078 103.537 157.889V157.849C103.537 157.359 103.403 156.978 103.135 156.706C102.87 156.434 102.467 156.298 101.927 156.298C101.366 156.298 100.927 156.421 100.609 156.666C100.291 156.911 100.067 157.173 99.9379 157.452L98.8243 157.054C99.0232 156.59 99.2883 156.229 99.6198 155.97C99.9545 155.708 100.319 155.526 100.714 155.423C101.111 155.317 101.502 155.264 101.887 155.264C102.132 155.264 102.414 155.294 102.732 155.354C103.053 155.41 103.363 155.528 103.662 155.707C103.963 155.886 104.214 156.156 104.412 156.517C104.611 156.878 104.711 157.362 104.711 157.969V163H103.537V161.966H103.478C103.398 162.132 103.266 162.309 103.08 162.498C102.894 162.687 102.647 162.848 102.339 162.98C102.031 163.113 101.655 163.179 101.211 163.179ZM101.39 162.125C101.854 162.125 102.245 162.034 102.563 161.852C102.884 161.669 103.126 161.434 103.289 161.146C103.455 160.857 103.537 160.554 103.537 160.236V159.162C103.488 159.222 103.378 159.276 103.209 159.326C103.044 159.372 102.851 159.414 102.633 159.45C102.417 159.483 102.207 159.513 102.001 159.54C101.799 159.563 101.635 159.583 101.509 159.599C101.204 159.639 100.919 159.704 100.654 159.793C100.392 159.879 100.18 160.01 100.017 160.186C99.8584 160.358 99.7789 160.594 99.7789 160.892C99.7789 161.3 99.9297 161.608 100.231 161.817C100.536 162.022 100.922 162.125 101.39 162.125ZM106.852 163V155.364H107.986V156.557H108.085C108.244 156.149 108.501 155.833 108.856 155.607C109.21 155.379 109.636 155.264 110.133 155.264C110.637 155.264 111.056 155.379 111.391 155.607C111.729 155.833 111.993 156.149 112.182 156.557H112.261C112.457 156.162 112.75 155.849 113.141 155.617C113.532 155.382 114.001 155.264 114.548 155.264C115.231 155.264 115.789 155.478 116.224 155.906C116.658 156.33 116.875 156.991 116.875 157.889V163H115.702V157.889C115.702 157.326 115.547 156.923 115.239 156.681C114.931 156.439 114.568 156.318 114.15 156.318C113.614 156.318 113.198 156.481 112.903 156.805C112.608 157.127 112.46 157.535 112.46 158.028V163H111.267V157.77C111.267 157.336 111.126 156.986 110.844 156.721C110.563 156.452 110.2 156.318 109.756 156.318C109.451 156.318 109.166 156.399 108.9 156.562C108.639 156.724 108.427 156.95 108.264 157.238C108.105 157.523 108.025 157.853 108.025 158.227V163H106.852ZM14.7926 180V172.364H15.9659V180H14.7926ZM15.3892 171.091C15.1605 171.091 14.9633 171.013 14.7976 170.857C14.6352 170.701 14.554 170.514 14.554 170.295C14.554 170.077 14.6352 169.889 14.7976 169.734C14.9633 169.578 15.1605 169.5 15.3892 169.5C15.6179 169.5 15.8134 169.578 15.9759 169.734C16.1416 169.889 16.2244 170.077 16.2244 170.295C16.2244 170.514 16.1416 170.701 15.9759 170.857C15.8134 171.013 15.6179 171.091 15.3892 171.091ZM19.2882 175.406V180H18.1149V172.364H19.2484V173.557H19.3478C19.5268 173.169 19.7986 172.857 20.1632 172.622C20.5278 172.384 20.9984 172.264 21.5751 172.264C22.0922 172.264 22.5446 172.37 22.9324 172.582C23.3201 172.791 23.6217 173.109 23.8372 173.537C24.0526 173.961 24.1603 174.498 24.1603 175.148V180H22.987V175.227C22.987 174.627 22.8313 174.16 22.5197 173.825C22.2082 173.487 21.7806 173.318 21.237 173.318C20.8625 173.318 20.5278 173.399 20.2328 173.562C19.9411 173.724 19.7108 173.961 19.5417 174.273C19.3727 174.584 19.2882 174.962 19.2882 175.406ZM27.4776 169.818V180H26.3043V169.818H27.4776ZM32.8283 180.159C32.0925 180.159 31.4578 179.997 30.9242 179.672C30.3939 179.344 29.9846 178.886 29.6962 178.3C29.4112 177.71 29.2686 177.024 29.2686 176.241C29.2686 175.459 29.4112 174.77 29.6962 174.173C29.9846 173.573 30.3856 173.106 30.8993 172.771C31.4164 172.433 32.0196 172.264 32.709 172.264C33.1067 172.264 33.4995 172.33 33.8873 172.463C34.275 172.596 34.628 172.811 34.9462 173.109C35.2644 173.404 35.5179 173.795 35.7069 174.283C35.8958 174.77 35.9902 175.37 35.9902 176.082V176.58H30.1039V175.565H34.7971C34.7971 175.134 34.7109 174.75 34.5385 174.412C34.3695 174.074 34.1275 173.807 33.8127 173.612C33.5011 173.416 33.1332 173.318 32.709 173.318C32.2417 173.318 31.8373 173.434 31.4959 173.666C31.1578 173.895 30.8977 174.193 30.7154 174.561C30.5331 174.929 30.4419 175.323 30.4419 175.744V176.42C30.4419 176.997 30.5414 177.486 30.7402 177.887C30.9424 178.285 31.2225 178.588 31.5804 178.797C31.9384 179.002 32.3543 179.105 32.8283 179.105C33.1365 179.105 33.415 179.062 33.6635 178.976C33.9154 178.886 34.1325 178.754 34.3148 178.578C34.4971 178.399 34.638 178.177 34.7374 177.912L35.8709 178.23C35.7516 178.615 35.5511 178.953 35.2694 179.244C34.9876 179.533 34.6396 179.758 34.2253 179.92C33.811 180.08 33.3453 180.159 32.8283 180.159ZM41.0961 172.364V173.358H37.1387V172.364H41.0961ZM38.2921 170.534H39.4654V177.812C39.4654 178.144 39.5134 178.393 39.6096 178.558C39.709 178.721 39.8349 178.83 39.9874 178.886C40.1432 178.939 40.3072 178.966 40.4796 178.966C40.6088 178.966 40.7149 178.959 40.7978 178.946C40.8806 178.929 40.9469 178.916 40.9966 178.906L41.2353 179.96C41.1557 179.99 41.0447 180.02 40.9022 180.05C40.7596 180.083 40.579 180.099 40.3603 180.099C40.0288 180.099 39.704 180.028 39.3858 179.886C39.071 179.743 38.8091 179.526 38.6003 179.234C38.3948 178.943 38.2921 178.575 38.2921 178.131V170.534ZM49.0456 180.179C48.5617 180.179 48.1226 180.088 47.7282 179.906C47.3337 179.72 47.0205 179.453 46.7885 179.105C46.5565 178.754 46.4405 178.33 46.4405 177.832C46.4405 177.395 46.5267 177.04 46.699 176.768C46.8714 176.493 47.1017 176.278 47.3901 176.122C47.6784 175.966 47.9966 175.85 48.3446 175.774C48.696 175.695 49.0489 175.632 49.4036 175.585C49.8676 175.526 50.2438 175.481 50.5321 175.451C50.8238 175.418 51.0359 175.363 51.1685 175.287C51.3044 175.211 51.3723 175.078 51.3723 174.889V174.849C51.3723 174.359 51.2381 173.978 50.9696 173.706C50.7045 173.434 50.3018 173.298 49.7615 173.298C49.2014 173.298 48.7623 173.421 48.4441 173.666C48.1259 173.911 47.9022 174.173 47.7729 174.452L46.6593 174.054C46.8581 173.59 47.1233 173.229 47.4547 172.97C47.7895 172.708 48.1541 172.526 48.5485 172.423C48.9462 172.317 49.3373 172.264 49.7218 172.264C49.967 172.264 50.2488 172.294 50.5669 172.354C50.8884 172.41 51.1983 172.528 51.4966 172.707C51.7982 172.886 52.0485 173.156 52.2473 173.517C52.4462 173.878 52.5456 174.362 52.5456 174.969V180H51.3723V178.966H51.3127C51.2331 179.132 51.1006 179.309 50.915 179.498C50.7293 179.687 50.4824 179.848 50.1742 179.98C49.8659 180.113 49.4898 180.179 49.0456 180.179ZM49.2246 179.125C49.6886 179.125 50.0797 179.034 50.3979 178.852C50.7194 178.669 50.9614 178.434 51.1238 178.146C51.2895 177.857 51.3723 177.554 51.3723 177.236V176.162C51.3226 176.222 51.2132 176.276 51.0442 176.326C50.8785 176.372 50.6863 176.414 50.4675 176.45C50.2521 176.483 50.0416 176.513 49.8361 176.54C49.6339 176.563 49.4699 176.583 49.3439 176.599C49.039 176.639 48.754 176.704 48.4888 176.793C48.227 176.879 48.0149 177.01 47.8525 177.186C47.6934 177.358 47.6138 177.594 47.6138 177.892C47.6138 178.3 47.7646 178.608 48.0662 178.817C48.3712 179.022 48.7573 179.125 49.2246 179.125ZM58.0082 172.364V173.358H54.0508V172.364H58.0082ZM55.2042 170.534H56.3775V177.812C56.3775 178.144 56.4255 178.393 56.5217 178.558C56.6211 178.721 56.747 178.83 56.8995 178.886C57.0553 178.939 57.2193 178.966 57.3917 178.966C57.521 178.966 57.627 178.959 57.7099 178.946C57.7927 178.929 57.859 178.916 57.9087 178.906L58.1474 179.96C58.0678 179.99 57.9568 180.02 57.8143 180.05C57.6718 180.083 57.4911 180.099 57.2724 180.099C56.9409 180.099 56.6161 180.028 56.2979 179.886C55.9831 179.743 55.7212 179.526 55.5124 179.234C55.3069 178.943 55.2042 178.575 55.2042 178.131V170.534ZM67.2702 169.818V180H66.0373V171.111H65.9776L63.4918 172.761V171.509L66.0373 169.818H67.2702ZM73.5195 180.139C72.7705 180.139 72.1325 179.935 71.6055 179.528C71.0785 179.117 70.6758 178.522 70.3974 177.743C70.119 176.961 69.9798 176.016 69.9798 174.909C69.9798 173.809 70.119 172.869 70.3974 172.09C70.6791 171.308 71.0835 170.711 71.6104 170.3C72.1407 169.886 72.7771 169.679 73.5195 169.679C74.262 169.679 74.8967 169.886 75.4237 170.3C75.954 170.711 76.3583 171.308 76.6367 172.09C76.9184 172.869 77.0593 173.809 77.0593 174.909C77.0593 176.016 76.9201 176.961 76.6417 177.743C76.3633 178.522 75.9606 179.117 75.4336 179.528C74.9066 179.935 74.2686 180.139 73.5195 180.139ZM73.5195 179.045C74.262 179.045 74.8387 178.687 75.2496 177.972C75.6606 177.256 75.8661 176.235 75.8661 174.909C75.8661 174.027 75.7717 173.277 75.5827 172.657C75.3971 172.037 75.1287 171.565 74.7773 171.24C74.4293 170.915 74.0101 170.753 73.5195 170.753C72.7837 170.753 72.2087 171.116 71.7944 171.842C71.3801 172.564 71.1729 173.587 71.1729 174.909C71.1729 175.791 71.2657 176.54 71.4513 177.156C71.637 177.773 71.9038 178.242 72.2518 178.563C72.6031 178.885 73.0257 179.045 73.5195 179.045ZM82.2695 180.139C81.5205 180.139 80.8825 179.935 80.3555 179.528C79.8285 179.117 79.4258 178.522 79.1474 177.743C78.869 176.961 78.7298 176.016 78.7298 174.909C78.7298 173.809 78.869 172.869 79.1474 172.09C79.4291 171.308 79.8335 170.711 80.3604 170.3C80.8907 169.886 81.5271 169.679 82.2695 169.679C83.012 169.679 83.6467 169.886 84.1737 170.3C84.704 170.711 85.1083 171.308 85.3867 172.09C85.6684 172.869 85.8093 173.809 85.8093 174.909C85.8093 176.016 85.6701 176.961 85.3917 177.743C85.1133 178.522 84.7106 179.117 84.1836 179.528C83.6566 179.935 83.0186 180.139 82.2695 180.139ZM82.2695 179.045C83.012 179.045 83.5887 178.687 83.9996 177.972C84.4106 177.256 84.6161 176.235 84.6161 174.909C84.6161 174.027 84.5217 173.277 84.3327 172.657C84.1471 172.037 83.8787 171.565 83.5273 171.24C83.1793 170.915 82.7601 170.753 82.2695 170.753C81.5337 170.753 80.9587 171.116 80.5444 171.842C80.1301 172.564 79.9229 173.587 79.9229 174.909C79.9229 175.791 80.0157 176.54 80.2013 177.156C80.387 177.773 80.6538 178.242 81.0018 178.563C81.3531 178.885 81.7757 179.045 82.2695 179.045ZM91.6559 182.864V172.364H92.7894V173.577H92.9286C93.0148 173.444 93.1341 173.275 93.2866 173.07C93.4424 172.861 93.6644 172.675 93.9528 172.513C94.2444 172.347 94.6388 172.264 95.136 172.264C95.779 172.264 96.3458 172.425 96.8363 172.746C97.3268 173.068 97.7096 173.524 97.9847 174.114C98.2598 174.704 98.3974 175.4 98.3974 176.202C98.3974 177.01 98.2598 177.711 97.9847 178.305C97.7096 178.895 97.3285 179.352 96.8413 179.677C96.354 179.998 95.7923 180.159 95.1559 180.159C94.6654 180.159 94.2726 180.078 93.9776 179.915C93.6826 179.75 93.4556 179.562 93.2965 179.354C93.1374 179.142 93.0148 178.966 92.9286 178.827H92.8292V182.864H91.6559ZM92.8093 176.182C92.8093 176.759 92.8938 177.267 93.0629 177.708C93.2319 178.146 93.4788 178.489 93.8036 178.737C94.1284 178.982 94.5262 179.105 94.9968 179.105C95.4873 179.105 95.8967 178.976 96.2248 178.717C96.5562 178.455 96.8048 178.104 96.9705 177.663C97.1396 177.219 97.2241 176.725 97.2241 176.182C97.2241 175.645 97.1412 175.161 96.9755 174.73C96.8131 174.296 96.5662 173.953 96.2347 173.701C95.9066 173.446 95.494 173.318 94.9968 173.318C94.5195 173.318 94.1185 173.439 93.7937 173.681C93.4689 173.92 93.2236 174.254 93.0579 174.685C92.8922 175.113 92.8093 175.612 92.8093 176.182ZM105.596 174.074L104.542 174.372C104.476 174.196 104.378 174.026 104.249 173.86C104.123 173.691 103.951 173.552 103.732 173.442C103.513 173.333 103.233 173.278 102.892 173.278C102.424 173.278 102.035 173.386 101.723 173.602C101.415 173.814 101.261 174.084 101.261 174.412C101.261 174.704 101.367 174.934 101.579 175.103C101.791 175.272 102.123 175.413 102.574 175.526L103.707 175.804C104.39 175.97 104.899 176.223 105.233 176.565C105.568 176.903 105.735 177.339 105.735 177.872C105.735 178.31 105.609 178.701 105.358 179.045C105.109 179.39 104.761 179.662 104.314 179.861C103.866 180.06 103.346 180.159 102.752 180.159C101.974 180.159 101.329 179.99 100.819 179.652C100.308 179.314 99.985 178.82 99.8491 178.17L100.963 177.892C101.069 178.303 101.269 178.611 101.564 178.817C101.863 179.022 102.252 179.125 102.733 179.125C103.279 179.125 103.714 179.009 104.035 178.777C104.36 178.542 104.522 178.26 104.522 177.932C104.522 177.667 104.43 177.445 104.244 177.266C104.058 177.083 103.773 176.947 103.389 176.858L102.116 176.56C101.417 176.394 100.903 176.137 100.575 175.789C100.25 175.438 100.088 174.999 100.088 174.472C100.088 174.041 100.209 173.66 100.451 173.328C100.696 172.997 101.029 172.737 101.45 172.548C101.874 172.359 102.355 172.264 102.892 172.264C103.647 172.264 104.241 172.43 104.672 172.761C105.106 173.093 105.414 173.53 105.596 174.074ZM107.502 180V172.364H108.675V180H107.502ZM108.098 171.091C107.869 171.091 107.672 171.013 107.507 170.857C107.344 170.701 107.263 170.514 107.263 170.295C107.263 170.077 107.344 169.889 107.507 169.734C107.672 169.578 107.869 169.5 108.098 169.5C108.327 169.5 108.522 169.578 108.685 169.734C108.851 169.889 108.933 170.077 108.933 170.295C108.933 170.514 108.851 170.701 108.685 170.857C108.522 171.013 108.327 171.091 108.098 171.091ZM113.906 183.023C113.339 183.023 112.852 182.95 112.445 182.804C112.037 182.661 111.697 182.473 111.425 182.237C111.157 182.005 110.943 181.757 110.784 181.491L111.719 180.835C111.825 180.974 111.959 181.134 112.121 181.312C112.284 181.495 112.506 181.652 112.788 181.785C113.073 181.921 113.446 181.989 113.906 181.989C114.523 181.989 115.031 181.839 115.433 181.541C115.834 181.243 116.034 180.776 116.034 180.139V178.588H115.935C115.848 178.727 115.726 178.9 115.567 179.105C115.411 179.307 115.186 179.488 114.891 179.647C114.599 179.803 114.205 179.881 113.707 179.881C113.091 179.881 112.537 179.735 112.047 179.443C111.56 179.152 111.174 178.727 110.888 178.17C110.607 177.614 110.466 176.937 110.466 176.142C110.466 175.36 110.603 174.679 110.879 174.099C111.154 173.515 111.536 173.065 112.027 172.746C112.518 172.425 113.084 172.264 113.727 172.264C114.224 172.264 114.619 172.347 114.911 172.513C115.205 172.675 115.431 172.861 115.587 173.07C115.746 173.275 115.868 173.444 115.955 173.577H116.074V172.364H117.207V180.219C117.207 180.875 117.058 181.409 116.76 181.82C116.465 182.234 116.067 182.537 115.567 182.729C115.07 182.925 114.516 183.023 113.906 183.023ZM113.866 178.827C114.337 178.827 114.735 178.719 115.06 178.504C115.384 178.288 115.631 177.978 115.8 177.574C115.969 177.17 116.054 176.686 116.054 176.122C116.054 175.572 115.971 175.086 115.805 174.665C115.64 174.245 115.394 173.915 115.07 173.676C114.745 173.437 114.344 173.318 113.866 173.318C113.369 173.318 112.955 173.444 112.624 173.696C112.295 173.948 112.049 174.286 111.883 174.71C111.72 175.134 111.639 175.605 111.639 176.122C111.639 176.652 111.722 177.121 111.888 177.529C112.057 177.933 112.305 178.252 112.634 178.484C112.965 178.712 113.376 178.827 113.866 178.827Z\" fill=\"black\"/>\n<path id=\"steam trap\" d=\"M232.895 565.074L231.841 565.372C231.775 565.196 231.677 565.026 231.548 564.86C231.422 564.691 231.249 564.552 231.031 564.442C230.812 564.333 230.532 564.278 230.191 564.278C229.723 564.278 229.334 564.386 229.022 564.602C228.714 564.814 228.56 565.084 228.56 565.412C228.56 565.704 228.666 565.934 228.878 566.103C229.09 566.272 229.422 566.413 229.872 566.526L231.006 566.804C231.689 566.97 232.197 567.223 232.532 567.565C232.867 567.903 233.034 568.339 233.034 568.872C233.034 569.31 232.908 569.701 232.656 570.045C232.408 570.39 232.06 570.662 231.612 570.861C231.165 571.06 230.645 571.159 230.051 571.159C229.272 571.159 228.628 570.99 228.117 570.652C227.607 570.314 227.284 569.82 227.148 569.17L228.262 568.892C228.368 569.303 228.568 569.611 228.863 569.817C229.161 570.022 229.551 570.125 230.031 570.125C230.578 570.125 231.012 570.009 231.334 569.777C231.659 569.542 231.821 569.26 231.821 568.932C231.821 568.667 231.728 568.445 231.543 568.266C231.357 568.083 231.072 567.947 230.688 567.858L229.415 567.56C228.716 567.394 228.202 567.137 227.874 566.789C227.549 566.438 227.387 565.999 227.387 565.472C227.387 565.041 227.508 564.66 227.749 564.328C227.995 563.997 228.328 563.737 228.749 563.548C229.173 563.359 229.654 563.264 230.191 563.264C230.946 563.264 231.539 563.43 231.97 563.761C232.405 564.093 232.713 564.53 232.895 565.074ZM238.121 563.364V564.358H234.164V563.364H238.121ZM235.317 561.534H236.491V568.812C236.491 569.144 236.539 569.393 236.635 569.558C236.734 569.721 236.86 569.83 237.013 569.886C237.169 569.939 237.333 569.966 237.505 569.966C237.634 569.966 237.74 569.959 237.823 569.946C237.906 569.929 237.972 569.916 238.022 569.906L238.261 570.96C238.181 570.99 238.07 571.02 237.928 571.05C237.785 571.083 237.604 571.099 237.386 571.099C237.054 571.099 236.729 571.028 236.411 570.886C236.096 570.743 235.835 570.526 235.626 570.234C235.42 569.943 235.317 569.575 235.317 569.131V561.534ZM243.006 571.159C242.27 571.159 241.636 570.997 241.102 570.672C240.572 570.344 240.162 569.886 239.874 569.3C239.589 568.71 239.446 568.024 239.446 567.241C239.446 566.459 239.589 565.77 239.874 565.173C240.162 564.573 240.563 564.106 241.077 563.771C241.594 563.433 242.197 563.264 242.887 563.264C243.284 563.264 243.677 563.33 244.065 563.463C244.453 563.596 244.806 563.811 245.124 564.109C245.442 564.404 245.696 564.795 245.885 565.283C246.074 565.77 246.168 566.37 246.168 567.082V567.58H240.282V566.565H244.975C244.975 566.134 244.889 565.75 244.716 565.412C244.547 565.074 244.305 564.807 243.99 564.612C243.679 564.416 243.311 564.318 242.887 564.318C242.419 564.318 242.015 564.434 241.674 564.666C241.336 564.895 241.075 565.193 240.893 565.561C240.711 565.929 240.62 566.323 240.62 566.744V567.42C240.62 567.997 240.719 568.486 240.918 568.887C241.12 569.285 241.4 569.588 241.758 569.797C242.116 570.002 242.532 570.105 243.006 570.105C243.314 570.105 243.593 570.062 243.841 569.976C244.093 569.886 244.31 569.754 244.493 569.578C244.675 569.399 244.816 569.177 244.915 568.912L246.049 569.23C245.929 569.615 245.729 569.953 245.447 570.244C245.165 570.533 244.817 570.758 244.403 570.92C243.989 571.08 243.523 571.159 243.006 571.159ZM250.2 571.179C249.716 571.179 249.277 571.088 248.882 570.906C248.488 570.72 248.175 570.453 247.943 570.105C247.711 569.754 247.595 569.33 247.595 568.832C247.595 568.395 247.681 568.04 247.853 567.768C248.026 567.493 248.256 567.278 248.544 567.122C248.833 566.966 249.151 566.85 249.499 566.774C249.85 566.695 250.203 566.632 250.558 566.585C251.022 566.526 251.398 566.481 251.686 566.451C251.978 566.418 252.19 566.363 252.323 566.287C252.459 566.211 252.527 566.078 252.527 565.889V565.849C252.527 565.359 252.392 564.978 252.124 564.706C251.859 564.434 251.456 564.298 250.916 564.298C250.356 564.298 249.917 564.421 249.598 564.666C249.28 564.911 249.056 565.173 248.927 565.452L247.814 565.054C248.012 564.59 248.278 564.229 248.609 563.97C248.944 563.708 249.308 563.526 249.703 563.423C250.1 563.317 250.492 563.264 250.876 563.264C251.121 563.264 251.403 563.294 251.721 563.354C252.043 563.41 252.353 563.528 252.651 563.707C252.953 563.886 253.203 564.156 253.402 564.517C253.6 564.878 253.7 565.362 253.7 565.969V571H252.527V569.966H252.467C252.387 570.132 252.255 570.309 252.069 570.498C251.884 570.687 251.637 570.848 251.328 570.98C251.02 571.113 250.644 571.179 250.2 571.179ZM250.379 570.125C250.843 570.125 251.234 570.034 251.552 569.852C251.874 569.669 252.116 569.434 252.278 569.146C252.444 568.857 252.527 568.554 252.527 568.236V567.162C252.477 567.222 252.368 567.276 252.199 567.326C252.033 567.372 251.841 567.414 251.622 567.45C251.406 567.483 251.196 567.513 250.99 567.54C250.788 567.563 250.624 567.583 250.498 567.599C250.193 567.639 249.908 567.704 249.643 567.793C249.381 567.879 249.169 568.01 249.007 568.186C248.848 568.358 248.768 568.594 248.768 568.892C248.768 569.3 248.919 569.608 249.221 569.817C249.525 570.022 249.912 570.125 250.379 570.125ZM255.841 571V563.364H256.975V564.557H257.074C257.233 564.149 257.49 563.833 257.845 563.607C258.2 563.379 258.626 563.264 259.123 563.264C259.626 563.264 260.046 563.379 260.381 563.607C260.719 563.833 260.982 564.149 261.171 564.557H261.251C261.446 564.162 261.739 563.849 262.131 563.617C262.522 563.382 262.991 563.264 263.537 563.264C264.22 563.264 264.779 563.478 265.213 563.906C265.647 564.33 265.864 564.991 265.864 565.889V571H264.691V565.889C264.691 565.326 264.537 564.923 264.229 564.681C263.92 564.439 263.557 564.318 263.14 564.318C262.603 564.318 262.187 564.481 261.892 564.805C261.597 565.127 261.449 565.535 261.449 566.028V571H260.256V565.77C260.256 565.336 260.115 564.986 259.834 564.721C259.552 564.452 259.189 564.318 258.745 564.318C258.44 564.318 258.155 564.399 257.89 564.562C257.628 564.724 257.416 564.95 257.253 565.238C257.094 565.523 257.015 565.853 257.015 566.227V571H255.841ZM275.268 563.364V564.358H271.311V563.364H275.268ZM272.464 561.534H273.637V568.812C273.637 569.144 273.685 569.393 273.781 569.558C273.881 569.721 274.007 569.83 274.159 569.886C274.315 569.939 274.479 569.966 274.651 569.966C274.781 569.966 274.887 569.959 274.97 569.946C275.052 569.929 275.119 569.916 275.169 569.906L275.407 570.96C275.328 570.99 275.217 571.02 275.074 571.05C274.932 571.083 274.751 571.099 274.532 571.099C274.201 571.099 273.876 571.028 273.558 570.886C273.243 570.743 272.981 570.526 272.772 570.234C272.567 569.943 272.464 569.575 272.464 569.131V561.534ZM277.033 571V563.364H278.166V564.517H278.246C278.385 564.139 278.637 563.833 279.002 563.597C279.366 563.362 279.777 563.244 280.235 563.244C280.321 563.244 280.428 563.246 280.558 563.249C280.687 563.253 280.785 563.258 280.851 563.264V564.457C280.811 564.447 280.72 564.433 280.578 564.413C280.438 564.389 280.291 564.378 280.135 564.378C279.764 564.378 279.432 564.456 279.141 564.612C278.852 564.764 278.624 564.976 278.455 565.248C278.289 565.516 278.206 565.823 278.206 566.168V571H277.033ZM284.489 571.179C284.005 571.179 283.566 571.088 283.172 570.906C282.777 570.72 282.464 570.453 282.232 570.105C282 569.754 281.884 569.33 281.884 568.832C281.884 568.395 281.97 568.04 282.142 567.768C282.315 567.493 282.545 567.278 282.833 567.122C283.122 566.966 283.44 566.85 283.788 566.774C284.139 566.695 284.492 566.632 284.847 566.585C285.311 566.526 285.687 566.481 285.975 566.451C286.267 566.418 286.479 566.363 286.612 566.287C286.748 566.211 286.816 566.078 286.816 565.889V565.849C286.816 565.359 286.681 564.978 286.413 564.706C286.148 564.434 285.745 564.298 285.205 564.298C284.645 564.298 284.206 564.421 283.887 564.666C283.569 564.911 283.346 565.173 283.216 565.452L282.103 565.054C282.301 564.59 282.567 564.229 282.898 563.97C283.233 563.708 283.597 563.526 283.992 563.423C284.39 563.317 284.781 563.264 285.165 563.264C285.41 563.264 285.692 563.294 286.01 563.354C286.332 563.41 286.642 563.528 286.94 563.707C287.242 563.886 287.492 564.156 287.691 564.517C287.89 564.878 287.989 565.362 287.989 565.969V571H286.816V569.966H286.756C286.676 570.132 286.544 570.309 286.358 570.498C286.173 570.687 285.926 570.848 285.618 570.98C285.309 571.113 284.933 571.179 284.489 571.179ZM284.668 570.125C285.132 570.125 285.523 570.034 285.841 569.852C286.163 569.669 286.405 569.434 286.567 569.146C286.733 568.857 286.816 568.554 286.816 568.236V567.162C286.766 567.222 286.657 567.276 286.488 567.326C286.322 567.372 286.13 567.414 285.911 567.45C285.695 567.483 285.485 567.513 285.279 567.54C285.077 567.563 284.913 567.583 284.787 567.599C284.482 567.639 284.197 567.704 283.932 567.793C283.67 567.879 283.458 568.01 283.296 568.186C283.137 568.358 283.057 568.594 283.057 568.892C283.057 569.3 283.208 569.608 283.51 569.817C283.815 570.022 284.201 570.125 284.668 570.125ZM290.131 573.864V563.364H291.264V564.577H291.403C291.489 564.444 291.609 564.275 291.761 564.07C291.917 563.861 292.139 563.675 292.427 563.513C292.719 563.347 293.113 563.264 293.611 563.264C294.254 563.264 294.82 563.425 295.311 563.746C295.801 564.068 296.184 564.524 296.459 565.114C296.734 565.704 296.872 566.4 296.872 567.202C296.872 568.01 296.734 568.711 296.459 569.305C296.184 569.895 295.803 570.352 295.316 570.677C294.829 570.998 294.267 571.159 293.631 571.159C293.14 571.159 292.747 571.078 292.452 570.915C292.157 570.75 291.93 570.562 291.771 570.354C291.612 570.142 291.489 569.966 291.403 569.827H291.304V573.864H290.131ZM291.284 567.182C291.284 567.759 291.368 568.267 291.537 568.708C291.706 569.146 291.953 569.489 292.278 569.737C292.603 569.982 293.001 570.105 293.471 570.105C293.962 570.105 294.371 569.976 294.699 569.717C295.031 569.455 295.279 569.104 295.445 568.663C295.614 568.219 295.699 567.725 295.699 567.182C295.699 566.645 295.616 566.161 295.45 565.73C295.288 565.296 295.041 564.953 294.709 564.701C294.381 564.446 293.969 564.318 293.471 564.318C292.994 564.318 292.593 564.439 292.268 564.681C291.943 564.92 291.698 565.254 291.532 565.685C291.367 566.113 291.284 566.612 291.284 567.182Z\" fill=\"black\"/>\n<path id=\"cold water inlet from supply\" d=\"M425.328 687.159C424.612 687.159 423.995 686.99 423.478 686.652C422.961 686.314 422.563 685.848 422.285 685.255C422.006 684.662 421.867 683.984 421.867 683.222C421.867 682.446 422.01 681.762 422.295 681.168C422.583 680.572 422.984 680.106 423.498 679.771C424.015 679.433 424.618 679.264 425.308 679.264C425.845 679.264 426.328 679.364 426.759 679.562C427.19 679.761 427.543 680.04 427.818 680.398C428.093 680.756 428.264 681.173 428.33 681.651H427.157C427.068 681.303 426.869 680.994 426.56 680.726C426.256 680.454 425.845 680.318 425.328 680.318C424.87 680.318 424.469 680.437 424.124 680.676C423.783 680.911 423.516 681.245 423.324 681.675C423.135 682.103 423.041 682.605 423.041 683.182C423.041 683.772 423.133 684.286 423.319 684.723C423.508 685.161 423.773 685.5 424.114 685.742C424.459 685.984 424.863 686.105 425.328 686.105C425.632 686.105 425.909 686.052 426.158 685.946C426.406 685.84 426.617 685.688 426.789 685.489C426.961 685.29 427.084 685.051 427.157 684.773H428.33C428.264 685.223 428.1 685.629 427.838 685.991C427.58 686.349 427.237 686.634 426.809 686.846C426.385 687.055 425.891 687.159 425.328 687.159ZM433.148 687.159C432.458 687.159 431.854 686.995 431.333 686.667C430.816 686.339 430.412 685.88 430.12 685.29C429.832 684.7 429.688 684.01 429.688 683.222C429.688 682.426 429.832 681.732 430.12 681.138C430.412 680.545 430.816 680.085 431.333 679.756C431.854 679.428 432.458 679.264 433.148 679.264C433.837 679.264 434.44 679.428 434.957 679.756C435.478 680.085 435.882 680.545 436.171 681.138C436.462 681.732 436.608 682.426 436.608 683.222C436.608 684.01 436.462 684.7 436.171 685.29C435.882 685.88 435.478 686.339 434.957 686.667C434.44 686.995 433.837 687.159 433.148 687.159ZM433.148 686.105C433.671 686.105 434.102 685.971 434.44 685.702C434.778 685.434 435.029 685.081 435.191 684.643C435.354 684.206 435.435 683.732 435.435 683.222C435.435 682.711 435.354 682.236 435.191 681.795C435.029 681.354 434.778 680.998 434.44 680.726C434.102 680.454 433.671 680.318 433.148 680.318C432.624 680.318 432.193 680.454 431.855 680.726C431.517 680.998 431.267 681.354 431.104 681.795C430.942 682.236 430.861 682.711 430.861 683.222C430.861 683.732 430.942 684.206 431.104 684.643C431.267 685.081 431.517 685.434 431.855 685.702C432.193 685.971 432.624 686.105 433.148 686.105ZM439.572 676.818V687H438.399V676.818H439.572ZM444.605 687.159C443.968 687.159 443.407 686.998 442.919 686.677C442.432 686.352 442.051 685.895 441.776 685.305C441.501 684.711 441.363 684.01 441.363 683.202C441.363 682.4 441.501 681.704 441.776 681.114C442.051 680.524 442.434 680.068 442.924 679.746C443.415 679.425 443.982 679.264 444.625 679.264C445.122 679.264 445.515 679.347 445.803 679.513C446.095 679.675 446.317 679.861 446.469 680.07C446.625 680.275 446.746 680.444 446.832 680.577H446.932V676.818H448.105V687H446.971V685.827H446.832C446.746 685.966 446.623 686.142 446.464 686.354C446.305 686.562 446.078 686.75 445.783 686.915C445.488 687.078 445.095 687.159 444.605 687.159ZM444.764 686.105C445.235 686.105 445.632 685.982 445.957 685.737C446.282 685.489 446.529 685.146 446.698 684.708C446.867 684.267 446.951 683.759 446.951 683.182C446.951 682.612 446.869 682.113 446.703 681.685C446.537 681.254 446.292 680.92 445.967 680.681C445.642 680.439 445.241 680.318 444.764 680.318C444.267 680.318 443.852 680.446 443.521 680.701C443.193 680.953 442.946 681.296 442.78 681.73C442.618 682.161 442.537 682.645 442.537 683.182C442.537 683.725 442.62 684.219 442.785 684.663C442.954 685.104 443.203 685.455 443.531 685.717C443.862 685.976 444.273 686.105 444.764 686.105ZM456.084 687L453.758 679.364H454.991L456.641 685.21H456.721L458.351 679.364H459.604L461.215 685.19H461.294L462.945 679.364H464.178L461.851 687H460.698L459.027 681.134H458.908L457.238 687H456.084ZM467.976 687.179C467.492 687.179 467.053 687.088 466.659 686.906C466.264 686.72 465.951 686.453 465.719 686.105C465.487 685.754 465.371 685.33 465.371 684.832C465.371 684.395 465.457 684.04 465.63 683.768C465.802 683.493 466.032 683.278 466.321 683.122C466.609 682.966 466.927 682.85 467.275 682.774C467.627 682.695 467.98 682.632 468.334 682.585C468.798 682.526 469.174 682.481 469.463 682.451C469.754 682.418 469.967 682.363 470.099 682.287C470.235 682.211 470.303 682.078 470.303 681.889V681.849C470.303 681.359 470.169 680.978 469.9 680.706C469.635 680.434 469.232 680.298 468.692 680.298C468.132 680.298 467.693 680.421 467.375 680.666C467.057 680.911 466.833 681.173 466.704 681.452L465.59 681.054C465.789 680.59 466.054 680.229 466.385 679.97C466.72 679.708 467.085 679.526 467.479 679.423C467.877 679.317 468.268 679.264 468.652 679.264C468.898 679.264 469.179 679.294 469.498 679.354C469.819 679.41 470.129 679.528 470.427 679.707C470.729 679.886 470.979 680.156 471.178 680.517C471.377 680.878 471.476 681.362 471.476 681.969V687H470.303V685.966H470.243C470.164 686.132 470.031 686.309 469.846 686.498C469.66 686.687 469.413 686.848 469.105 686.98C468.797 687.113 468.42 687.179 467.976 687.179ZM468.155 686.125C468.619 686.125 469.01 686.034 469.329 685.852C469.65 685.669 469.892 685.434 470.054 685.146C470.22 684.857 470.303 684.554 470.303 684.236V683.162C470.253 683.222 470.144 683.276 469.975 683.326C469.809 683.372 469.617 683.414 469.398 683.45C469.183 683.483 468.972 683.513 468.767 683.54C468.565 683.563 468.401 683.583 468.275 683.599C467.97 683.639 467.685 683.704 467.419 683.793C467.158 683.879 466.946 684.01 466.783 684.186C466.624 684.358 466.544 684.594 466.544 684.892C466.544 685.3 466.695 685.608 466.997 685.817C467.302 686.022 467.688 686.125 468.155 686.125ZM476.939 679.364V680.358H472.981V679.364H476.939ZM474.135 677.534H475.308V684.812C475.308 685.144 475.356 685.393 475.452 685.558C475.552 685.721 475.678 685.83 475.83 685.886C475.986 685.939 476.15 685.966 476.322 685.966C476.452 685.966 476.558 685.959 476.641 685.946C476.723 685.929 476.79 685.916 476.839 685.906L477.078 686.96C476.998 686.99 476.887 687.02 476.745 687.05C476.602 687.083 476.422 687.099 476.203 687.099C475.872 687.099 475.547 687.028 475.229 686.886C474.914 686.743 474.652 686.526 474.443 686.234C474.238 685.943 474.135 685.575 474.135 685.131V677.534ZM481.823 687.159C481.088 687.159 480.453 686.997 479.919 686.672C479.389 686.344 478.98 685.886 478.691 685.3C478.406 684.71 478.264 684.024 478.264 683.241C478.264 682.459 478.406 681.77 478.691 681.173C478.98 680.573 479.381 680.106 479.894 679.771C480.411 679.433 481.015 679.264 481.704 679.264C482.102 679.264 482.495 679.33 482.882 679.463C483.27 679.596 483.623 679.811 483.941 680.109C484.259 680.404 484.513 680.795 484.702 681.283C484.891 681.77 484.985 682.37 484.985 683.082V683.58H479.099V682.565H483.792C483.792 682.134 483.706 681.75 483.534 681.412C483.365 681.074 483.123 680.807 482.808 680.612C482.496 680.416 482.128 680.318 481.704 680.318C481.237 680.318 480.832 680.434 480.491 680.666C480.153 680.895 479.893 681.193 479.71 681.561C479.528 681.929 479.437 682.323 479.437 682.744V683.42C479.437 683.997 479.536 684.486 479.735 684.887C479.938 685.285 480.218 685.588 480.576 685.797C480.934 686.002 481.349 686.105 481.823 686.105C482.132 686.105 482.41 686.062 482.659 685.976C482.911 685.886 483.128 685.754 483.31 685.578C483.492 685.399 483.633 685.177 483.733 684.912L484.866 685.23C484.747 685.615 484.546 685.953 484.264 686.244C483.983 686.533 483.635 686.758 483.22 686.92C482.806 687.08 482.34 687.159 481.823 687.159ZM486.77 687V679.364H487.904V680.517H487.983C488.122 680.139 488.374 679.833 488.739 679.597C489.103 679.362 489.514 679.244 489.972 679.244C490.058 679.244 490.166 679.246 490.295 679.249C490.424 679.253 490.522 679.258 490.588 679.264V680.457C490.549 680.447 490.457 680.433 490.315 680.413C490.176 680.389 490.028 680.378 489.872 680.378C489.501 680.378 489.17 680.456 488.878 680.612C488.59 680.764 488.361 680.976 488.192 681.248C488.026 681.516 487.943 681.823 487.943 682.168V687H486.77ZM495.917 687V679.364H497.09V687H495.917ZM496.513 678.091C496.285 678.091 496.087 678.013 495.922 677.857C495.759 677.701 495.678 677.514 495.678 677.295C495.678 677.077 495.759 676.889 495.922 676.734C496.087 676.578 496.285 676.5 496.513 676.5C496.742 676.5 496.937 676.578 497.1 676.734C497.266 676.889 497.348 677.077 497.348 677.295C497.348 677.514 497.266 677.701 497.1 677.857C496.937 678.013 496.742 678.091 496.513 678.091ZM500.412 682.406V687H499.239V679.364H500.372V680.557H500.472C500.651 680.169 500.923 679.857 501.287 679.622C501.652 679.384 502.122 679.264 502.699 679.264C503.216 679.264 503.669 679.37 504.056 679.582C504.444 679.791 504.746 680.109 504.961 680.537C505.177 680.961 505.284 681.498 505.284 682.148V687H504.111V682.227C504.111 681.627 503.955 681.16 503.644 680.825C503.332 680.487 502.905 680.318 502.361 680.318C501.987 680.318 501.652 680.399 501.357 680.562C501.065 680.724 500.835 680.961 500.666 681.273C500.497 681.584 500.412 681.962 500.412 682.406ZM508.602 676.818V687H507.428V676.818H508.602ZM513.952 687.159C513.217 687.159 512.582 686.997 512.048 686.672C511.518 686.344 511.109 685.886 510.82 685.3C510.535 684.71 510.393 684.024 510.393 683.241C510.393 682.459 510.535 681.77 510.82 681.173C511.109 680.573 511.51 680.106 512.023 679.771C512.54 679.433 513.144 679.264 513.833 679.264C514.231 679.264 514.623 679.33 515.011 679.463C515.399 679.596 515.752 679.811 516.07 680.109C516.388 680.404 516.642 680.795 516.831 681.283C517.02 681.77 517.114 682.37 517.114 683.082V683.58H511.228V682.565H515.921C515.921 682.134 515.835 681.75 515.663 681.412C515.494 681.074 515.252 680.807 514.937 680.612C514.625 680.416 514.257 680.318 513.833 680.318C513.366 680.318 512.961 680.434 512.62 680.666C512.282 680.895 512.022 681.193 511.839 681.561C511.657 681.929 511.566 682.323 511.566 682.744V683.42C511.566 683.997 511.665 684.486 511.864 684.887C512.066 685.285 512.347 685.588 512.704 685.797C513.062 686.002 513.478 686.105 513.952 686.105C514.261 686.105 514.539 686.062 514.788 685.976C515.039 685.886 515.257 685.754 515.439 685.578C515.621 685.399 515.762 685.177 515.861 684.912L516.995 685.23C516.876 685.615 516.675 685.953 516.393 686.244C516.112 686.533 515.764 686.758 515.349 686.92C514.935 687.08 514.469 687.159 513.952 687.159ZM522.22 679.364V680.358H518.263V679.364H522.22ZM519.416 677.534H520.589V684.812C520.589 685.144 520.637 685.393 520.734 685.558C520.833 685.721 520.959 685.83 521.111 685.886C521.267 685.939 521.431 685.966 521.604 685.966C521.733 685.966 521.839 685.959 521.922 685.946C522.005 685.929 522.071 685.916 522.121 685.906L522.359 686.96C522.28 686.99 522.169 687.02 522.026 687.05C521.884 687.083 521.703 687.099 521.484 687.099C521.153 687.099 520.828 687.028 520.51 686.886C520.195 686.743 519.933 686.526 519.724 686.234C519.519 685.943 519.416 685.575 519.416 685.131V677.534ZM439.421 696.364V697.358H435.304V696.364H439.421ZM436.537 704V695.31C436.537 694.872 436.64 694.508 436.845 694.216C437.051 693.924 437.318 693.705 437.646 693.56C437.974 693.414 438.32 693.341 438.685 693.341C438.973 693.341 439.209 693.364 439.391 693.411C439.573 693.457 439.709 693.5 439.799 693.54L439.46 694.554C439.401 694.534 439.318 694.509 439.212 694.479C439.109 694.45 438.973 694.435 438.804 694.435C438.416 694.435 438.136 694.532 437.964 694.728C437.795 694.924 437.71 695.21 437.71 695.588V704H436.537ZM441.065 704V696.364H442.199V697.517H442.278C442.417 697.139 442.669 696.833 443.034 696.597C443.398 696.362 443.809 696.244 444.267 696.244C444.353 696.244 444.461 696.246 444.59 696.249C444.719 696.253 444.817 696.258 444.883 696.264V697.457C444.843 697.447 444.752 697.433 444.61 697.413C444.471 697.389 444.323 697.378 444.167 697.378C443.796 697.378 443.465 697.456 443.173 697.612C442.885 697.764 442.656 697.976 442.487 698.248C442.321 698.516 442.238 698.823 442.238 699.168V704H441.065ZM449.144 704.159C448.455 704.159 447.85 703.995 447.329 703.667C446.812 703.339 446.408 702.88 446.116 702.29C445.828 701.7 445.684 701.01 445.684 700.222C445.684 699.426 445.828 698.732 446.116 698.138C446.408 697.545 446.812 697.085 447.329 696.756C447.85 696.428 448.455 696.264 449.144 696.264C449.833 696.264 450.437 696.428 450.954 696.756C451.474 697.085 451.878 697.545 452.167 698.138C452.458 698.732 452.604 699.426 452.604 700.222C452.604 701.01 452.458 701.7 452.167 702.29C451.878 702.88 451.474 703.339 450.954 703.667C450.437 703.995 449.833 704.159 449.144 704.159ZM449.144 703.105C449.668 703.105 450.098 702.971 450.437 702.702C450.775 702.434 451.025 702.081 451.187 701.643C451.35 701.206 451.431 700.732 451.431 700.222C451.431 699.711 451.35 699.236 451.187 698.795C451.025 698.354 450.775 697.998 450.437 697.726C450.098 697.454 449.668 697.318 449.144 697.318C448.62 697.318 448.189 697.454 447.851 697.726C447.513 697.998 447.263 698.354 447.101 698.795C446.938 699.236 446.857 699.711 446.857 700.222C446.857 700.732 446.938 701.206 447.101 701.643C447.263 702.081 447.513 702.434 447.851 702.702C448.189 702.971 448.62 703.105 449.144 703.105ZM454.395 704V696.364H455.529V697.557H455.628C455.787 697.149 456.044 696.833 456.399 696.607C456.753 696.379 457.179 696.264 457.676 696.264C458.18 696.264 458.599 696.379 458.934 696.607C459.272 696.833 459.536 697.149 459.725 697.557H459.804C460 697.162 460.293 696.849 460.684 696.617C461.075 696.382 461.544 696.264 462.091 696.264C462.774 696.264 463.332 696.478 463.767 696.906C464.201 697.33 464.418 697.991 464.418 698.889V704H463.245V698.889C463.245 698.326 463.09 697.923 462.782 697.681C462.474 697.439 462.111 697.318 461.693 697.318C461.157 697.318 460.741 697.481 460.446 697.805C460.151 698.127 460.003 698.535 460.003 699.028V704H458.81V698.77C458.81 698.336 458.669 697.986 458.387 697.721C458.106 697.452 457.743 697.318 457.299 697.318C456.994 697.318 456.709 697.399 456.443 697.562C456.182 697.724 455.969 697.95 455.807 698.238C455.648 698.523 455.568 698.853 455.568 699.227V704H454.395ZM475.91 698.074L474.856 698.372C474.789 698.196 474.692 698.026 474.562 697.86C474.436 697.691 474.264 697.552 474.045 697.442C473.827 697.333 473.547 697.278 473.205 697.278C472.738 697.278 472.348 697.386 472.037 697.602C471.729 697.814 471.574 698.084 471.574 698.412C471.574 698.704 471.681 698.934 471.893 699.103C472.105 699.272 472.436 699.413 472.887 699.526L474.021 699.804C474.703 699.97 475.212 700.223 475.547 700.565C475.882 700.903 476.049 701.339 476.049 701.872C476.049 702.31 475.923 702.701 475.671 703.045C475.422 703.39 475.074 703.662 474.627 703.861C474.18 704.06 473.659 704.159 473.066 704.159C472.287 704.159 471.642 703.99 471.132 703.652C470.622 703.314 470.298 702.82 470.163 702.17L471.276 701.892C471.382 702.303 471.583 702.611 471.878 702.817C472.176 703.022 472.565 703.125 473.046 703.125C473.593 703.125 474.027 703.009 474.349 702.777C474.673 702.542 474.836 702.26 474.836 701.932C474.836 701.667 474.743 701.445 474.557 701.266C474.372 701.083 474.087 700.947 473.702 700.858L472.43 700.56C471.73 700.394 471.217 700.137 470.888 699.789C470.564 699.438 470.401 698.999 470.401 698.472C470.401 698.041 470.522 697.66 470.764 697.328C471.009 696.997 471.342 696.737 471.763 696.548C472.188 696.359 472.668 696.264 473.205 696.264C473.961 696.264 474.554 696.43 474.985 696.761C475.419 697.093 475.727 697.53 475.91 698.074ZM482.628 700.878V696.364H483.801V704H482.628V702.707H482.548C482.369 703.095 482.091 703.425 481.713 703.697C481.335 703.965 480.858 704.099 480.281 704.099C479.804 704.099 479.379 703.995 479.008 703.786C478.637 703.574 478.345 703.256 478.133 702.832C477.921 702.404 477.815 701.866 477.815 701.216V696.364H478.988V701.136C478.988 701.693 479.144 702.137 479.456 702.469C479.771 702.8 480.172 702.966 480.659 702.966C480.95 702.966 481.247 702.891 481.549 702.742C481.854 702.593 482.109 702.364 482.314 702.056C482.523 701.748 482.628 701.355 482.628 700.878ZM485.95 706.864V696.364H487.083V697.577H487.223C487.309 697.444 487.428 697.275 487.581 697.07C487.736 696.861 487.958 696.675 488.247 696.513C488.538 696.347 488.933 696.264 489.43 696.264C490.073 696.264 490.64 696.425 491.13 696.746C491.621 697.068 492.004 697.524 492.279 698.114C492.554 698.704 492.691 699.4 492.691 700.202C492.691 701.01 492.554 701.711 492.279 702.305C492.004 702.895 491.622 703.352 491.135 703.677C490.648 703.998 490.086 704.159 489.45 704.159C488.959 704.159 488.567 704.078 488.272 703.915C487.977 703.75 487.75 703.562 487.59 703.354C487.431 703.142 487.309 702.966 487.223 702.827H487.123V706.864H485.95ZM487.103 700.182C487.103 700.759 487.188 701.267 487.357 701.708C487.526 702.146 487.773 702.489 488.098 702.737C488.422 702.982 488.82 703.105 489.291 703.105C489.781 703.105 490.191 702.976 490.519 702.717C490.85 702.455 491.099 702.104 491.264 701.663C491.434 701.219 491.518 700.725 491.518 700.182C491.518 699.645 491.435 699.161 491.269 698.73C491.107 698.296 490.86 697.953 490.529 697.701C490.201 697.446 489.788 697.318 489.291 697.318C488.813 697.318 488.412 697.439 488.088 697.681C487.763 697.92 487.518 698.254 487.352 698.685C487.186 699.113 487.103 699.612 487.103 700.182ZM494.481 706.864V696.364H495.615V697.577H495.754C495.84 697.444 495.959 697.275 496.112 697.07C496.268 696.861 496.49 696.675 496.778 696.513C497.07 696.347 497.464 696.264 497.961 696.264C498.604 696.264 499.171 696.425 499.661 696.746C500.152 697.068 500.535 697.524 500.81 698.114C501.085 698.704 501.223 699.4 501.223 700.202C501.223 701.01 501.085 701.711 500.81 702.305C500.535 702.895 500.154 703.352 499.666 703.677C499.179 703.998 498.617 704.159 497.981 704.159C497.491 704.159 497.098 704.078 496.803 703.915C496.508 703.75 496.281 703.562 496.122 703.354C495.963 703.142 495.84 702.966 495.754 702.827H495.654V706.864H494.481ZM495.634 700.182C495.634 700.759 495.719 701.267 495.888 701.708C496.057 702.146 496.304 702.489 496.629 702.737C496.954 702.982 497.351 703.105 497.822 703.105C498.313 703.105 498.722 702.976 499.05 702.717C499.381 702.455 499.63 702.104 499.796 701.663C499.965 701.219 500.049 700.725 500.049 700.182C500.049 699.645 499.966 699.161 499.801 698.73C499.638 698.296 499.391 697.953 499.06 697.701C498.732 697.446 498.319 697.318 497.822 697.318C497.345 697.318 496.944 697.439 496.619 697.681C496.294 697.92 496.049 698.254 495.883 698.685C495.717 699.113 495.634 699.612 495.634 700.182ZM504.186 693.818V704H503.012V693.818H504.186ZM507.09 706.864C506.891 706.864 506.714 706.847 506.558 706.814C506.403 706.784 506.295 706.754 506.235 706.724L506.533 705.69C506.819 705.763 507.07 705.79 507.289 705.77C507.508 705.75 507.702 705.652 507.871 705.477C508.043 705.304 508.201 705.024 508.343 704.636L508.562 704.04L505.738 696.364H507.011L509.119 702.449H509.198L511.306 696.364H512.579L509.337 705.114C509.192 705.508 509.011 705.835 508.796 706.093C508.58 706.355 508.33 706.549 508.045 706.675C507.763 706.801 507.445 706.864 507.09 706.864Z\" fill=\"black\"/>\n{/* <path id=\"flow-control valve\" d=\"M385.786 620.364V621.358H381.669V620.364H385.786ZM382.902 628V619.31C382.902 618.872 383.005 618.508 383.211 618.216C383.416 617.924 383.683 617.705 384.011 617.56C384.339 617.414 384.686 617.341 385.05 617.341C385.339 617.341 385.574 617.364 385.756 617.411C385.938 617.457 386.074 617.5 386.164 617.54L385.826 618.554C385.766 618.534 385.683 618.509 385.577 618.479C385.474 618.45 385.339 618.435 385.169 618.435C384.782 618.435 384.502 618.532 384.329 618.728C384.16 618.924 384.076 619.21 384.076 619.588V628H382.902ZM388.604 617.818V628H387.43V617.818H388.604ZM393.855 628.159C393.165 628.159 392.561 627.995 392.04 627.667C391.523 627.339 391.119 626.88 390.827 626.29C390.539 625.7 390.395 625.01 390.395 624.222C390.395 623.426 390.539 622.732 390.827 622.138C391.119 621.545 391.523 621.085 392.04 620.756C392.561 620.428 393.165 620.264 393.855 620.264C394.544 620.264 395.147 620.428 395.665 620.756C396.185 621.085 396.589 621.545 396.878 622.138C397.169 622.732 397.315 623.426 397.315 624.222C397.315 625.01 397.169 625.7 396.878 626.29C396.589 626.88 396.185 627.339 395.665 627.667C395.147 627.995 394.544 628.159 393.855 628.159ZM393.855 627.105C394.379 627.105 394.809 626.971 395.147 626.702C395.486 626.434 395.736 626.081 395.898 625.643C396.061 625.206 396.142 624.732 396.142 624.222C396.142 623.711 396.061 623.236 395.898 622.795C395.736 622.354 395.486 621.998 395.147 621.726C394.809 621.454 394.379 621.318 393.855 621.318C393.331 621.318 392.9 621.454 392.562 621.726C392.224 621.998 391.974 622.354 391.812 622.795C391.649 623.236 391.568 623.711 391.568 624.222C391.568 624.732 391.649 625.206 391.812 625.643C391.974 626.081 392.224 626.434 392.562 626.702C392.9 626.971 393.331 627.105 393.855 627.105ZM400.576 628L398.25 620.364H399.483L401.133 626.21H401.213L402.843 620.364H404.096L405.707 626.19H405.787L407.437 620.364H408.67L406.343 628H405.19L403.52 622.134H403.4L401.73 628H400.576ZM414.596 623.088V624.182H410.142V623.088H414.596ZM419.763 628.159C419.047 628.159 418.431 627.99 417.914 627.652C417.397 627.314 416.999 626.848 416.72 626.255C416.442 625.662 416.303 624.984 416.303 624.222C416.303 623.446 416.445 622.762 416.73 622.168C417.019 621.572 417.42 621.106 417.934 620.771C418.451 620.433 419.054 620.264 419.743 620.264C420.28 620.264 420.764 620.364 421.195 620.562C421.626 620.761 421.979 621.04 422.254 621.398C422.529 621.756 422.7 622.173 422.766 622.651H421.593C421.503 622.303 421.304 621.994 420.996 621.726C420.691 621.454 420.28 621.318 419.763 621.318C419.306 621.318 418.905 621.437 418.56 621.676C418.219 621.911 417.952 622.245 417.759 622.675C417.571 623.103 417.476 623.605 417.476 624.182C417.476 624.772 417.569 625.286 417.755 625.723C417.943 626.161 418.209 626.5 418.55 626.742C418.895 626.984 419.299 627.105 419.763 627.105C420.068 627.105 420.345 627.052 420.593 626.946C420.842 626.84 421.052 626.688 421.225 626.489C421.397 626.29 421.52 626.051 421.593 625.773H422.766C422.7 626.223 422.536 626.629 422.274 626.991C422.015 627.349 421.672 627.634 421.245 627.846C420.82 628.055 420.326 628.159 419.763 628.159ZM427.583 628.159C426.894 628.159 426.289 627.995 425.769 627.667C425.252 627.339 424.847 626.88 424.556 626.29C424.267 625.7 424.123 625.01 424.123 624.222C424.123 623.426 424.267 622.732 424.556 622.138C424.847 621.545 425.252 621.085 425.769 620.756C426.289 620.428 426.894 620.264 427.583 620.264C428.273 620.264 428.876 620.428 429.393 620.756C429.913 621.085 430.318 621.545 430.606 622.138C430.898 622.732 431.044 623.426 431.044 624.222C431.044 625.01 430.898 625.7 430.606 626.29C430.318 626.88 429.913 627.339 429.393 627.667C428.876 627.995 428.273 628.159 427.583 628.159ZM427.583 627.105C428.107 627.105 428.538 626.971 428.876 626.702C429.214 626.434 429.464 626.081 429.627 625.643C429.789 625.206 429.87 624.732 429.87 624.222C429.87 623.711 429.789 623.236 429.627 622.795C429.464 622.354 429.214 621.998 428.876 621.726C428.538 621.454 428.107 621.318 427.583 621.318C427.06 621.318 426.629 621.454 426.291 621.726C425.953 621.998 425.702 622.354 425.54 622.795C425.378 623.236 425.296 623.711 425.296 624.222C425.296 624.732 425.378 625.206 425.54 625.643C425.702 626.081 425.953 626.434 426.291 626.702C426.629 626.971 427.06 627.105 427.583 627.105ZM434.008 623.406V628H432.835V620.364H433.968V621.557H434.068C434.247 621.169 434.518 620.857 434.883 620.622C435.247 620.384 435.718 620.264 436.295 620.264C436.812 620.264 437.264 620.37 437.652 620.582C438.04 620.791 438.341 621.109 438.557 621.537C438.772 621.961 438.88 622.498 438.88 623.148V628H437.707V623.227C437.707 622.627 437.551 622.16 437.239 621.825C436.928 621.487 436.5 621.318 435.957 621.318C435.582 621.318 435.247 621.399 434.953 621.562C434.661 621.724 434.43 621.961 434.261 622.273C434.092 622.584 434.008 622.962 434.008 623.406ZM444.345 620.364V621.358H440.388V620.364H444.345ZM441.541 618.534H442.714V625.812C442.714 626.144 442.762 626.393 442.859 626.558C442.958 626.721 443.084 626.83 443.236 626.886C443.392 626.939 443.556 626.966 443.729 626.966C443.858 626.966 443.964 626.959 444.047 626.946C444.13 626.929 444.196 626.916 444.246 626.906L444.484 627.96C444.405 627.99 444.294 628.02 444.151 628.05C444.009 628.083 443.828 628.099 443.609 628.099C443.278 628.099 442.953 628.028 442.635 627.886C442.32 627.743 442.058 627.526 441.849 627.234C441.644 626.943 441.541 626.575 441.541 626.131V618.534ZM446.11 628V620.364H447.244V621.517H447.323C447.462 621.139 447.714 620.833 448.079 620.597C448.443 620.362 448.854 620.244 449.312 620.244C449.398 620.244 449.506 620.246 449.635 620.249C449.764 620.253 449.862 620.258 449.928 620.264V621.457C449.888 621.447 449.797 621.433 449.655 621.413C449.516 621.389 449.368 621.378 449.212 621.378C448.841 621.378 448.51 621.456 448.218 621.612C447.93 621.764 447.701 621.976 447.532 622.248C447.366 622.516 447.283 622.823 447.283 623.168V628H446.11ZM454.189 628.159C453.499 628.159 452.895 627.995 452.374 627.667C451.857 627.339 451.453 626.88 451.161 626.29C450.873 625.7 450.729 625.01 450.729 624.222C450.729 623.426 450.873 622.732 451.161 622.138C451.453 621.545 451.857 621.085 452.374 620.756C452.895 620.428 453.499 620.264 454.189 620.264C454.878 620.264 455.481 620.428 455.998 620.756C456.519 621.085 456.923 621.545 457.212 622.138C457.503 622.732 457.649 623.426 457.649 624.222C457.649 625.01 457.503 625.7 457.212 626.29C456.923 626.88 456.519 627.339 455.998 627.667C455.481 627.995 454.878 628.159 454.189 628.159ZM454.189 627.105C454.713 627.105 455.143 626.971 455.481 626.702C455.82 626.434 456.07 626.081 456.232 625.643C456.395 625.206 456.476 624.732 456.476 624.222C456.476 623.711 456.395 623.236 456.232 622.795C456.07 622.354 455.82 621.998 455.481 621.726C455.143 621.454 454.713 621.318 454.189 621.318C453.665 621.318 453.234 621.454 452.896 621.726C452.558 621.998 452.308 622.354 452.146 622.795C451.983 623.236 451.902 623.711 451.902 624.222C451.902 624.732 451.983 625.206 452.146 625.643C452.308 626.081 452.558 626.434 452.896 626.702C453.234 626.971 453.665 627.105 454.189 627.105ZM460.613 617.818V628H459.44V617.818H460.613ZM411.598 637.364L408.775 645H407.581L404.758 637.364H406.03L408.138 643.449H408.218L410.326 637.364H411.598ZM415.162 645.179C414.678 645.179 414.239 645.088 413.844 644.906C413.45 644.72 413.137 644.453 412.905 644.105C412.673 643.754 412.557 643.33 412.557 642.832C412.557 642.395 412.643 642.04 412.815 641.768C412.988 641.493 413.218 641.278 413.506 641.122C413.795 640.966 414.113 640.85 414.461 640.774C414.812 640.695 415.165 640.632 415.52 640.585C415.984 640.526 416.36 640.481 416.648 640.451C416.94 640.418 417.152 640.363 417.285 640.287C417.421 640.211 417.489 640.078 417.489 639.889V639.849C417.489 639.359 417.354 638.978 417.086 638.706C416.821 638.434 416.418 638.298 415.878 638.298C415.318 638.298 414.878 638.421 414.56 638.666C414.242 638.911 414.018 639.173 413.889 639.452L412.775 639.054C412.974 638.59 413.239 638.229 413.571 637.97C413.906 637.708 414.27 637.526 414.665 637.423C415.062 637.317 415.454 637.264 415.838 637.264C416.083 637.264 416.365 637.294 416.683 637.354C417.005 637.41 417.315 637.528 417.613 637.707C417.914 637.886 418.165 638.156 418.364 638.517C418.562 638.878 418.662 639.362 418.662 639.969V645H417.489V643.966H417.429C417.349 644.132 417.217 644.309 417.031 644.498C416.846 644.687 416.599 644.848 416.29 644.98C415.982 645.113 415.606 645.179 415.162 645.179ZM415.341 644.125C415.805 644.125 416.196 644.034 416.514 643.852C416.836 643.669 417.078 643.434 417.24 643.146C417.406 642.857 417.489 642.554 417.489 642.236V641.162C417.439 641.222 417.329 641.276 417.16 641.326C416.995 641.372 416.802 641.414 416.584 641.45C416.368 641.483 416.158 641.513 415.952 641.54C415.75 641.563 415.586 641.583 415.46 641.599C415.155 641.639 414.87 641.704 414.605 641.793C414.343 641.879 414.131 642.01 413.969 642.186C413.81 642.358 413.73 642.594 413.73 642.892C413.73 643.3 413.881 643.608 414.182 643.817C414.487 644.022 414.873 644.125 415.341 644.125ZM421.977 634.818V645H420.803V634.818H421.977ZM430.37 637.364L427.546 645H426.353L423.529 637.364H424.802L426.91 643.449H426.989L429.097 637.364H430.37ZM434.847 645.159C434.111 645.159 433.476 644.997 432.943 644.672C432.412 644.344 432.003 643.886 431.715 643.3C431.43 642.71 431.287 642.024 431.287 641.241C431.287 640.459 431.43 639.77 431.715 639.173C432.003 638.573 432.404 638.106 432.918 637.771C433.435 637.433 434.038 637.264 434.728 637.264C435.125 637.264 435.518 637.33 435.906 637.463C436.294 637.596 436.647 637.811 436.965 638.109C437.283 638.404 437.536 638.795 437.725 639.283C437.914 639.77 438.009 640.37 438.009 641.082V641.58H432.122V640.565H436.816C436.816 640.134 436.729 639.75 436.557 639.412C436.388 639.074 436.146 638.807 435.831 638.612C435.52 638.416 435.152 638.318 434.728 638.318C434.26 638.318 433.856 638.434 433.514 638.666C433.176 638.895 432.916 639.193 432.734 639.561C432.552 639.929 432.46 640.323 432.46 640.744V641.42C432.46 641.997 432.56 642.486 432.759 642.887C432.961 643.285 433.241 643.588 433.599 643.797C433.957 644.002 434.373 644.105 434.847 644.105C435.155 644.105 435.434 644.062 435.682 643.976C435.934 643.886 436.151 643.754 436.333 643.578C436.516 643.399 436.657 643.177 436.756 642.912L437.889 643.23C437.77 643.615 437.57 643.953 437.288 644.244C437.006 644.533 436.658 644.758 436.244 644.92C435.83 645.08 435.364 645.159 434.847 645.159Z\" fill=\"black\"/> */}\n</g>\n\n    </g>\n    <g id=\"pReg\">\n    <g id=\"Rectangle 91\">\n        <path d=\"M165 200H167V210H165V200Z\" fill=\"#D9D9D9\" />\n        <path\n        d=\"M165 200V199.75H164.576L164.781 200.121L165 200ZM165.1 200L165.307 199.86L165.233 199.75H165.1V200ZM165.138 200.056L164.93 200.195L164.989 200.282L165.092 200.301L165.138 200.056ZM165.275 200.081L165.23 200.327L165.348 200.349L165.439 200.269L165.275 200.081ZM165.412 199.961L165.379 199.713L165.305 199.723L165.248 199.773L165.412 199.961ZM165.55 199.942L165.563 199.692L165.54 199.691L165.516 199.694L165.55 199.942ZM165.688 199.949L165.675 200.199L165.679 200.199L165.688 199.949ZM165.825 199.954L165.84 199.704L165.834 199.704L165.825 199.954ZM165.963 199.963L165.947 200.212L165.967 200.213L165.987 200.211L165.963 199.963ZM166.1 199.949L166.09 199.699L166.082 199.7L166.075 199.7L166.1 199.949ZM166.238 199.943L166.412 199.764L166.335 199.689L166.227 199.693L166.238 199.943ZM166.375 200.077L166.201 200.256L166.39 200.441L166.564 200.241L166.375 200.077ZM166.513 199.919L166.603 199.686L166.439 199.622L166.324 199.755L166.513 199.919ZM166.65 199.972L166.559 200.205L166.646 200.239L166.734 200.208L166.65 199.972ZM166.788 199.923L166.934 199.72L166.827 199.644L166.704 199.688L166.788 199.923ZM166.925 200.022L166.779 200.225L166.813 200.25L166.854 200.262L166.925 200.022ZM167.061 200.063L167.235 200.242L167.543 199.945L167.132 199.823L167.061 200.063ZM166.918 200.2L166.745 200.02L166.598 200.162L166.708 200.334L166.918 200.2ZM167.006 200.338L167.246 200.267L167.236 200.233L167.217 200.203L167.006 200.338ZM167.047 200.475L167.296 200.459L167.295 200.431L167.287 200.404L167.047 200.475ZM167.056 200.613L167.299 200.67L167.308 200.633L167.305 200.596L167.056 200.613ZM167.023 200.75L166.78 200.693L166.764 200.761L166.786 200.827L167.023 200.75ZM167.068 200.888L167.254 201.055L167.35 200.948L167.306 200.81L167.068 200.888ZM166.944 201.025L166.758 200.858L166.63 201L166.735 201.161L166.944 201.025ZM167.034 201.163L167.225 201.323L167.344 201.181L167.243 201.026L167.034 201.163ZM166.919 201.3L166.727 201.14L166.568 201.329L166.756 201.49L166.919 201.3ZM167.08 201.438L167.312 201.53L167.378 201.363L167.242 201.247L167.08 201.438ZM167.025 201.575L166.793 201.483L166.756 201.576L166.794 201.669L167.025 201.575ZM167.081 201.713L167.28 201.864L167.367 201.751L167.313 201.618L167.081 201.713ZM166.976 201.85L166.777 201.698L166.7 201.8L166.737 201.922L166.976 201.85ZM167.017 201.988L167.253 202.072L167.281 201.995L167.257 201.915L167.017 201.988ZM166.968 202.125L166.733 202.04L166.717 202.084L166.718 202.13L166.968 202.125ZM166.971 202.263L167.216 202.313L167.221 202.286L167.221 202.257L166.971 202.263ZM166.942 202.4L166.697 202.349L166.689 202.387L166.694 202.426L166.942 202.4ZM166.957 202.538L166.708 202.563L166.71 202.581L166.714 202.598L166.957 202.538ZM166.991 202.675L167.225 202.763L167.252 202.69L167.233 202.614L166.991 202.675ZM166.94 202.812L166.705 202.725L166.648 202.879L166.767 202.993L166.94 202.812ZM167.083 202.95L167.28 203.104L167.419 202.926L167.256 202.769L167.083 202.95ZM166.976 203.088L166.779 202.934L166.737 202.987L166.728 203.054L166.976 203.088ZM166.957 203.225L167.196 203.299L167.202 203.279L167.205 203.259L166.957 203.225ZM166.915 203.363L166.676 203.289L166.641 203.403L166.708 203.502L166.915 203.363ZM167.008 203.5L167.257 203.523L167.265 203.434L167.215 203.36L167.008 203.5ZM166.995 203.638L166.746 203.615L166.741 203.673L166.762 203.728L166.995 203.638ZM167.049 203.775L167.292 203.716L167.288 203.7L167.282 203.684L167.049 203.775ZM167.082 203.913L167.242 204.105L167.362 204.005L167.325 203.854L167.082 203.913ZM166.917 204.05L166.757 203.858L166.547 204.033L166.74 204.226L166.917 204.05ZM167.054 204.188L167.302 204.218L167.317 204.098L167.231 204.011L167.054 204.188ZM167.037 204.325L167.279 204.385L167.283 204.371L167.285 204.356L167.037 204.325ZM167.003 204.463L166.76 204.402L166.744 204.468L166.763 204.534L167.003 204.463ZM167.043 204.6L167.265 204.716L167.312 204.626L167.283 204.529L167.043 204.6ZM166.971 204.738L166.75 204.622L166.677 204.761L166.771 204.887L166.971 204.738ZM167.074 204.875L167.324 204.872L167.323 204.791L167.274 204.725L167.074 204.875ZM167.076 205.013L167.319 205.07L167.326 205.04L167.326 205.01L167.076 205.013ZM167.043 205.15L166.8 205.093L166.795 205.116L166.794 205.139L167.043 205.15ZM167.037 205.287L167.26 205.402L167.285 205.353L167.287 205.298L167.037 205.287ZM166.967 205.425L166.744 205.311L166.738 205.324L166.732 205.338L166.967 205.425ZM166.915 205.562L166.681 205.475L166.663 205.524L166.666 205.575L166.915 205.562ZM166.922 205.7L167.172 205.706L167.173 205.697L167.172 205.687L166.922 205.7ZM166.919 205.838L166.669 205.831L166.666 205.941L166.745 206.017L166.919 205.838ZM167.061 205.975L167.301 206.043L167.342 205.899L167.235 205.796L167.061 205.975ZM167.022 206.113L166.781 206.044L166.766 206.096L166.774 206.149L167.022 206.113ZM167.042 206.25L167.271 206.352L167.3 206.285L167.289 206.213L167.042 206.25ZM166.981 206.388L166.753 206.286L166.704 206.395L166.759 206.501L166.981 206.388ZM167.051 206.525L167.279 206.629L167.329 206.519L167.274 206.411L167.051 206.525ZM166.989 206.662L167.211 206.778L167.216 206.766L166.989 206.662ZM166.918 206.8L166.696 206.685L166.662 206.749L166.668 206.822L166.918 206.8ZM166.93 206.938L167.178 206.96L167.181 206.938L167.179 206.916L166.93 206.938ZM166.917 207.075L166.668 207.052L166.663 207.101L166.678 207.148L166.917 207.075ZM166.959 207.213L166.719 207.285L166.724 207.298L166.959 207.213ZM167.009 207.35L167.217 207.488L167.287 207.383L167.244 207.265L167.009 207.35ZM166.917 207.488L166.709 207.349L166.604 207.508L166.728 207.651L166.917 207.488ZM167.036 207.625L167.281 207.572L167.267 207.51L167.225 207.461L167.036 207.625ZM167.066 207.762L167.285 207.883L167.33 207.801L167.31 207.71L167.066 207.762ZM166.991 207.9L166.771 207.779L166.751 207.816L166.744 207.858L166.991 207.9ZM166.967 208.038L166.721 207.996L166.715 208.03L166.719 208.065L166.967 208.038ZM166.982 208.175L166.734 208.202L166.737 208.236L166.75 208.267L166.982 208.175ZM167.037 208.312L167.225 208.477L167.326 208.362L167.269 208.22L167.037 208.312ZM166.917 208.45L166.729 208.286L166.657 208.368L166.669 208.476L166.917 208.45ZM166.932 208.588L167.182 208.589L167.182 208.575L167.18 208.561L166.932 208.588ZM166.931 208.725L166.681 208.724L166.681 208.782L166.706 208.834L166.931 208.725ZM166.997 208.863L167.239 208.799L167.233 208.776L167.223 208.754L166.997 208.863ZM167.033 209L167.277 209.054L167.291 208.995L167.275 208.937L167.033 209ZM167.003 209.137L166.759 209.083L166.758 209.087L167.003 209.137ZM166.974 209.275L166.729 209.224L166.711 209.313L166.754 209.393L166.974 209.275ZM167.048 209.413L167.294 209.457L167.309 209.371L167.268 209.295L167.048 209.413ZM167.023 209.55L166.777 209.506L166.765 209.57L166.786 209.631L167.023 209.55ZM167.07 209.688L167.243 209.868L167.359 209.758L167.307 209.606L167.07 209.688ZM166.926 209.825L166.753 209.644L166.639 209.753L166.688 209.903L166.926 209.825ZM166.971 209.963L167.109 210.171L167.268 210.066L167.209 209.884L166.971 209.963ZM166.9 210.01L167.001 210.238L167.02 210.23L167.038 210.218L166.9 210.01ZM166.762 210.07L166.59 210.251L166.71 210.366L166.863 210.299L166.762 210.07ZM166.625 209.939L166.798 209.758L166.708 209.672L166.586 209.692L166.625 209.939ZM166.487 209.96L166.448 209.714L166.403 209.721L166.364 209.743L166.487 209.96ZM166.35 210.039L166.395 210.285L166.437 210.277L166.474 210.256L166.35 210.039ZM166.212 210.064L166.067 210.267L166.153 210.329L166.257 210.31L166.212 210.064ZM166.075 209.965L166.221 209.762L166.157 209.717L166.08 209.715L166.075 209.965ZM165.937 209.963L165.942 209.713L165.916 209.712L165.89 209.717L165.937 209.963ZM165.8 209.989L165.702 210.219L165.772 210.249L165.847 210.235L165.8 209.989ZM165.662 209.93L165.761 209.7L165.635 209.647L165.523 209.723L165.662 209.93ZM165.525 210.023L165.408 210.244L165.54 210.314L165.665 210.23L165.525 210.023ZM165.387 209.95L165.505 209.729L165.449 209.7L165.385 209.7L165.387 209.95ZM165.25 209.951L165.248 209.701L165.202 209.702L165.158 209.719L165.25 209.951ZM165.112 210.006L165.037 210.244L165.122 210.271L165.204 210.238L165.112 210.006ZM165.015 209.975L164.8 210.102L164.849 210.185L164.94 210.213L165.015 209.975ZM164.934 209.837L164.693 209.772L164.665 209.874L164.719 209.965L164.934 209.837ZM164.972 209.7L165.213 209.766L165.219 209.744L165.221 209.721L164.972 209.7ZM164.983 209.562L164.775 209.424L164.739 209.477L164.734 209.541L164.983 209.562ZM165.075 209.425L165.283 209.564L165.338 209.481L165.321 209.383L165.075 209.425ZM165.052 209.287L164.807 209.237L164.797 209.283L164.805 209.33L165.052 209.287ZM165.08 209.15L165.325 209.201L165.343 209.112L165.301 209.033L165.08 209.15ZM165.007 209.012L164.783 208.901L164.726 209.016L164.786 209.13L165.007 209.012ZM165.075 208.875L165.299 208.986L165.334 208.916L165.323 208.838L165.075 208.875ZM165.055 208.738L165.302 208.7L165.291 208.628L165.243 208.573L165.055 208.738ZM164.934 208.6L164.684 208.601L164.685 208.694L164.746 208.765L164.934 208.6ZM164.934 208.462L165.184 208.462L165.184 208.455L164.934 208.462ZM164.93 208.325L164.681 208.3L164.679 208.317L164.68 208.333L164.93 208.325ZM164.943 208.188L164.721 208.073L164.699 208.116L164.694 208.163L164.943 208.188ZM165.014 208.05L165.236 208.164L165.283 208.072L165.252 207.974L165.014 208.05ZM164.97 207.912L164.734 207.83L164.706 207.909L164.732 207.989L164.97 207.912ZM165.018 207.775L164.785 207.682L164.781 207.693L165.018 207.775ZM165.073 207.637L165.305 207.731L165.341 207.64L165.306 207.548L165.073 207.637ZM165.02 207.5L164.778 207.563L164.782 207.576L164.787 207.589L165.02 207.5ZM164.985 207.362L164.778 207.222L164.714 207.315L164.743 207.425L164.985 207.362ZM165.078 207.225L165.285 207.366L165.36 207.255L165.31 207.131L165.078 207.225ZM165.023 207.087L164.791 206.995L164.754 207.088L164.791 207.181L165.023 207.087ZM165.077 206.95L165.31 207.042L165.329 206.993L165.327 206.94L165.077 206.95ZM165.072 206.812L165.322 206.803L165.321 206.772L165.312 206.742L165.072 206.812ZM165.032 206.675L165.271 206.604L165.261 206.568L165.24 206.536L165.032 206.675ZM164.94 206.537L164.722 206.416L164.647 206.549L164.732 206.676L164.94 206.537ZM165.017 206.4L165.235 206.522L165.26 206.477L165.266 206.426L165.017 206.4ZM165.032 206.262L164.783 206.236L164.783 206.236L165.032 206.262ZM165.046 206.125L165.295 206.151L165.297 206.128L165.295 206.104L165.046 206.125ZM165.034 205.987L164.785 205.969L164.784 205.989L164.785 206.009L165.034 205.987ZM165.045 205.85L164.798 205.806L164.796 205.819L164.795 205.832L165.045 205.85ZM165.069 205.712L165.315 205.756L165.321 205.726L165.318 205.694L165.069 205.712ZM165.059 205.575L164.81 205.556L164.808 205.574L164.81 205.593L165.059 205.575ZM165.07 205.438L165.319 205.457L165.327 205.352L165.258 205.273L165.07 205.438ZM164.95 205.3L164.71 205.229L164.672 205.361L164.762 205.464L164.95 205.3ZM164.991 205.162L164.776 205.035L164.76 205.062L164.751 205.092L164.991 205.162ZM165.072 205.025L165.287 205.152L165.386 204.985L165.249 204.848L165.072 205.025ZM164.934 204.887L164.723 204.755L164.617 204.924L164.758 205.064L164.934 204.887ZM165.021 204.75L165.232 204.883L165.297 204.781L165.256 204.667L165.021 204.75ZM164.972 204.612L164.757 204.485L164.697 204.585L164.736 204.696L164.972 204.612ZM165.054 204.475L165.269 204.603L165.352 204.462L165.257 204.329L165.054 204.475ZM164.955 204.337L164.74 204.21L164.657 204.35L164.752 204.483L164.955 204.337ZM165.037 204.2L165.252 204.328L165.305 204.239L165.279 204.138L165.037 204.2ZM165.002 204.062L165.244 204L165.238 203.975L165.226 203.952L165.002 204.062ZM164.934 203.925L164.688 203.881L164.674 203.962L164.71 204.035L164.934 203.925ZM164.959 203.787L165.205 203.832L165.208 203.815L165.209 203.798L164.959 203.787ZM164.965 203.65L164.724 203.583L164.716 203.611L164.715 203.639L164.965 203.65ZM165.003 203.512L165.244 203.58L165.269 203.491L165.23 203.408L165.003 203.512ZM164.94 203.375L164.713 203.27L164.664 203.375L164.713 203.48L164.94 203.375ZM165.004 203.237L165.23 203.343L165.27 203.258L165.244 203.167L165.004 203.237ZM164.963 203.1L164.765 202.948L164.688 203.049L164.723 203.17L164.963 203.1ZM165.068 202.962L165.267 203.114L165.372 202.976L165.279 202.829L165.068 202.962ZM164.981 202.825L164.737 202.879L164.747 202.922L164.77 202.959L164.981 202.825ZM164.951 202.688L164.701 202.697L164.702 202.72L164.707 202.741L164.951 202.688ZM164.946 202.55L164.699 202.507L164.695 202.533L164.696 202.56L164.946 202.55ZM164.97 202.412L164.741 202.311L164.729 202.339L164.724 202.369L164.97 202.412ZM165.031 202.275L165.259 202.377L165.315 202.251L165.239 202.137L165.031 202.275ZM164.94 202.138L164.749 201.975L164.627 202.119L164.731 202.276L164.94 202.138ZM165.057 202L165.247 202.162L165.366 202.023L165.269 201.867L165.057 202ZM164.971 201.863L164.726 201.915L164.736 201.958L164.759 201.995L164.971 201.863ZM164.941 201.725L164.756 201.557L164.67 201.652L164.697 201.777L164.941 201.725ZM165.066 201.587L165.251 201.755L165.377 201.617L165.28 201.457L165.066 201.587ZM164.982 201.45L164.732 201.457L164.734 201.524L164.769 201.58L164.982 201.45ZM164.978 201.313L164.741 201.234L164.727 201.276L164.728 201.32L164.978 201.313ZM165.023 201.175L165.261 201.253L165.296 201.147L165.24 201.051L165.023 201.175ZM164.945 201.037L164.707 200.96L164.673 201.065L164.728 201.161L164.945 201.037ZM164.99 200.9L165.227 200.978L165.232 200.963L165.236 200.947L164.99 200.9ZM165.016 200.762L165.262 200.809L165.28 200.716L165.231 200.634L165.016 200.762ZM164.934 200.625L164.749 200.456L164.624 200.594L164.719 200.753L164.934 200.625ZM165.059 200.488L165.244 200.656L165.391 200.495L165.251 200.327L165.059 200.488ZM164.945 200.35L164.697 200.379L164.705 200.453L164.753 200.51L164.945 200.35ZM164.929 200.212L164.735 200.054L164.668 200.136L164.68 200.242L164.929 200.212ZM165.041 200.075L165.235 200.234L165.342 200.103L165.26 199.954L165.041 200.075ZM165 200V200.25H165.1V200V199.75H165V200ZM165.1 200L164.893 200.14L164.93 200.195L165.138 200.056L165.345 199.916L165.307 199.86L165.1 200ZM165.138 200.056L165.092 200.301L165.23 200.327L165.275 200.081L165.32 199.835L165.183 199.81L165.138 200.056ZM165.275 200.081L165.439 200.269L165.577 200.149L165.412 199.961L165.248 199.773L165.111 199.893L165.275 200.081ZM165.412 199.961L165.446 200.209L165.584 200.19L165.55 199.942L165.516 199.694L165.379 199.713L165.412 199.961ZM165.55 199.942L165.537 200.192L165.675 200.199L165.688 199.949L165.7 199.7L165.563 199.692L165.55 199.942ZM165.688 199.949L165.679 200.199L165.816 200.204L165.825 199.954L165.834 199.704L165.696 199.699L165.688 199.949ZM165.825 199.954L165.81 200.204L165.947 200.212L165.963 199.963L165.978 199.713L165.84 199.705L165.825 199.954ZM165.963 199.963L165.987 200.211L166.125 200.198L166.1 199.949L166.075 199.7L165.938 199.714L165.963 199.963ZM166.1 199.949L166.11 200.199L166.248 200.193L166.238 199.943L166.227 199.693L166.09 199.699L166.1 199.949ZM166.238 199.943L166.063 200.122L166.201 200.256L166.375 200.077L166.549 199.898L166.412 199.764L166.238 199.943ZM166.375 200.077L166.564 200.241L166.701 200.083L166.513 199.919L166.324 199.755L166.186 199.913L166.375 200.077ZM166.513 199.919L166.422 200.152L166.559 200.205L166.65 199.972L166.741 199.739L166.603 199.686L166.513 199.919ZM166.65 199.972L166.734 200.208L166.871 200.159L166.788 199.923L166.704 199.688L166.566 199.737L166.65 199.972ZM166.788 199.923L166.641 200.126L166.779 200.225L166.925 200.022L167.071 199.819L166.934 199.72L166.788 199.923ZM166.925 200.022L166.854 200.262L166.99 200.302L167.061 200.063L167.132 199.823L166.996 199.782L166.925 200.022ZM167.061 200.063L166.887 199.883L166.745 200.02L166.918 200.2L167.092 200.38L167.235 200.242L167.061 200.063ZM166.918 200.2L166.708 200.334L166.795 200.472L167.006 200.338L167.217 200.203L167.129 200.066L166.918 200.2ZM167.006 200.338L166.766 200.408L166.807 200.546L167.047 200.475L167.287 200.404L167.246 200.267L167.006 200.338ZM167.047 200.475L166.797 200.491L166.806 200.629L167.056 200.613L167.305 200.596L167.296 200.459L167.047 200.475ZM167.056 200.613L166.812 200.555L166.78 200.693L167.023 200.75L167.267 200.807L167.299 200.67L167.056 200.613ZM167.023 200.75L166.786 200.827L166.83 200.965L167.068 200.888L167.306 200.81L167.261 200.673L167.023 200.75ZM167.068 200.888L166.882 200.72L166.758 200.858L166.944 201.025L167.13 201.192L167.254 201.055L167.068 200.888ZM166.944 201.025L166.735 201.161L166.824 201.299L167.034 201.163L167.243 201.026L167.154 200.889L166.944 201.025ZM167.034 201.163L166.842 201.002L166.727 201.14L166.919 201.3L167.11 201.46L167.225 201.323L167.034 201.163ZM166.919 201.3L166.756 201.49L166.917 201.628L167.08 201.438L167.242 201.247L167.081 201.11L166.919 201.3ZM167.08 201.438L166.847 201.345L166.793 201.483L167.025 201.575L167.258 201.667L167.312 201.53L167.08 201.438ZM167.025 201.575L166.794 201.669L166.85 201.807L167.081 201.713L167.313 201.618L167.257 201.481L167.025 201.575ZM167.081 201.713L166.882 201.561L166.777 201.698L166.976 201.85L167.175 202.002L167.28 201.864L167.081 201.713ZM166.976 201.85L166.737 201.922L166.778 202.06L167.017 201.988L167.257 201.915L167.215 201.778L166.976 201.85ZM167.017 201.988L166.782 201.903L166.733 202.04L166.968 202.125L167.203 202.21L167.253 202.072L167.017 201.988ZM166.968 202.125L166.718 202.13L166.721 202.268L166.971 202.263L167.221 202.257L167.218 202.12L166.968 202.125ZM166.971 202.263L166.726 202.212L166.697 202.349L166.942 202.4L167.187 202.451L167.216 202.313L166.971 202.263ZM166.942 202.4L166.694 202.426L166.708 202.563L166.957 202.538L167.205 202.512L167.191 202.374L166.942 202.4ZM166.957 202.538L166.714 202.598L166.748 202.736L166.991 202.675L167.233 202.614L167.199 202.477L166.957 202.538ZM166.991 202.675L166.757 202.587L166.705 202.725L166.94 202.812L167.174 202.9L167.225 202.763L166.991 202.675ZM166.94 202.812L166.767 202.993L166.91 203.131L167.083 202.95L167.256 202.769L167.113 202.632L166.94 202.812ZM167.083 202.95L166.886 202.796L166.779 202.934L166.976 203.088L167.173 203.241L167.28 203.104L167.083 202.95ZM166.976 203.088L166.728 203.054L166.71 203.191L166.957 203.225L167.205 203.259L167.224 203.121L166.976 203.088ZM166.957 203.225L166.718 203.151L166.676 203.289L166.915 203.363L167.154 203.436L167.196 203.299L166.957 203.225ZM166.915 203.363L166.708 203.502L166.8 203.64L167.008 203.5L167.215 203.36L167.122 203.223L166.915 203.363ZM167.008 203.5L166.759 203.477L166.746 203.615L166.995 203.638L167.244 203.66L167.257 203.523L167.008 203.5ZM166.995 203.638L166.762 203.728L166.816 203.866L167.049 203.775L167.282 203.684L167.228 203.547L166.995 203.638ZM167.049 203.775L166.806 203.834L166.839 203.971L167.082 203.913L167.325 203.854L167.292 203.716L167.049 203.775ZM167.082 203.913L166.922 203.72L166.757 203.858L166.917 204.05L167.077 204.242L167.242 204.105L167.082 203.913ZM166.917 204.05L166.74 204.226L166.876 204.364L167.054 204.188L167.231 204.011L167.094 203.874L166.917 204.05ZM167.054 204.188L166.806 204.157L166.789 204.294L167.037 204.325L167.285 204.356L167.302 204.218L167.054 204.188ZM167.037 204.325L166.794 204.265L166.76 204.402L167.003 204.463L167.245 204.523L167.279 204.385L167.037 204.325ZM167.003 204.463L166.763 204.534L166.804 204.671L167.043 204.6L167.283 204.529L167.242 204.391L167.003 204.463ZM167.043 204.6L166.822 204.484L166.75 204.622L166.971 204.738L167.193 204.853L167.265 204.716L167.043 204.6ZM166.971 204.738L166.771 204.887L166.874 205.025L167.074 204.875L167.274 204.725L167.172 204.588L166.971 204.738ZM167.074 204.875L166.824 204.878L166.826 205.015L167.076 205.013L167.326 205.01L167.324 204.872L167.074 204.875ZM167.076 205.013L166.832 204.955L166.8 205.093L167.043 205.15L167.287 205.207L167.319 205.07L167.076 205.013ZM167.043 205.15L166.794 205.139L166.788 205.277L167.037 205.287L167.287 205.298L167.293 205.161L167.043 205.15ZM167.037 205.287L166.815 205.173L166.744 205.311L166.967 205.425L167.189 205.539L167.26 205.402L167.037 205.287ZM166.967 205.425L166.732 205.338L166.681 205.475L166.915 205.562L167.15 205.65L167.201 205.512L166.967 205.425ZM166.915 205.562L166.666 205.575L166.673 205.713L166.922 205.7L167.172 205.687L167.165 205.55L166.915 205.562ZM166.922 205.7L166.672 205.694L166.669 205.831L166.919 205.838L167.169 205.844L167.172 205.706L166.922 205.7ZM166.919 205.838L166.745 206.017L166.887 206.154L167.061 205.975L167.235 205.796L167.093 205.658L166.919 205.838ZM167.061 205.975L166.82 205.907L166.781 206.044L167.022 206.113L167.262 206.181L167.301 206.043L167.061 205.975ZM167.022 206.113L166.774 206.149L166.795 206.287L167.042 206.25L167.289 206.213L167.269 206.076L167.022 206.113ZM167.042 206.25L166.814 206.148L166.753 206.286L166.981 206.388L167.21 206.489L167.271 206.352L167.042 206.25ZM166.981 206.388L166.759 206.501L166.829 206.639L167.051 206.525L167.274 206.411L167.204 206.274L166.981 206.388ZM167.051 206.525L166.824 206.421L166.761 206.559L166.989 206.662L167.216 206.766L167.279 206.629L167.051 206.525ZM166.989 206.662L166.767 206.547L166.696 206.685L166.918 206.8L167.139 206.915L167.211 206.778L166.989 206.662ZM166.918 206.8L166.668 206.822L166.68 206.959L166.93 206.938L167.179 206.916L167.167 206.778L166.918 206.8ZM166.93 206.938L166.681 206.915L166.668 207.052L166.917 207.075L167.166 207.098L167.178 206.96L166.93 206.938ZM166.917 207.075L166.678 207.148L166.719 207.285L166.959 207.213L167.198 207.14L167.156 207.002L166.917 207.075ZM166.959 207.213L166.724 207.298L166.774 207.435L167.009 207.35L167.244 207.265L167.194 207.127L166.959 207.213ZM167.009 207.35L166.8 207.212L166.709 207.349L166.917 207.488L167.126 207.626L167.217 207.488L167.009 207.35ZM166.917 207.488L166.728 207.651L166.847 207.789L167.036 207.625L167.225 207.461L167.106 207.324L166.917 207.488ZM167.036 207.625L166.792 207.678L166.822 207.815L167.066 207.762L167.31 207.71L167.281 207.572L167.036 207.625ZM167.066 207.762L166.847 207.642L166.771 207.779L166.991 207.9L167.21 208.021L167.285 207.883L167.066 207.762ZM166.991 207.9L166.744 207.858L166.721 207.996L166.967 208.038L167.214 208.08L167.237 207.942L166.991 207.9ZM166.967 208.038L166.719 208.065L166.734 208.202L166.982 208.175L167.231 208.148L167.216 208.01L166.967 208.038ZM166.982 208.175L166.75 208.267L166.805 208.405L167.037 208.312L167.269 208.22L167.215 208.083L166.982 208.175ZM167.037 208.312L166.848 208.148L166.729 208.286L166.917 208.45L167.106 208.614L167.225 208.477L167.037 208.312ZM166.917 208.45L166.669 208.476L166.683 208.614L166.932 208.588L167.18 208.561L167.166 208.424L166.917 208.45ZM166.932 208.588L166.682 208.586L166.681 208.724L166.931 208.725L167.181 208.726L167.182 208.589L166.932 208.588ZM166.931 208.725L166.706 208.834L166.772 208.971L166.997 208.863L167.223 208.754L167.156 208.616L166.931 208.725ZM166.997 208.863L166.756 208.926L166.792 209.063L167.033 209L167.275 208.937L167.239 208.799L166.997 208.863ZM167.033 209L166.789 208.946L166.759 209.083L167.003 209.137L167.247 209.192L167.277 209.054L167.033 209ZM167.003 209.137L166.758 209.087L166.729 209.224L166.974 209.275L167.219 209.326L167.248 209.188L167.003 209.137ZM166.974 209.275L166.754 209.393L166.827 209.53L167.048 209.413L167.268 209.295L167.195 209.157L166.974 209.275ZM167.048 209.413L166.801 209.368L166.777 209.506L167.023 209.55L167.269 209.594L167.294 209.457L167.048 209.413ZM167.023 209.55L166.786 209.631L166.834 209.769L167.07 209.688L167.307 209.606L167.259 209.469L167.023 209.55ZM167.07 209.688L166.898 209.507L166.753 209.644L166.926 209.825L167.098 210.006L167.243 209.868L167.07 209.688ZM166.926 209.825L166.688 209.903L166.734 210.041L166.971 209.963L167.209 209.884L167.163 209.747L166.926 209.825ZM166.971 209.963L166.833 209.754L166.762 209.801L166.9 210.01L167.038 210.218L167.109 210.171L166.971 209.963ZM166.9 210.01L166.799 209.781L166.662 209.841L166.762 210.07L166.863 210.299L167.001 210.238L166.9 210.01ZM166.762 210.07L166.935 209.889L166.798 209.758L166.625 209.939L166.452 210.119L166.59 210.251L166.762 210.07ZM166.625 209.939L166.586 209.692L166.448 209.714L166.487 209.96L166.527 210.207L166.664 210.186L166.625 209.939ZM166.487 209.96L166.364 209.743L166.226 209.822L166.35 210.039L166.474 210.256L166.611 210.178L166.487 209.96ZM166.35 210.039L166.305 209.793L166.168 209.818L166.212 210.064L166.257 210.31L166.395 210.285L166.35 210.039ZM166.212 210.064L166.358 209.86L166.221 209.762L166.075 209.965L165.929 210.169L166.067 210.267L166.212 210.064ZM166.075 209.965L166.08 209.715L165.942 209.713L165.937 209.963L165.933 210.213L166.07 210.215L166.075 209.965ZM165.937 209.963L165.89 209.717L165.753 209.744L165.8 209.989L165.847 210.235L165.985 210.208L165.937 209.963ZM165.8 209.989L165.898 209.759L165.761 209.7L165.662 209.93L165.564 210.16L165.702 210.219L165.8 209.989ZM165.662 209.93L165.523 209.723L165.385 209.816L165.525 210.023L165.665 210.23L165.802 210.138L165.662 209.93ZM165.525 210.023L165.642 209.802L165.505 209.729L165.387 209.95L165.27 210.171L165.408 210.244L165.525 210.023ZM165.387 209.95L165.385 209.7L165.248 209.701L165.25 209.951L165.252 210.201L165.39 210.2L165.387 209.95ZM165.25 209.951L165.158 209.719L165.021 209.773L165.112 210.006L165.204 210.238L165.342 210.184L165.25 209.951ZM165.112 210.006L165.188 209.767L165.091 209.737L165.015 209.975L164.94 210.213L165.037 210.244L165.112 210.006ZM165.015 209.975L165.23 209.848L165.149 209.71L164.934 209.837L164.719 209.965L164.8 210.102L165.015 209.975ZM164.934 209.837L165.175 209.903L165.213 209.766L164.972 209.7L164.73 209.634L164.693 209.772L164.934 209.837ZM164.972 209.7L165.221 209.721L165.232 209.584L164.983 209.562L164.734 209.541L164.722 209.679L164.972 209.7ZM164.983 209.562L165.191 209.701L165.283 209.564L165.075 209.425L164.867 209.286L164.775 209.424L164.983 209.562ZM165.075 209.425L165.321 209.383L165.298 209.245L165.052 209.287L164.805 209.33L164.829 209.467L165.075 209.425ZM165.052 209.287L165.296 209.338L165.325 209.201L165.08 209.15L164.835 209.099L164.807 209.237L165.052 209.287ZM165.08 209.15L165.301 209.033L165.228 208.895L165.007 209.012L164.786 209.13L164.859 209.267L165.08 209.15ZM165.007 209.012L165.231 209.124L165.299 208.986L165.075 208.875L164.851 208.764L164.783 208.901L165.007 209.012ZM165.075 208.875L165.323 208.838L165.302 208.7L165.055 208.738L164.807 208.775L164.828 208.912L165.075 208.875ZM165.055 208.738L165.243 208.573L165.122 208.435L164.934 208.6L164.746 208.765L164.866 208.902L165.055 208.738ZM164.934 208.6L165.184 208.599L165.184 208.462L164.934 208.462L164.684 208.463L164.684 208.601L164.934 208.6ZM164.934 208.462L165.184 208.455L165.179 208.317L164.93 208.325L164.68 208.333L164.684 208.47L164.934 208.462ZM164.93 208.325L165.178 208.35L165.192 208.212L164.943 208.188L164.694 208.163L164.681 208.3L164.93 208.325ZM164.943 208.188L165.165 208.302L165.236 208.164L165.014 208.05L164.791 207.936L164.721 208.073L164.943 208.188ZM165.014 208.05L165.252 207.974L165.208 207.836L164.97 207.912L164.732 207.989L164.776 208.126L165.014 208.05ZM164.97 207.912L165.206 207.995L165.254 207.857L165.018 207.775L164.781 207.693L164.734 207.83L164.97 207.912ZM165.018 207.775L165.25 207.868L165.305 207.731L165.073 207.637L164.841 207.544L164.786 207.682L165.018 207.775ZM165.073 207.637L165.306 207.548L165.254 207.411L165.02 207.5L164.787 207.589L164.839 207.727L165.073 207.637ZM165.02 207.5L165.262 207.437L165.227 207.3L164.985 207.362L164.743 207.425L164.778 207.563L165.02 207.5ZM164.985 207.362L165.191 207.503L165.285 207.366L165.078 207.225L164.872 207.084L164.778 207.222L164.985 207.362ZM165.078 207.225L165.31 207.131L165.255 206.994L165.023 207.087L164.791 207.181L164.847 207.319L165.078 207.225ZM165.023 207.087L165.255 207.18L165.31 207.042L165.077 206.95L164.845 206.858L164.791 206.995L165.023 207.087ZM165.077 206.95L165.327 206.94L165.322 206.803L165.072 206.812L164.822 206.822L164.828 206.96L165.077 206.95ZM165.072 206.812L165.312 206.742L165.271 206.604L165.032 206.675L164.792 206.746L164.832 206.883L165.072 206.812ZM165.032 206.675L165.24 206.536L165.148 206.399L164.94 206.537L164.732 206.676L164.823 206.814L165.032 206.675ZM164.94 206.537L165.158 206.659L165.235 206.522L165.017 206.4L164.799 206.278L164.722 206.416L164.94 206.537ZM165.017 206.4L165.266 206.426L165.28 206.289L165.032 206.262L164.783 206.236L164.768 206.374L165.017 206.4ZM165.032 206.262L165.28 206.289L165.295 206.151L165.046 206.125L164.798 206.099L164.783 206.236L165.032 206.262ZM165.046 206.125L165.295 206.104L165.283 205.966L165.034 205.987L164.785 206.009L164.797 206.146L165.046 206.125ZM165.034 205.987L165.284 206.006L165.294 205.868L165.045 205.85L164.795 205.832L164.785 205.969L165.034 205.987ZM165.045 205.85L165.291 205.894L165.315 205.756L165.069 205.712L164.823 205.669L164.798 205.806L165.045 205.85ZM165.069 205.712L165.318 205.694L165.308 205.557L165.059 205.575L164.81 205.593L164.82 205.731L165.069 205.712ZM165.059 205.575L165.308 205.594L165.319 205.457L165.07 205.438L164.821 205.418L164.81 205.556L165.059 205.575ZM165.07 205.438L165.258 205.273L165.139 205.136L164.95 205.3L164.762 205.464L164.881 205.602L165.07 205.438ZM164.95 205.3L165.19 205.371L165.23 205.233L164.991 205.162L164.751 205.092L164.71 205.229L164.95 205.3ZM164.991 205.162L165.206 205.29L165.287 205.152L165.072 205.025L164.857 204.898L164.776 205.035L164.991 205.162ZM165.072 205.025L165.249 204.848L165.111 204.711L164.934 204.887L164.758 205.064L164.895 205.202L165.072 205.025ZM164.934 204.887L165.146 205.02L165.232 204.883L165.021 204.75L164.809 204.617L164.723 204.755L164.934 204.887ZM165.021 204.75L165.256 204.667L165.208 204.529L164.972 204.612L164.736 204.696L164.785 204.833L165.021 204.75ZM164.972 204.612L165.187 204.74L165.269 204.603L165.054 204.475L164.839 204.347L164.757 204.485L164.972 204.612ZM165.054 204.475L165.257 204.329L165.158 204.192L164.955 204.337L164.752 204.483L164.851 204.621L165.054 204.475ZM164.955 204.337L165.17 204.465L165.252 204.328L165.037 204.2L164.822 204.072L164.74 204.21L164.955 204.337ZM165.037 204.2L165.279 204.138L165.244 204L165.002 204.062L164.76 204.125L164.795 204.262L165.037 204.2ZM165.002 204.062L165.226 203.952L165.159 203.815L164.934 203.925L164.71 204.035L164.777 204.173L165.002 204.062ZM164.934 203.925L165.18 203.969L165.205 203.832L164.959 203.787L164.713 203.743L164.688 203.881L164.934 203.925ZM164.959 203.787L165.209 203.798L165.214 203.661L164.965 203.65L164.715 203.639L164.709 203.777L164.959 203.787ZM164.965 203.65L165.205 203.717L165.244 203.58L165.003 203.512L164.762 203.445L164.724 203.583L164.965 203.65ZM165.003 203.512L165.23 203.408L165.167 203.27L164.94 203.375L164.713 203.48L164.776 203.617L165.003 203.512ZM164.94 203.375L165.166 203.48L165.23 203.343L165.004 203.237L164.777 203.132L164.713 203.27L164.94 203.375ZM165.004 203.237L165.244 203.167L165.203 203.03L164.963 203.1L164.723 203.17L164.764 203.308L165.004 203.237ZM164.963 203.1L165.162 203.252L165.267 203.114L165.068 202.962L164.869 202.811L164.765 202.948L164.963 203.1ZM165.068 202.962L165.279 202.829L165.192 202.691L164.981 202.825L164.77 202.959L164.857 203.096L165.068 202.962ZM164.981 202.825L165.225 202.771L165.195 202.634L164.951 202.688L164.707 202.741L164.737 202.879L164.981 202.825ZM164.951 202.688L165.201 202.678L165.195 202.54L164.946 202.55L164.696 202.56L164.701 202.697L164.951 202.688ZM164.946 202.55L165.192 202.593L165.216 202.456L164.97 202.412L164.724 202.369L164.699 202.507L164.946 202.55ZM164.97 202.412L165.198 202.514L165.259 202.377L165.031 202.275L164.803 202.173L164.741 202.311L164.97 202.412ZM165.031 202.275L165.239 202.137L165.148 201.999L164.94 202.138L164.731 202.276L164.823 202.413L165.031 202.275ZM164.94 202.138L165.13 202.3L165.247 202.162L165.057 202L164.867 201.838L164.749 201.975L164.94 202.138ZM165.057 202L165.269 201.867L165.183 201.73L164.971 201.863L164.759 201.995L164.845 202.133L165.057 202ZM164.971 201.863L165.215 201.81L165.186 201.673L164.941 201.725L164.697 201.777L164.726 201.915L164.971 201.863ZM164.941 201.725L165.127 201.893L165.251 201.755L165.066 201.587L164.881 201.42L164.756 201.557L164.941 201.725ZM165.066 201.587L165.28 201.457L165.196 201.32L164.982 201.45L164.769 201.58L164.853 201.718L165.066 201.587ZM164.982 201.45L165.232 201.443L165.228 201.305L164.978 201.313L164.728 201.32L164.732 201.457L164.982 201.45ZM164.978 201.313L165.216 201.391L165.261 201.253L165.023 201.175L164.786 201.097L164.741 201.234L164.978 201.313ZM165.023 201.175L165.24 201.051L165.162 200.914L164.945 201.037L164.728 201.161L164.806 201.299L165.023 201.175ZM164.945 201.037L165.182 201.115L165.227 200.978L164.99 200.9L164.752 200.822L164.707 200.96L164.945 201.037ZM164.99 200.9L165.236 200.947L165.262 200.809L165.016 200.762L164.771 200.716L164.744 200.853L164.99 200.9ZM165.016 200.762L165.231 200.634L165.148 200.497L164.934 200.625L164.719 200.753L164.802 200.891L165.016 200.762ZM164.934 200.625L165.119 200.794L165.244 200.656L165.059 200.488L164.875 200.319L164.749 200.456L164.934 200.625ZM165.059 200.488L165.251 200.327L165.137 200.19L164.945 200.35L164.753 200.51L164.867 200.648L165.059 200.488ZM164.945 200.35L165.193 200.321L165.177 200.183L164.929 200.212L164.68 200.242L164.697 200.379L164.945 200.35ZM164.929 200.212L165.122 200.371L165.235 200.234L165.041 200.075L164.848 199.916L164.735 200.054L164.929 200.212ZM165.041 200.075L165.26 199.954L165.219 199.879L165 200L164.781 200.121L164.823 200.196L165.041 200.075Z\"\n        fill=\"black\"\n        />\n    </g>\n    <rect\n        id=\"Rectangle 90\"\n        x=\"163.5\"\n        y=\"209.5\"\n        width=\"5\"\n        height=\"2\"\n        rx=\"0.5\"\n        fill=\"#D5D5D5\"\n        stroke=\"black\"\n    />\n    <rect\n        id=\"pRegHandle\"\n        x=\"156.5\"\n        y=\"196.5\"\n        width=\"19\"\n        height=\"4\"\n        rx=\"0.5\"\n        fill=\"#5C8DF6\"\n        stroke=\"black\"\n    />\n    <rect\n        id=\"Rectangle 87\"\n        x=\"147.5\"\n        y=\"313.5\"\n        width=\"37\"\n        height=\"9\"\n        rx=\"1.5\"\n        fill=\"#E95F5F\"\n        stroke=\"black\"\n    />\n    <path\n        id=\"Rectangle 33_2\"\n        d=\"M200.5 264.5V293.5H130.5V264.5H200.5Z\"\n        fill=\"#E95F5F\"\n        stroke=\"black\"\n    />\n    <path\n        id=\"Rectangle 88\"\n        d=\"M193.5 255.5V297.901L186.666 314.5H145.334L138.5 297.901V255.5H193.5Z\"\n        fill=\"#E95F5F\"\n        stroke=\"black\"\n    />\n    <rect\n        id=\"Rectangle 34_2\"\n        x=\"204.5\"\n        y=\"263.5\"\n        width=\"77\"\n        height=\"10\"\n        rx=\"1.5\"\n        transform=\"rotate(180 204.5 263.5)\"\n        fill=\"#E95F5F\"\n        stroke=\"black\"\n    />\n    <line\n        id=\"Line 5_2\"\n        x1=\"128\"\n        y1=\"258.5\"\n        x2=\"204\"\n        y2=\"258.5\"\n        stroke=\"black\"\n    />\n    <path\n        id=\"Rectangle 89\"\n        d=\"M153.403 211.5H178.597C180.316 211.5 181.776 212.731 182.057 214.423C182.857 219.248 184.412 228.481 185.922 236.602C186.677 240.661 187.421 244.448 188.054 247.269C188.37 248.678 188.661 249.854 188.913 250.706C189.039 251.13 189.158 251.486 189.271 251.754C189.326 251.887 189.385 252.011 189.448 252.114C189.502 252.202 189.595 252.339 189.741 252.428C190.331 252.784 191.068 253.166 191.747 253.5H140.253C140.932 253.166 141.669 252.784 142.259 252.428C142.405 252.339 142.498 252.202 142.552 252.114C142.615 252.011 142.674 251.887 142.729 251.754C142.842 251.486 142.961 251.13 143.087 250.706C143.339 249.854 143.63 248.678 143.946 247.269C144.579 244.448 145.323 240.661 146.078 236.602C147.588 228.481 149.143 219.248 149.943 214.423C150.207 212.836 151.506 211.656 153.084 211.515L153.403 211.5Z\"\n        fill=\"#E95F5F\"\n        stroke=\"black\"\n    />\n    </g>\n\n    <g id=\"scale\">\n      <path\n        id=\"Rectangle 27\"\n        d=\"M548.687 647.5H697.313C697.52 647.5 697.706 647.627 697.78 647.82L712.271 685.5H533.729L548.22 647.82C548.294 647.627 548.48 647.5 548.687 647.5Z\"\n        fill=\"#CECECE\"\n        stroke=\"black\"\n      />\n      <rect\n        id=\"Rectangle 28\"\n        x=\"533.5\"\n        y=\"693.5\"\n        width=\"179\"\n        height=\"53\"\n        rx=\"3.5\"\n        fill=\"#888888\"\n        stroke=\"black\"\n      />\n      <rect\n        id=\"scaleScreen\"\n        x=\"538.5\"\n        y=\"699.5\"\n        width=\"125\"\n        height=\"41\"\n        rx=\"1.5\"\n        fill=\"#141414\"\n        stroke=\"black\"\n      />\n      <rect\n        id=\"Rectangle 29\"\n        x=\"533.5\"\n        y=\"684.5\"\n        width=\"179\"\n        height=\"10\"\n        rx=\"1.5\"\n        fill=\"#CECECE\"\n        stroke=\"black\"\n      />\n    </g>\n</g>\n)};\n\nexport default StaticElements;","import type { Component } from \"solid-js\";\n\nconst StaticDefs: Component = () => {\nreturn (\n<defs>\n\n  <linearGradient id=\"paint0_linear_4_7\" x1=\"1\" y1=\"62\" x2=\"88\" y2=\"62\" gradientUnits=\"userSpaceOnUse\">\n  <stop stop-color=\"#0045B4\"/>\n  <stop offset=\"0.716346\" stop-color=\"white\"/>\n  <stop offset=\"1\" stop-color=\"#0045B4\"/>\n  </linearGradient>\n    <linearGradient\n      id=\"paint0_linear_6_626\"\n      x1=\"542\"\n      y1=\"179\"\n      x2=\"542\"\n      y2=\"159\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"#BABEC2\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint1_linear_6_626\"\n      x1=\"1006\"\n      y1=\"423\"\n      x2=\"1006\"\n      y2=\"403\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"#BABEC2\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint2_linear_6_626\"\n      x1=\"518\"\n      y1=\"423\"\n      x2=\"518\"\n      y2=\"403\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"#BABEC2\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint3_linear_6_626\"\n      x1=\"488\"\n      y1=\"632\"\n      x2=\"508\"\n      y2=\"632\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"#BABEC2\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint4_linear_6_626\"\n      x1=\"307.5\"\n      y1=\"179\"\n      x2=\"307.5\"\n      y2=\"159\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"#BABEC2\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint5_linear_6_626\"\n      x1=\"269\"\n      y1=\"501\"\n      x2=\"269\"\n      y2=\"481\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"#BABEC2\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint6_linear_6_626\"\n      x1=\"316.5\"\n      y1=\"145\"\n      x2=\"316.5\"\n      y2=\"125\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"#BABEC2\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint7_linear_6_626\"\n      x1=\"74\"\n      y1=\"288\"\n      x2=\"74\"\n      y2=\"268\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"#BABEC2\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint8_linear_6_626\"\n      x1=\"892.5\"\n      y1=\"145\"\n      x2=\"892.5\"\n      y2=\"125\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"#BABEC2\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint9_linear_6_626\"\n      x1=\"831\"\n      y1=\"124.5\"\n      x2=\"851\"\n      y2=\"124.5\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#2D2F31\" />\n      <stop offset=\"0.298077\" stop-color=\"#808489\" />\n      <stop offset=\"0.653846\" stop-color=\"#6C6F73\" />\n      <stop offset=\"1\" stop-color=\"#2D2F31\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint10_linear_6_626\"\n      x1=\"364\"\n      y1=\"491\"\n      x2=\"393\"\n      y2=\"491\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint11_linear_6_626\"\n      x1=\"7.5\"\n      y1=\"30\"\n      x2=\"7.5\"\n      y2=\"0\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint12_linear_6_626\"\n      x1=\"7.5\"\n      y1=\"30\"\n      x2=\"7.5\"\n      y2=\"0\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint13_linear_6_626\"\n      x1=\"6.5\"\n      y1=\"30\"\n      x2=\"6.5\"\n      y2=\"0\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint14_linear_6_626\"\n      x1=\"948\"\n      y1=\"495\"\n      x2=\"977\"\n      y2=\"495\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint15_linear_6_626\"\n      x1=\"7.5\"\n      y1=\"30\"\n      x2=\"7.5\"\n      y2=\"0\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint16_linear_6_626\"\n      x1=\"7.5\"\n      y1=\"30\"\n      x2=\"7.5\"\n      y2=\"0\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint17_linear_6_626\"\n      x1=\"6.5\"\n      y1=\"30\"\n      x2=\"6.5\"\n      y2=\"0\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint18_linear_6_626\"\n      x1=\"236\"\n      y1=\"278\"\n      x2=\"265\"\n      y2=\"278\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint19_linear_6_626\"\n      x1=\"7.5\"\n      y1=\"30\"\n      x2=\"7.5\"\n      y2=\"0\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint20_linear_6_626\"\n      x1=\"7.5\"\n      y1=\"30\"\n      x2=\"7.5\"\n      y2=\"0\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint21_linear_6_626\"\n      x1=\"6.5\"\n      y1=\"30\"\n      x2=\"6.5\"\n      y2=\"0\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint22_linear_6_626\"\n      x1=\"364\"\n      y1=\"135\"\n      x2=\"393\"\n      y2=\"135\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint23_linear_6_626\"\n      x1=\"7.5\"\n      y1=\"30\"\n      x2=\"7.5\"\n      y2=\"0\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint24_linear_6_626\"\n      x1=\"7.5\"\n      y1=\"30\"\n      x2=\"7.5\"\n      y2=\"0\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint25_linear_6_626\"\n      x1=\"6.5\"\n      y1=\"30\"\n      x2=\"6.5\"\n      y2=\"0\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <radialGradient\n      id=\"paint26_radial_6_626\"\n      cx=\"0\"\n      cy=\"0\"\n      r=\"1\"\n      gradientUnits=\"userSpaceOnUse\"\n      gradientTransform=\"translate(270 118) rotate(90) scale(49.5 48.4666)\"\n    >\n      <stop stop-color=\"#8A8A97\" />\n      <stop offset=\"0.209336\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#585C61\" />\n    </radialGradient>\n    <linearGradient\n      id=\"paint27_linear_6_626\"\n      x1=\"7.5\"\n      y1=\"30\"\n      x2=\"7.5\"\n      y2=\"0\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint28_linear_6_626\"\n      x1=\"276.5\"\n      y1=\"150\"\n      x2=\"276.5\"\n      y2=\"120\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint29_linear_6_626\"\n      x1=\"6.5\"\n      y1=\"30\"\n      x2=\"6.5\"\n      y2=\"0\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <radialGradient\n      id=\"paint30_radial_6_626\"\n      cx=\"0\"\n      cy=\"0\"\n      r=\"1\"\n      gradientUnits=\"userSpaceOnUse\"\n      gradientTransform=\"translate(515 423) rotate(90) scale(49.5 48.4666)\"\n    >\n      <stop stop-color=\"#8A8A97\" />\n      <stop offset=\"0.209336\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#585C61\" />\n    </radialGradient>\n    <linearGradient\n      id=\"paint31_linear_6_626\"\n      x1=\"7.5\"\n      y1=\"30\"\n      x2=\"7.5\"\n      y2=\"0\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint32_linear_6_626\"\n      x1=\"521.5\"\n      y1=\"455\"\n      x2=\"521.5\"\n      y2=\"425\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint33_linear_6_626\"\n      x1=\"6.5\"\n      y1=\"30\"\n      x2=\"6.5\"\n      y2=\"0\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <radialGradient\n      id=\"paint34_radial_6_626\"\n      cx=\"0\"\n      cy=\"0\"\n      r=\"1\"\n      gradientUnits=\"userSpaceOnUse\"\n      gradientTransform=\"translate(174 508) rotate(-90) scale(29)\"\n    >\n      <stop stop-color=\"#121315\" />\n      <stop offset=\"0.732428\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#ADADB2\" />\n    </radialGradient>\n    <linearGradient\n      id=\"paint35_linear_6_626\"\n      x1=\"7.5\"\n      y1=\"30\"\n      x2=\"7.5\"\n      y2=\"0\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint36_linear_6_626\"\n      x1=\"7.5\"\n      y1=\"30\"\n      x2=\"7.5\"\n      y2=\"0\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint37_linear_6_626\"\n      x1=\"2.5\"\n      y1=\"16\"\n      x2=\"2.5\"\n      y2=\"0\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint38_linear_6_626\"\n      x1=\"2.5\"\n      y1=\"16\"\n      x2=\"2.5\"\n      y2=\"0\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint39_linear_6_626\"\n      x1=\"932.5\"\n      y1=\"503\"\n      x2=\"932.5\"\n      y2=\"487\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint40_linear_6_626\"\n      x1=\"2.5\"\n      y1=\"16\"\n      x2=\"2.5\"\n      y2=\"0\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <radialGradient\n      id=\"paint41_radial_6_626\"\n      cx=\"0\"\n      cy=\"0\"\n      r=\"1\"\n      gradientUnits=\"userSpaceOnUse\"\n      gradientTransform=\"translate(499 571.5) rotate(90) scale(4.5 6.11091)\"\n    >\n      <stop stop-color=\"#C3C3C3\" />\n      <stop offset=\"0.182692\" stop-color=\"#8A8A97\" />\n      <stop offset=\"0.625\" stop-color=\"#7B7B7E\" />\n      <stop offset=\"1\" stop-color=\"#0F0F10\" />\n    </radialGradient>\n    <linearGradient\n      id=\"paint42_linear_6_626\"\n      x1=\"493\"\n      y1=\"484.5\"\n      x2=\"503\"\n      y2=\"484.5\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint43_linear_6_626\"\n      x1=\"0\"\n      y1=\"2.5\"\n      x2=\"10\"\n      y2=\"2.5\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint44_linear_6_626\"\n      x1=\"484\"\n      y1=\"398.5\"\n      x2=\"512\"\n      y2=\"398.5\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"#E4E9EF\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint45_linear_6_626\"\n      x1=\"998\"\n      y1=\"211\"\n      x2=\"1026\"\n      y2=\"211\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"#E4E9EF\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint46_linear_6_626\"\n      x1=\"827\"\n      y1=\"211\"\n      x2=\"855\"\n      y2=\"211\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"#E4E9EF\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint47_linear_6_626\"\n      x1=\"951\"\n      y1=\"401\"\n      x2=\"979\"\n      y2=\"401\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"#E4E9EF\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint48_linear_6_626\"\n      x1=\"435\"\n      y1=\"306\"\n      x2=\"1085\"\n      y2=\"306\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#ADB6BF\" />\n      <stop offset=\"0.149038\" stop-color=\"#EDF5FF\" />\n      <stop offset=\"0.807692\" stop-color=\"#CFDDEF\" />\n      <stop offset=\"1\" stop-color=\"#ADB6BF\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint49_linear_6_626\"\n      x1=\"650.5\"\n      y1=\"303\"\n      x2=\"650.5\"\n      y2=\"283\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#43392A\" />\n      <stop offset=\"0.6875\" stop-color=\"#A9906A\" />\n      <stop offset=\"1\" stop-color=\"#76644A\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint50_linear_6_626\"\n      x1=\"650.5\"\n      y1=\"327\"\n      x2=\"650.5\"\n      y2=\"307\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#43392A\" />\n      <stop offset=\"0.6875\" stop-color=\"#A9906A\" />\n      <stop offset=\"1\" stop-color=\"#76644A\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint51_linear_6_626\"\n      x1=\"650.5\"\n      y1=\"359\"\n      x2=\"650.5\"\n      y2=\"339\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#43392A\" />\n      <stop offset=\"0.6875\" stop-color=\"#A9906A\" />\n      <stop offset=\"1\" stop-color=\"#76644A\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint52_linear_6_626\"\n      x1=\"650.5\"\n      y1=\"383\"\n      x2=\"650.5\"\n      y2=\"363\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#43392A\" />\n      <stop offset=\"0.6875\" stop-color=\"#A9906A\" />\n      <stop offset=\"1\" stop-color=\"#76644A\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint53_linear_6_626\"\n      x1=\"757.5\"\n      y1=\"289\"\n      x2=\"757.5\"\n      y2=\"279\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint54_linear_6_626\"\n      x1=\"595.5\"\n      y1=\"287\"\n      x2=\"595.5\"\n      y2=\"281\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"#BABEC2\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint55_linear_6_626\"\n      x1=\"757.5\"\n      y1=\"387\"\n      x2=\"757.5\"\n      y2=\"377\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint56_linear_6_626\"\n      x1=\"595.5\"\n      y1=\"385\"\n      x2=\"595.5\"\n      y2=\"379\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"#BABEC2\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint57_linear_6_626\"\n      x1=\"493\"\n      y1=\"392.5\"\n      x2=\"446\"\n      y2=\"269.5\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.724561\" stop-color=\"#BABEC2\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint58_linear_6_626\"\n      x1=\"786.249\"\n      y1=\"397.935\"\n      x2=\"786.249\"\n      y2=\"214.011\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop offset=\"0.115021\" stop-color=\"#585C61\" />\n      <stop offset=\"0.674519\" stop-color=\"#BABEC2\" />\n      <stop offset=\"0.874707\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint59_linear_6_626\"\n      x1=\"-1084.16\"\n      y1=\"397.99\"\n      x2=\"-1084.16\"\n      y2=\"214.011\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop offset=\"0.115021\" stop-color=\"#585C61\" />\n      <stop offset=\"0.674519\" stop-color=\"#BABEC2\" />\n      <stop offset=\"0.874707\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint60_linear_6_626\"\n      x1=\"367\"\n      y1=\"268.5\"\n      x2=\"395\"\n      y2=\"268.5\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"#E4E9EF\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint61_linear_6_626\"\n      x1=\"367\"\n      y1=\"397.5\"\n      x2=\"395\"\n      y2=\"397.5\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"#E4E9EF\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint62_linear_6_626\"\n      x1=\"381\"\n      y1=\"393\"\n      x2=\"381\"\n      y2=\"273\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"#BABEC2\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint63_linear_6_626\"\n      x1=\"428\"\n      y1=\"278\"\n      x2=\"428\"\n      y2=\"268\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint64_linear_6_626\"\n      x1=\"428\"\n      y1=\"298\"\n      x2=\"428\"\n      y2=\"288\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint65_linear_6_626\"\n      x1=\"428\"\n      y1=\"318\"\n      x2=\"428\"\n      y2=\"308\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint66_linear_6_626\"\n      x1=\"428\"\n      y1=\"338\"\n      x2=\"428\"\n      y2=\"328\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint67_linear_6_626\"\n      x1=\"428\"\n      y1=\"358\"\n      x2=\"428\"\n      y2=\"348\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint68_linear_6_626\"\n      x1=\"428\"\n      y1=\"378\"\n      x2=\"428\"\n      y2=\"368\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint69_linear_6_626\"\n      x1=\"428\"\n      y1=\"398\"\n      x2=\"428\"\n      y2=\"388\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint70_linear_6_626\"\n      x1=\"428\"\n      y1=\"403\"\n      x2=\"428\"\n      y2=\"263\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint71_linear_6_626\"\n      x1=\"336\"\n      y1=\"278\"\n      x2=\"336\"\n      y2=\"268\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint72_linear_6_626\"\n      x1=\"336\"\n      y1=\"298\"\n      x2=\"336\"\n      y2=\"288\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint73_linear_6_626\"\n      x1=\"336\"\n      y1=\"318\"\n      x2=\"336\"\n      y2=\"308\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint74_linear_6_626\"\n      x1=\"336\"\n      y1=\"338\"\n      x2=\"336\"\n      y2=\"328\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint75_linear_6_626\"\n      x1=\"336\"\n      y1=\"358\"\n      x2=\"336\"\n      y2=\"348\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint76_linear_6_626\"\n      x1=\"336\"\n      y1=\"378\"\n      x2=\"336\"\n      y2=\"368\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint77_linear_6_626\"\n      x1=\"336\"\n      y1=\"398\"\n      x2=\"336\"\n      y2=\"388\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint78_linear_6_626\"\n      x1=\"336\"\n      y1=\"403\"\n      x2=\"336\"\n      y2=\"263\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint79_linear_6_626\"\n      x1=\"5.01541\"\n      y1=\"16.1003\"\n      x2=\"5.01541\"\n      y2=\"0\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint80_linear_6_626\"\n      x1=\"75\"\n      y1=\"290\"\n      x2=\"75\"\n      y2=\"266\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint81_linear_6_626\"\n      x1=\"94.5\"\n      y1=\"293\"\n      x2=\"94.5\"\n      y2=\"263\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint82_linear_6_626\"\n      x1=\"55.5\"\n      y1=\"293\"\n      x2=\"55.5\"\n      y2=\"263\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint83_linear_6_626\"\n      x1=\"525\"\n      y1=\"638\"\n      x2=\"525\"\n      y2=\"614\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint84_linear_6_626\"\n      x1=\"520.5\"\n      y1=\"671\"\n      x2=\"520.5\"\n      y2=\"641\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint85_linear_6_626\"\n      x1=\"520.5\"\n      y1=\"632\"\n      x2=\"520.5\"\n      y2=\"602\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#585C61\" />\n      <stop offset=\"0.697115\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#8A8A97\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint86_linear_6_626\"\n      x1=\"579\"\n      y1=\"607\"\n      x2=\"666\"\n      y2=\"607\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#0045B4\" />\n      <stop offset=\"0.716346\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#0045B4\" />\n    </linearGradient>\n    <linearGradient\n      id=\"paint87_linear_6_626\"\n      x1=\"278\"\n      y1=\"674\"\n      x2=\"365\"\n      y2=\"674\"\n      gradientUnits=\"userSpaceOnUse\"\n    >\n      <stop stop-color=\"#0045B4\" />\n      <stop offset=\"0.716346\" stop-color=\"white\" />\n      <stop offset=\"1\" stop-color=\"#0045B4\" />\n    </linearGradient>\n    <clipPath id=\"clip0_6_626\">\n      <rect width=\"1133\" height=\"777\" fill=\"white\" />\n    </clipPath>\n  </defs>\n)};\n\nexport default StaticDefs;","import { type Component } from \"solid-js\";\nimport \"./Rotameter.css\";\n\ninterface RotameterProps {\n  flowrate: () => number; // Optional prop to set the flowrate\n}\n\nconst Rotameter: Component<RotameterProps> = ({ flowrate }) => {\n  const pixels = 80; // Total pixels the ball can move\n  const maxFlowrate = 60; // Max flowrate corresponding to max pixels\n  const pixelsPerFlowrate = pixels / maxFlowrate;\n  \n\n  return (\n<g id=\"rotameter\">\n<path\n        id=\"ball\"\n        class=\"rotameter-ball\"\n        d=\"M498 569.25C500.103 569.25 501.75 570.735 501.75 572.5C501.75 574.265 500.103 575.75 498 575.75C495.897 575.75 494.25 574.265 494.25 572.5C494.25 570.735 495.897 569.25 498 569.25Z\"\n        fill=\"url(#paint41_radial_6_626)\"\n        stroke=\"black\"\n        stroke-width=\"0.5\"\n        transform={`translate(0, ${-flowrate() * pixelsPerFlowrate})`} // Move ball up based on flowrate\n      />\n  <g id=\"Group 3\">\n<rect id=\"Rectangle 94\" x=\"493.5\" y=\"482.5\" width=\"9\" height=\"4\" rx=\"0.5\" fill=\"url(#paint42_linear_6_626)\" stroke=\"black\"/>\n<g id=\"Rectangle 87_2\">\n<path d=\"M488 466H508V478H488V466Z\" fill=\"#CECFD0\"/>\n<path d=\"M488.1 466L488.335 465.915L488.275 465.75H488.1V466ZM488.175 466.207L487.94 466.292L487.991 466.434L488.141 466.455L488.175 466.207ZM488.35 466.231L488.316 466.479L488.433 466.495L488.519 466.415L488.35 466.231ZM488.525 466.07L488.429 465.839L488.388 465.856L488.356 465.886L488.525 466.07ZM488.7 465.997L488.796 466.228L488.861 466.202L488.902 466.145L488.7 465.997ZM488.875 465.757L489.066 465.596L488.86 465.353L488.673 465.61L488.875 465.757ZM489.05 465.964L489.254 465.819L489.248 465.811L489.241 465.803L489.05 465.964ZM489.225 466.21L489.021 466.355L489.216 466.628L489.422 466.364L489.225 466.21ZM489.4 465.985L489.298 465.757L489.241 465.782L489.203 465.832L489.4 465.985ZM489.575 465.908L489.674 465.678L489.574 465.635L489.473 465.679L489.575 465.908ZM489.75 465.983L489.651 466.213L489.781 466.269L489.896 466.186L489.75 465.983ZM489.925 465.857L490.086 465.666L489.937 465.541L489.779 465.654L489.925 465.857ZM490.1 466.004L489.939 466.195L490.135 466.36L490.295 466.16L490.1 466.004ZM490.275 465.785L490.483 465.647L490.294 465.362L490.08 465.629L490.275 465.785ZM490.45 466.048L490.242 466.187L490.347 466.344L490.527 466.286L490.45 466.048ZM490.625 465.991L490.609 465.742L490.578 465.744L490.548 465.754L490.625 465.991ZM490.8 465.98L490.816 466.23L490.875 466.226L490.927 466.196L490.8 465.98ZM490.975 465.877L491.145 465.694L491.008 465.567L490.848 465.662L490.975 465.877ZM491.15 466.039L490.98 466.223L491.169 466.397L491.338 466.204L491.15 466.039ZM491.325 465.84L491.33 465.59L491.214 465.588L491.137 465.675L491.325 465.84ZM491.5 465.843L491.558 465.6L491.532 465.594L491.505 465.593L491.5 465.843ZM491.675 465.885L491.617 466.128L491.673 466.141L491.728 466.129L491.675 465.885ZM491.85 465.847L492.079 465.747L491.997 465.559L491.797 465.602L491.85 465.847ZM492.025 466.249L491.796 466.348L491.981 466.774L492.235 466.385L492.025 466.249ZM492.2 465.98L492.026 465.8L492.006 465.82L491.99 465.843L492.2 465.98ZM492.375 465.811L492.376 465.561L492.274 465.56L492.201 465.631L492.375 465.811ZM492.55 465.811L492.589 465.564L492.57 465.561L492.551 465.561L492.55 465.811ZM492.725 465.839L492.927 465.692L492.866 465.608L492.764 465.592L492.725 465.839ZM492.9 466.079L492.698 466.226L492.723 466.261L492.758 466.285L492.9 466.079ZM493.075 466.2L492.933 466.406L493.024 466.469L493.133 466.444L493.075 466.2ZM493.25 466.159L493.308 466.402L493.42 466.375L493.473 466.273L493.25 466.159ZM493.425 465.817L493.615 465.655L493.373 465.37L493.202 465.703L493.425 465.817ZM493.6 466.022L493.41 466.184L493.622 466.433L493.806 466.164L493.6 466.022ZM493.775 465.767L493.863 465.533L493.68 465.464L493.569 465.626L493.775 465.767ZM493.95 465.833L494.177 465.728L494.134 465.635L494.038 465.599L493.95 465.833ZM494.125 466.213L493.898 466.318L493.961 466.454L494.111 466.463L494.125 466.213ZM494.3 466.223L494.286 466.472L494.365 466.477L494.432 466.435L494.3 466.223ZM494.475 466.114L494.44 465.867L494.388 465.874L494.343 465.902L494.475 466.114ZM494.65 466.089L494.685 466.336L494.741 466.329L494.787 466.298L494.65 466.089ZM494.825 465.974L494.985 465.782L494.842 465.663L494.688 465.765L494.825 465.974ZM495 466.119L494.84 466.312L495.063 466.496L495.213 466.249L495 466.119ZM495.175 465.832L495.098 465.594L495.01 465.623L494.962 465.702L495.175 465.832ZM495.35 465.776L495.56 465.641L495.457 465.479L495.273 465.538L495.35 465.776ZM495.525 466.049L495.315 466.184L495.524 466.51L495.735 466.185L495.525 466.049ZM495.7 465.779L495.887 465.612L495.669 465.367L495.49 465.643L495.7 465.779ZM495.875 465.975L495.688 466.141L495.837 466.308L496.019 466.179L495.875 465.975ZM496.05 465.852L496.263 465.721L496.123 465.494L495.906 465.647L496.05 465.852ZM496.225 466.136L496.012 466.267L496.063 466.349L496.155 466.376L496.225 466.136ZM496.4 466.187L496.33 466.427L496.364 466.437L496.4 466.437L496.4 466.187ZM496.575 466.187L496.575 466.437L496.735 466.437L496.802 466.292L496.575 466.187ZM496.75 465.807L496.719 465.559L496.581 465.577L496.523 465.703L496.75 465.807ZM496.925 465.785L496.989 465.543L496.942 465.531L496.894 465.537L496.925 465.785ZM497.1 465.832L497.036 466.073L497.091 466.088L497.146 466.077L497.1 465.832ZM497.275 465.798L497.451 465.621L497.358 465.528L497.229 465.553L497.275 465.798ZM497.45 465.972L497.634 465.803L497.626 465.795L497.45 465.972ZM497.625 466.162L497.441 466.332L497.522 466.419L497.641 466.412L497.625 466.162ZM497.8 466.151L497.816 466.401L497.939 466.393L498.008 466.29L497.8 466.151ZM497.975 465.889L498.173 465.736L497.961 465.459L497.767 465.75L497.975 465.889ZM498.15 466.117L497.952 466.269L498.077 466.432L498.261 466.341L498.15 466.117ZM498.325 466.03L498.462 465.821L498.342 465.743L498.214 465.806L498.325 466.03ZM498.5 466.144L498.363 466.354L498.469 466.423L498.588 466.378L498.5 466.144ZM498.675 466.079L498.638 465.831L498.612 465.835L498.587 465.844L498.675 466.079ZM498.85 466.052L498.887 466.3L498.971 466.287L499.03 466.226L498.85 466.052ZM499.025 465.871L499.246 465.755L499.085 465.448L498.845 465.697L499.025 465.871ZM499.2 466.204L498.979 466.32L499.198 466.738L499.42 466.322L499.2 466.204ZM499.375 465.877L499.447 465.637L499.251 465.579L499.155 465.759L499.375 465.877ZM499.55 465.929L499.478 466.169L499.606 466.207L499.708 466.123L499.55 465.929ZM499.725 465.786L499.936 465.652L499.785 465.414L499.567 465.593L499.725 465.786ZM499.9 466.061L499.689 466.195L499.882 466.498L500.099 466.212L499.9 466.061ZM500.075 465.831L499.981 465.599L499.917 465.625L499.876 465.679L500.075 465.831ZM500.25 465.759L500.478 465.657L500.379 465.436L500.156 465.528L500.25 465.759ZM500.425 466.15L500.197 466.252L500.34 466.571L500.596 466.332L500.425 466.15ZM500.6 465.986L500.662 465.744L500.529 465.71L500.429 465.803L500.6 465.986ZM500.775 466.031L500.713 466.273L500.758 466.284L500.805 466.279L500.775 466.031ZM500.95 466.01L501.04 465.776L500.982 465.754L500.92 465.761L500.95 466.01ZM501.125 466.077L501.035 466.31L501.144 466.352L501.246 466.296L501.125 466.077ZM501.3 465.98L501.243 465.737L501.209 465.744L501.179 465.761L501.3 465.98ZM501.475 465.939L501.561 465.704L501.491 465.678L501.418 465.696L501.475 465.939ZM501.65 466.003L501.831 465.831L501.791 465.789L501.736 465.769L501.65 466.003ZM501.825 466.188L501.644 466.36L501.855 466.583L502.03 466.33L501.825 466.188ZM502 465.935L501.857 465.73L501.82 465.756L501.795 465.793L502 465.935ZM502.175 465.814L502.395 465.695L502.263 465.448L502.032 465.608L502.175 465.814ZM502.35 466.139L502.13 466.258L502.17 466.333L502.249 466.368L502.35 466.139ZM502.525 466.217L502.424 466.445L502.559 466.505L502.676 466.416L502.525 466.217ZM502.7 466.084L502.648 465.839L502.593 465.851L502.549 465.885L502.7 466.084ZM502.875 466.047L502.927 466.291L502.966 466.283L503.001 466.263L502.875 466.047ZM503.05 465.945L502.955 465.714L502.939 465.72L502.924 465.729L503.05 465.945ZM503.225 465.873L503.437 465.74L503.325 465.561L503.13 465.641L503.225 465.873ZM503.4 466.151L503.188 466.284L503.278 466.427L503.444 466.397L503.4 466.151ZM503.575 466.12L503.619 466.366L503.708 466.35L503.766 466.281L503.575 466.12ZM503.75 465.913L503.613 465.704L503.583 465.724L503.559 465.752L503.75 465.913ZM503.925 465.798L504.097 465.617L503.954 465.48L503.788 465.589L503.925 465.798ZM504.1 465.965L503.928 466.146L504.121 466.33L504.292 466.125L504.1 465.965ZM504.275 465.754L504.494 465.634L504.318 465.311L504.083 465.594L504.275 465.754ZM504.45 466.074L504.231 466.194L504.356 466.424L504.58 466.287L504.45 466.074ZM504.625 465.967L504.525 465.738L504.51 465.745L504.495 465.754L504.625 465.967ZM504.8 465.891L504.9 466.121L504.915 466.114L504.93 466.105L504.8 465.891ZM504.975 465.785L505.185 465.65L505.053 465.445L504.845 465.571L504.975 465.785ZM505.15 466.057L504.94 466.192L505.155 466.526L505.363 466.188L505.15 466.057ZM505.325 465.772L505.559 465.685L505.38 465.206L505.112 465.641L505.325 465.772ZM505.5 466.24L505.266 466.328L505.466 466.863L505.723 466.352L505.5 466.24ZM505.675 465.892L505.831 465.697L505.59 465.504L505.452 465.78L505.675 465.892ZM505.85 466.032L505.694 466.228L505.818 466.327L505.961 466.256L505.85 466.032ZM506.025 465.946L506.236 465.811L506.115 465.622L505.914 465.722L506.025 465.946ZM506.2 466.22L505.989 466.354L506.239 466.744L506.428 466.322L506.2 466.22ZM506.375 465.829L506.398 465.58L506.22 465.564L506.147 465.727L506.375 465.829ZM506.55 465.845L506.527 466.094L506.584 466.1L506.638 466.08L506.55 465.845ZM506.725 465.78L506.696 465.532L506.666 465.535L506.637 465.546L506.725 465.78ZM506.9 465.759L507.029 465.545L506.956 465.501L506.871 465.511L506.9 465.759ZM507.075 465.865L506.946 466.079L507.028 466.128L507.121 466.11L507.075 465.865ZM507.25 465.832L507.341 465.599L507.274 465.573L507.204 465.586L507.25 465.832ZM507.425 465.9L507.646 465.783L507.602 465.701L507.516 465.668L507.425 465.9ZM507.6 466.23L507.379 466.347L507.529 466.628L507.767 466.416L507.6 466.23ZM507.775 466.073L507.942 466.26L507.942 466.259L507.775 466.073ZM507.95 465.916L508.164 466.045L507.783 465.73L507.95 465.916ZM507.824 466.125L507.61 465.996L507.592 466.026L507.582 466.059L507.824 466.125ZM507.776 466.3L507.535 466.234L507.489 466.403L507.631 466.504L507.776 466.3ZM508.022 466.475L508.257 466.561L508.323 466.382L508.167 466.271L508.022 466.475ZM507.958 466.65L507.723 466.564L507.717 466.58L507.713 466.597L507.958 466.65ZM507.919 466.825L507.675 466.772L507.636 466.949L507.794 467.041L507.919 466.825ZM508.22 467L508.356 467.21L508.699 466.989L508.346 466.784L508.22 467ZM507.949 467.175L507.813 466.965L507.776 466.989L507.749 467.025L507.949 467.175ZM507.817 467.35L507.617 467.2L507.433 467.445L507.71 467.576L507.817 467.35ZM508.188 467.525L508.283 467.756L508.807 467.541L508.294 467.299L508.188 467.525ZM507.762 467.7L507.667 467.469L507.238 467.645L507.622 467.907L507.762 467.7ZM508.019 467.875L508.251 467.78L508.222 467.711L508.16 467.668L508.019 467.875ZM508.091 468.05L508.25 468.243L508.392 468.126L508.322 467.955L508.091 468.05ZM507.878 468.225L507.719 468.032L507.499 468.214L507.708 468.408L507.878 468.225ZM508.067 468.4L508.212 468.603L508.461 468.425L508.237 468.217L508.067 468.4ZM507.822 468.575L507.676 468.372L507.485 468.508L507.61 468.707L507.822 468.575ZM507.931 468.75L507.719 468.883L507.726 468.893L507.734 468.904L507.931 468.75ZM508.067 468.925L508.28 469.056L508.371 468.908L508.265 468.771L508.067 468.925ZM507.959 469.1L507.747 468.969L507.619 469.176L507.823 469.309L507.959 469.1ZM508.227 469.275L508.375 469.477L508.666 469.263L508.364 469.066L508.227 469.275ZM507.988 469.45L507.84 469.248L507.824 469.26L507.809 469.275L507.988 469.45ZM507.817 469.625L507.638 469.45L507.389 469.705L507.713 469.853L507.817 469.625ZM508.202 469.8L508.32 470.02L508.763 469.781L508.305 469.572L508.202 469.8ZM507.877 469.975L507.759 469.755L507.666 469.805L507.637 469.906L507.877 469.975ZM507.827 470.15L507.587 470.081L507.557 470.187L507.614 470.28L507.827 470.15ZM507.934 470.325L508.181 470.364L508.195 470.273L508.147 470.195L507.934 470.325ZM507.907 470.5L507.66 470.461L507.639 470.595L507.739 470.685L507.907 470.5ZM508.099 470.675L508.257 470.869L508.483 470.685L508.267 470.49L508.099 470.675ZM507.884 470.85L507.726 470.656L507.69 470.685L507.667 470.726L507.884 470.85ZM507.784 471.025L507.567 470.901L507.495 471.027L507.569 471.152L507.784 471.025ZM507.887 471.2L508.106 471.321L508.175 471.196L508.103 471.073L507.887 471.2ZM507.79 471.375L507.572 471.254L507.493 471.396L507.591 471.526L507.79 471.375ZM507.923 471.55L508.146 471.663L508.217 471.523L508.122 471.399L507.923 471.55ZM507.835 471.725L507.612 471.612L507.545 471.745L507.629 471.867L507.835 471.725ZM507.956 471.9L508.139 472.07L508.275 471.923L508.161 471.758L507.956 471.9ZM507.794 472.075L507.61 471.905L507.504 472.02L507.561 472.166L507.794 472.075ZM507.863 472.25L507.63 472.341L507.662 472.424L507.739 472.467L507.863 472.25ZM508.17 472.425L508.403 472.515L508.48 472.314L508.294 472.208L508.17 472.425ZM508.102 472.6L507.869 472.51L507.832 472.608L507.875 472.703L508.102 472.6ZM508.182 472.775L508.408 472.882L508.457 472.777L508.409 472.672L508.182 472.775ZM508.099 472.95L507.873 472.843L507.864 472.862L507.858 472.883L508.099 472.95ZM508.05 473.125L507.809 473.058L507.773 473.189L507.863 473.29L508.05 473.125ZM508.205 473.3L508.329 473.517L508.594 473.364L508.392 473.135L508.205 473.3ZM507.901 473.475L507.776 473.258L507.409 473.47L507.772 473.689L507.901 473.475ZM508.192 473.65L508.286 473.881L508.747 473.693L508.321 473.436L508.192 473.65ZM507.764 473.825L507.67 473.594L507.147 473.807L507.656 474.051L507.764 473.825ZM508.13 474L508.327 474.155L508.521 473.909L508.238 473.774L508.13 474ZM507.992 474.175L508.146 474.372L508.169 474.354L508.188 474.33L507.992 474.175ZM507.767 474.35L507.614 474.153L507.429 474.296L507.56 474.49L507.767 474.35ZM507.886 474.525L508.116 474.428L508.107 474.405L508.093 474.385L507.886 474.525ZM507.96 474.7L508.12 474.892L508.262 474.773L508.19 474.603L507.96 474.7ZM507.75 474.875L507.59 474.683L507.275 474.946L507.654 475.106L507.75 474.875ZM508.167 475.05L508.359 475.21L508.576 474.951L508.264 474.819L508.167 475.05ZM508.021 475.225L507.829 475.065L507.755 475.153L507.774 475.267L508.021 475.225ZM508.051 475.4L508.255 475.545L508.314 475.46L508.297 475.358L508.051 475.4ZM507.927 475.575L507.723 475.43L507.636 475.553L507.703 475.687L507.927 475.575ZM508.014 475.75L507.79 475.862L507.813 475.906L507.85 475.939L508.014 475.75ZM508.216 475.925L508.32 476.152L508.674 475.991L508.38 475.736L508.216 475.925ZM507.832 476.1L507.728 475.873L507.4 476.022L507.655 476.277L507.832 476.1ZM508.007 476.275L508.185 476.451L508.361 476.274L508.184 476.098L508.007 476.275ZM507.834 476.45L507.656 476.274L507.473 476.458L507.664 476.634L507.834 476.45ZM508.024 476.625L508.245 476.508L508.225 476.47L508.193 476.441L508.024 476.625ZM508.117 476.8L508.271 476.997L508.435 476.868L508.338 476.683L508.117 476.8ZM507.894 476.975L507.739 476.778L507.437 477.016L507.776 477.196L507.894 476.975ZM508.224 477.15L508.321 477.38L508.804 477.175L508.341 476.929L508.224 477.15ZM507.812 477.325L507.714 477.095L507.334 477.256L507.653 477.518L507.812 477.325ZM508.024 477.5L508.259 477.414L508.236 477.35L508.183 477.307L508.024 477.5ZM508.089 477.675L508.319 477.773L508.358 477.682L508.323 477.589L508.089 477.675ZM508.014 477.85L507.978 478.097L508.168 478.125L508.244 477.948L508.014 477.85ZM507.975 477.844L508.011 477.597L507.876 477.577L507.786 477.681L507.975 477.844ZM507.8 478.046L507.588 478.178L507.767 478.466L507.989 478.21L507.8 478.046ZM507.625 477.765L507.837 477.633L507.737 477.471L507.554 477.525L507.625 477.765ZM507.45 477.817L507.408 478.063L507.465 478.073L507.521 478.056L507.45 477.817ZM507.275 477.787L507.317 477.54L507.144 477.51L507.057 477.664L507.275 477.787ZM507.1 478.098L506.891 478.234L507.116 478.579L507.318 478.22L507.1 478.098ZM506.925 477.83L507.134 477.693L507.006 477.496L506.801 477.612L506.925 477.83ZM506.75 477.929L506.831 478.166L506.853 478.158L506.874 478.147L506.75 477.929ZM506.575 477.989L506.494 477.753L506.457 477.765L506.426 477.788L506.575 477.989ZM506.4 478.119L506.197 478.264L506.344 478.471L506.549 478.32L506.4 478.119ZM506.225 477.874L506.428 477.729L506.392 477.677L506.335 477.65L506.225 477.874ZM506.05 477.788L506.16 477.564L506.015 477.493L505.891 477.595L506.05 477.788ZM505.875 477.933L505.915 478.179L505.982 478.169L506.034 478.125L505.875 477.933ZM505.7 477.961L505.66 477.714L505.555 477.731L505.494 477.819L505.7 477.961ZM505.525 478.215L505.422 478.443L505.613 478.529L505.731 478.357L505.525 478.215ZM505.35 478.136L505.453 477.908L505.379 477.875L505.3 477.891L505.35 478.136ZM505.175 478.172L504.952 478.284L505.038 478.455L505.225 478.417L505.175 478.172ZM505 477.825L505.223 477.712L505.053 477.375L504.809 477.663L505 477.825ZM504.825 478.031L504.649 478.209L504.841 478.4L505.016 478.193L504.825 478.031ZM504.65 477.858L504.826 477.68L504.727 477.582L504.591 477.615L504.65 477.858ZM504.475 477.9L504.487 478.149L504.51 478.148L504.534 478.143L504.475 477.9ZM504.3 477.908L504.277 478.157L504.294 478.158L504.312 478.158L504.3 477.908ZM504.125 477.892L504.148 477.643L503.976 477.627L503.9 477.782L504.125 477.892ZM503.95 478.25L503.715 478.336L503.917 478.887L504.175 478.36L503.95 478.25ZM503.775 477.771L504.01 477.685L503.881 477.332L503.605 477.588L503.775 477.771ZM503.6 477.933L503.76 478.126L503.77 478.117L503.6 477.933ZM503.425 478.078L503.263 478.268L503.423 478.405L503.584 478.271L503.425 478.078ZM503.25 477.929L503.412 477.739L503.289 477.634L503.143 477.703L503.25 477.929ZM503.075 478.012L502.896 478.186L503.02 478.314L503.182 478.238L503.075 478.012ZM502.9 477.832L503.079 477.658L502.824 477.395L502.672 477.729L502.9 477.832ZM502.725 478.218L502.522 478.364L502.774 478.715L502.953 478.321L502.725 478.218ZM502.55 477.974L502.753 477.828L502.698 477.752L502.607 477.731L502.55 477.974ZM502.375 477.933L502.432 477.69L502.337 477.667L502.252 477.715L502.375 477.933ZM502.2 478.032L502.065 478.242L502.191 478.323L502.323 478.249L502.2 478.032ZM502.025 477.919L502.16 477.709L502.123 477.685L502.079 477.675L502.025 477.919ZM501.85 477.88L501.904 477.636L501.798 477.612L501.708 477.674L501.85 477.88ZM501.675 478.001L501.533 477.795L501.527 477.799L501.675 478.001ZM501.5 478.129L501.31 478.292L501.461 478.468L501.648 478.331L501.5 478.129ZM501.325 477.924L501.515 477.762L501.404 477.631L501.242 477.688L501.325 477.924ZM501.15 477.986L500.998 478.185L501.106 478.266L501.233 478.222L501.15 477.986ZM500.975 477.852L501.127 477.654L500.916 477.492L500.767 477.713L500.975 477.852ZM500.8 478.113L500.672 478.328L500.876 478.449L501.008 478.252L500.8 478.113ZM500.625 478.009L500.753 477.794L500.567 477.684L500.431 477.851L500.625 478.009ZM500.45 478.224L500.22 478.322L500.383 478.702L500.644 478.382L500.45 478.224ZM500.275 477.815L500.505 477.717L500.446 477.581L500.299 477.567L500.275 477.815ZM500.1 477.799L500.124 477.55L499.942 477.532L499.87 477.7L500.1 477.799ZM499.925 478.209L499.971 478.454L500.103 478.429L500.155 478.307L499.925 478.209ZM499.75 478.242L499.523 478.346L499.604 478.524L499.796 478.487L499.75 478.242ZM499.575 477.86L499.802 477.756L499.733 477.604L499.566 477.61L499.575 477.86ZM499.4 477.866L499.391 477.616L499.249 477.621L499.18 477.747L499.4 477.866ZM499.225 478.188L499.006 478.308L499.226 478.708L499.445 478.307L499.225 478.188ZM499.05 477.87L499.269 477.749L499.14 477.515L498.915 477.659L499.05 477.87ZM498.875 477.982L498.703 478.163L498.845 478.298L499.01 478.192L498.875 477.982ZM498.7 477.816L498.872 477.634L498.764 477.531L498.622 477.578L498.7 477.816ZM498.525 477.873L498.478 478.119L498.541 478.131L498.603 478.111L498.525 477.873ZM498.35 477.839L498.397 477.594L498.272 477.57L498.179 477.657L498.35 477.839ZM498.175 478.004L498.104 478.243L498.241 478.284L498.346 478.186L498.175 478.004ZM498 477.952L497.813 478.118L497.86 478.171L497.929 478.191L498 477.952ZM497.825 477.754L498.012 477.588L497.873 477.432L497.695 477.541L497.825 477.754ZM497.65 477.861L497.768 478.082L497.78 478.074L497.65 477.861ZM497.475 477.955L497.357 477.734L497.309 477.76L497.276 477.803L497.475 477.955ZM497.3 478.183L497.091 478.32L497.284 478.615L497.499 478.335L497.3 478.183ZM497.125 477.916L497.334 477.779L497.151 477.5L496.935 477.754L497.125 477.916ZM496.95 478.122L496.774 478.3L496.966 478.489L497.14 478.284L496.95 478.122ZM496.775 477.949L496.951 477.771L496.766 477.589L496.591 477.78L496.775 477.949ZM496.6 478.14L496.464 478.35L496.641 478.465L496.784 478.309L496.6 478.14ZM496.425 478.027L496.561 477.817L496.44 477.739L496.312 477.804L496.425 478.027ZM496.25 478.115L496.082 478.3L496.209 478.416L496.363 478.338L496.25 478.115ZM496.075 477.955L496.243 477.771L496.03 477.576L495.868 477.815L496.075 477.955ZM495.9 478.214L495.897 478.464L496.031 478.466L496.107 478.354L495.9 478.214ZM495.725 478.212L495.515 478.347L495.588 478.46L495.722 478.462L495.725 478.212ZM495.55 477.94L495.76 477.805L495.741 477.775L495.714 477.751L495.55 477.94ZM495.375 477.787L495.539 477.599L495.366 477.448L495.201 477.608L495.375 477.787ZM495.2 477.957L495.349 478.157L495.362 478.148L495.374 478.136L495.2 477.957ZM495.025 478.087L494.819 478.228L494.966 478.443L495.174 478.287L495.025 478.087ZM494.85 477.832L495.056 477.69L494.997 477.605L494.896 477.586L494.85 477.832ZM494.675 477.8L494.721 477.554L494.634 477.538L494.557 477.579L494.675 477.8ZM494.5 477.893L494.39 478.118L494.505 478.174L494.618 478.114L494.5 477.893ZM494.325 477.807L494.435 477.583L494.2 477.467L494.096 477.708L494.325 477.807ZM494.15 478.212L494.068 478.448L494.288 478.524L494.379 478.311L494.15 478.212ZM493.975 478.152L494.057 477.915L493.962 477.883L493.871 477.924L493.975 478.152ZM493.8 478.232L493.594 478.374L493.713 478.546L493.904 478.459L493.8 478.232ZM493.625 477.978L493.831 477.836L493.731 477.692L493.561 477.737L493.625 477.978ZM493.45 478.024L493.288 478.214L493.387 478.3L493.514 478.266L493.45 478.024ZM493.275 477.875L493.437 477.685L493.192 477.475L493.051 477.765L493.275 477.875ZM493.1 478.232L492.898 478.379L493.142 478.713L493.324 478.342L493.1 478.232ZM492.925 477.992L493.127 477.845L492.997 477.667L492.804 477.773L492.925 477.992ZM492.75 478.088L492.625 478.305L492.747 478.375L492.871 478.307L492.75 478.088ZM492.575 477.987L492.7 477.771L492.624 477.727L492.538 477.74L492.575 477.987ZM492.4 478.014L492.417 478.263L492.427 478.262L492.437 478.261L492.4 478.014ZM492.225 478.025L492.208 477.776L492.164 477.779L492.123 477.797L492.225 478.025ZM492.05 478.103L491.837 478.235L491.952 478.421L492.152 478.332L492.05 478.103ZM491.875 477.82L492.088 477.689L491.941 477.451L491.721 477.623L491.875 477.82ZM491.7 477.957L491.57 478.17L491.718 478.26L491.854 478.154L491.7 477.957ZM491.525 477.85L491.655 477.637L491.431 477.501L491.305 477.731L491.525 477.85ZM491.35 478.172L491.175 478.35L491.411 478.583L491.57 478.291L491.35 478.172ZM491.175 478L491.35 477.822L491.34 477.812L491.328 477.803L491.175 478ZM491 477.864L491.153 477.667L490.962 477.519L490.808 477.704L491 477.864ZM490.825 478.075L490.846 478.324L490.95 478.315L491.017 478.235L490.825 478.075ZM490.65 478.089L490.442 478.227L490.523 478.351L490.671 478.338L490.65 478.089ZM490.475 477.825L490.683 477.687L490.59 477.546L490.424 477.581L490.475 477.825ZM490.3 477.862L490.337 478.109L490.351 478.107L490.3 477.862ZM490.125 477.888L490.088 477.641L489.976 477.658L489.915 477.753L490.125 477.888ZM489.95 478.16L489.723 478.265L489.914 478.678L490.16 478.296L489.95 478.16ZM489.775 477.783L490.002 477.678L489.785 477.21L489.552 477.67L489.775 477.783ZM489.6 478.128L489.44 478.32L489.681 478.521L489.823 478.241L489.6 478.128ZM489.425 477.982L489.585 477.79L489.567 477.775L489.546 477.763L489.425 477.982ZM489.25 477.885L489.371 477.666L489.256 477.602L489.138 477.661L489.25 477.885ZM489.075 477.972L488.963 477.748L488.953 477.754L489.075 477.972ZM488.9 478.07L488.778 477.852L488.747 477.869L488.722 477.895L488.9 478.07ZM488.725 478.248L488.536 478.412L488.713 478.616L488.903 478.423L488.725 478.248ZM488.55 478.046L488.349 478.194L488.354 478.202L488.361 478.21L488.55 478.046ZM488.375 477.808L488.576 477.66L488.33 477.325L488.15 477.699L488.375 477.808ZM488.2 478.171L487.972 478.273L488.192 478.762L488.425 478.279L488.2 478.171ZM488.025 477.783L488.253 477.68L488.158 477.47L487.941 477.547L488.025 477.783ZM487.837 477.85L487.629 477.711L487.211 478.339L487.921 478.085L487.837 477.85ZM487.953 477.675L488.162 477.814L488.219 477.727L488.198 477.624L487.953 477.675ZM487.917 477.5L487.765 477.301L487.64 477.397L487.672 477.551L487.917 477.5ZM488.146 477.325L488.298 477.524L488.37 477.469L488.39 477.38L488.146 477.325ZM488.186 477.15L488.43 477.205L488.476 476.999L488.281 476.919L488.186 477.15ZM487.762 476.975L487.565 476.821L487.362 477.08L487.666 477.206L487.762 476.975ZM487.899 476.8L488.096 476.954L488.117 476.927L488.13 476.895L487.899 476.8ZM487.971 476.625L488.202 476.72L488.255 476.591L488.173 476.478L487.971 476.625ZM487.843 476.45L487.707 476.24L487.485 476.384L487.641 476.597L487.843 476.45ZM488.112 476.275L488.248 476.485L488.428 476.368L488.34 476.172L488.112 476.275ZM488.034 476.1L487.85 475.93L487.738 476.051L487.806 476.203L488.034 476.1ZM488.196 475.925L488.379 476.095L488.479 475.988L488.434 475.848L488.196 475.925ZM488.139 475.75L488.377 475.673L488.358 475.612L488.311 475.568L488.139 475.75ZM487.954 475.575L487.707 475.613L487.72 475.698L487.783 475.757L487.954 475.575ZM487.927 475.4L487.802 475.184L487.654 475.269L487.68 475.438L487.927 475.4ZM488.229 475.225L488.355 475.441L488.464 475.378L488.478 475.253L488.229 475.225ZM488.249 475.05L488.498 475.078L488.517 474.903L488.36 474.826L488.249 475.05ZM487.894 474.875L487.7 474.717L487.502 474.96L487.783 475.099L487.894 474.875ZM488.036 474.7L488.23 474.858L488.303 474.768L488.282 474.654L488.036 474.7ZM488.004 474.525L488.249 474.479L488.235 474.403L488.18 474.348L488.004 474.525ZM487.828 474.35L487.663 474.161L487.461 474.338L487.651 474.527L487.828 474.35ZM488.029 474.175L488.193 474.364L488.23 474.331L488.252 474.287L488.029 474.175ZM488.117 474L488.34 474.112L488.45 473.895L488.235 473.78L488.117 474ZM487.79 473.825L487.571 473.705L487.45 473.926L487.672 474.045L487.79 473.825ZM487.886 473.65L488.105 473.77L488.119 473.746L488.126 473.719L487.886 473.65ZM487.936 473.475L487.722 473.345L487.705 473.374L487.696 473.406L487.936 473.475ZM488.042 473.3L488.256 473.43L488.323 473.32L488.272 473.202L488.042 473.3ZM487.967 473.125L487.734 473.214L487.738 473.223L487.967 473.125ZM487.9 472.95L488.134 472.861L488.13 472.851L488.126 472.842L487.9 472.95ZM487.816 472.775L487.674 472.569L487.498 472.691L487.591 472.883L487.816 472.775ZM488.07 472.6L488.212 472.806L488.302 472.743L488.317 472.634L488.07 472.6ZM488.093 472.425L488.341 472.459L488.346 472.421L488.34 472.384L488.093 472.425ZM488.064 472.25L487.856 472.111L487.801 472.194L487.817 472.291L488.064 472.25ZM488.18 472.075L488.389 472.214L488.443 472.131L488.427 472.034L488.18 472.075ZM488.151 471.9L488.398 471.859L488.384 471.774L488.32 471.716L488.151 471.9ZM487.96 471.725L487.815 471.521L487.562 471.7L487.791 471.909L487.96 471.725ZM488.207 471.55L488.352 471.754L488.703 471.505L488.312 471.323L488.207 471.55ZM487.831 471.375L487.684 471.173L487.34 471.422L487.725 471.602L487.831 471.375ZM488.072 471.2L488.219 471.402L488.502 471.197L488.216 470.996L488.072 471.2ZM487.823 471.025L487.651 470.844L487.43 471.054L487.679 471.229L487.823 471.025ZM488.007 470.85L488.18 471.031L488.267 470.948L488.256 470.827L488.007 470.85ZM487.991 470.675L487.764 470.57L487.736 470.631L487.742 470.698L487.991 470.675ZM488.072 470.5L488.299 470.605L488.317 470.565L488.321 470.522L488.072 470.5ZM488.087 470.325L488.336 470.347L488.35 470.187L488.211 470.108L488.087 470.325ZM487.78 470.15L487.681 469.92L487.219 470.119L487.656 470.367L487.78 470.15ZM488.187 469.975L488.285 470.205L488.44 470.138L488.436 469.97L488.187 469.975ZM488.183 469.8L488.433 469.795L488.432 469.745L488.412 469.699L488.183 469.8ZM488.106 469.625L487.87 469.709L487.873 469.717L487.877 469.726L488.106 469.625ZM488.044 469.45L488.279 469.366L488.261 469.314L488.221 469.274L488.044 469.45ZM487.87 469.275L487.687 469.105L487.523 469.28L487.693 469.451L487.87 469.275ZM488.033 469.1L488.216 469.27L488.292 469.189L488.282 469.078L488.033 469.1ZM488.018 468.925L487.774 468.867L487.765 468.906L487.769 468.947L488.018 468.925ZM488.06 468.75L487.836 468.639L487.823 468.664L487.817 468.692L488.06 468.75ZM488.147 468.575L488.371 468.686L488.451 468.524L488.322 468.397L488.147 468.575ZM487.969 468.4L487.747 468.285L487.662 468.449L487.794 468.578L487.969 468.4ZM488.06 468.225L488.282 468.34L488.289 468.327L488.294 468.312L488.06 468.225ZM488.125 468.05L488.359 468.137L488.439 467.923L488.232 467.824L488.125 468.05ZM487.757 467.875L487.617 467.668L487.255 467.913L487.65 468.101L487.757 467.875ZM488.015 467.7L488.155 467.907L488.389 467.748L488.204 467.536L488.015 467.7ZM487.863 467.525L487.613 467.534L487.616 467.622L487.674 467.689L487.863 467.525ZM487.856 467.35L487.608 467.319L487.606 467.339L487.607 467.359L487.856 467.35ZM487.878 467.175L487.75 466.96L487.645 467.023L487.63 467.144L487.878 467.175ZM488.171 467L488.299 467.215L488.655 467.001L488.3 466.786L488.171 467ZM487.882 466.825L487.646 466.908L487.676 466.993L487.752 467.039L487.882 466.825ZM487.82 466.65L487.57 466.666L487.573 466.701L487.584 466.733L487.82 466.65ZM487.809 466.475L487.697 466.251L487.549 466.326L487.559 466.491L487.809 466.475ZM488.158 466.3L488.27 466.524L488.717 466.3L488.27 466.076L488.158 466.3ZM487.808 466.125L487.691 465.904L487.263 466.132L487.696 466.349L487.808 466.125ZM488.043 466L488.161 466.221L488.043 465.75V466ZM488 466V466.25H488.1V466V465.75H488V466ZM488.1 466L487.865 466.085L487.94 466.292L488.175 466.207L488.41 466.122L488.335 465.915L488.1 466ZM488.175 466.207L488.141 466.455L488.316 466.479L488.35 466.231L488.384 465.983L488.209 465.959L488.175 466.207ZM488.35 466.231L488.519 466.415L488.694 466.254L488.525 466.07L488.356 465.886L488.181 466.047L488.35 466.231ZM488.525 466.07L488.621 466.301L488.796 466.228L488.7 465.997L488.604 465.766L488.429 465.839L488.525 466.07ZM488.7 465.997L488.902 466.145L489.077 465.904L488.875 465.757L488.673 465.61L488.498 465.85L488.7 465.997ZM488.875 465.757L488.684 465.919L488.859 466.126L489.05 465.964L489.241 465.803L489.066 465.596L488.875 465.757ZM489.05 465.964L488.846 466.109L489.021 466.355L489.225 466.21L489.429 466.065L489.254 465.819L489.05 465.964ZM489.225 466.21L489.422 466.364L489.597 466.139L489.4 465.985L489.203 465.832L489.028 466.056L489.225 466.21ZM489.4 465.985L489.502 466.214L489.677 466.136L489.575 465.908L489.473 465.679L489.298 465.757L489.4 465.985ZM489.575 465.908L489.476 466.137L489.651 466.213L489.75 465.983L489.849 465.754L489.674 465.678L489.575 465.908ZM489.75 465.983L489.896 466.186L490.071 466.06L489.925 465.857L489.779 465.654L489.604 465.78L489.75 465.983ZM489.925 465.857L489.764 466.049L489.939 466.195L490.1 466.004L490.261 465.812L490.086 465.666L489.925 465.857ZM490.1 466.004L490.295 466.16L490.47 465.942L490.275 465.785L490.08 465.629L489.905 465.847L490.1 466.004ZM490.275 465.785L490.067 465.924L490.242 466.187L490.45 466.048L490.658 465.91L490.483 465.647L490.275 465.785ZM490.45 466.048L490.527 466.286L490.702 466.229L490.625 465.991L490.548 465.754L490.373 465.81L490.45 466.048ZM490.625 465.991L490.641 466.241L490.816 466.23L490.8 465.98L490.784 465.731L490.609 465.742L490.625 465.991ZM490.8 465.98L490.927 466.196L491.102 466.093L490.975 465.877L490.848 465.662L490.673 465.765L490.8 465.98ZM490.975 465.877L490.805 466.061L490.98 466.223L491.15 466.039L491.32 465.856L491.145 465.694L490.975 465.877ZM491.15 466.039L491.338 466.204L491.513 466.005L491.325 465.84L491.137 465.675L490.962 465.875L491.15 466.039ZM491.325 465.84L491.32 466.09L491.495 466.093L491.5 465.843L491.505 465.593L491.33 465.59L491.325 465.84ZM491.5 465.843L491.442 466.086L491.617 466.128L491.675 465.885L491.733 465.642L491.558 465.6L491.5 465.843ZM491.675 465.885L491.728 466.129L491.903 466.091L491.85 465.847L491.797 465.602L491.622 465.641L491.675 465.885ZM491.85 465.847L491.621 465.946L491.796 466.348L492.025 466.249L492.254 466.149L492.079 465.747L491.85 465.847ZM492.025 466.249L492.235 466.385L492.41 466.116L492.2 465.98L491.99 465.843L491.815 466.112L492.025 466.249ZM492.2 465.98L492.374 466.159L492.549 465.99L492.375 465.811L492.201 465.631L492.026 465.8L492.2 465.98ZM492.375 465.811L492.374 466.061L492.549 466.061L492.55 465.811L492.551 465.561L492.376 465.561L492.375 465.811ZM492.55 465.811L492.511 466.058L492.686 466.086L492.725 465.839L492.764 465.592L492.589 465.564L492.55 465.811ZM492.725 465.839L492.523 465.986L492.698 466.226L492.9 466.079L493.102 465.932L492.927 465.692L492.725 465.839ZM492.9 466.079L492.758 466.285L492.933 466.406L493.075 466.2L493.217 465.995L493.042 465.874L492.9 466.079ZM493.075 466.2L493.133 466.444L493.308 466.402L493.25 466.159L493.192 465.916L493.017 465.957L493.075 466.2ZM493.25 466.159L493.473 466.273L493.648 465.931L493.425 465.817L493.202 465.703L493.027 466.045L493.25 466.159ZM493.425 465.817L493.235 465.979L493.41 466.184L493.6 466.022L493.79 465.86L493.615 465.655L493.425 465.817ZM493.6 466.022L493.806 466.164L493.981 465.908L493.775 465.767L493.569 465.626L493.394 465.881L493.6 466.022ZM493.775 465.767L493.687 466.001L493.862 466.067L493.95 465.833L494.038 465.599L493.863 465.533L493.775 465.767ZM493.95 465.833L493.723 465.937L493.898 466.318L494.125 466.213L494.352 466.108L494.177 465.728L493.95 465.833ZM494.125 466.213L494.111 466.463L494.286 466.472L494.3 466.223L494.314 465.973L494.139 465.963L494.125 466.213ZM494.3 466.223L494.432 466.435L494.607 466.326L494.475 466.114L494.343 465.902L494.168 466.01L494.3 466.223ZM494.475 466.114L494.51 466.361L494.685 466.336L494.65 466.089L494.615 465.841L494.44 465.867L494.475 466.114ZM494.65 466.089L494.787 466.298L494.962 466.183L494.825 465.974L494.688 465.765L494.513 465.88L494.65 466.089ZM494.825 465.974L494.665 466.166L494.84 466.312L495 466.119L495.16 465.927L494.985 465.782L494.825 465.974ZM495 466.119L495.213 466.249L495.388 465.962L495.175 465.832L494.962 465.702L494.787 465.989L495 466.119ZM495.175 465.832L495.252 466.07L495.427 466.014L495.35 465.776L495.273 465.538L495.098 465.594L495.175 465.832ZM495.35 465.776L495.14 465.911L495.315 466.184L495.525 466.049L495.735 465.914L495.56 465.641L495.35 465.776ZM495.525 466.049L495.735 466.185L495.91 465.914L495.7 465.779L495.49 465.643L495.315 465.913L495.525 466.049ZM495.7 465.779L495.513 465.945L495.688 466.141L495.875 465.975L496.062 465.809L495.887 465.612L495.7 465.779ZM495.875 465.975L496.019 466.179L496.194 466.056L496.05 465.852L495.906 465.647L495.731 465.771L495.875 465.975ZM496.05 465.852L495.837 465.983L496.012 466.267L496.225 466.136L496.438 466.005L496.263 465.721L496.05 465.852ZM496.225 466.136L496.155 466.376L496.33 466.427L496.4 466.187L496.47 465.947L496.295 465.896L496.225 466.136ZM496.4 466.187L496.4 466.437L496.575 466.437L496.575 466.187L496.575 465.937L496.4 465.937L496.4 466.187ZM496.575 466.187L496.802 466.292L496.977 465.912L496.75 465.807L496.523 465.703L496.348 466.082L496.575 466.187ZM496.75 465.807L496.781 466.055L496.956 466.033L496.925 465.785L496.894 465.537L496.719 465.559L496.75 465.807ZM496.925 465.785L496.861 466.027L497.036 466.073L497.1 465.832L497.164 465.59L496.989 465.543L496.925 465.785ZM497.1 465.832L497.146 466.077L497.321 466.044L497.275 465.798L497.229 465.553L497.054 465.586L497.1 465.832ZM497.275 465.798L497.099 465.976L497.274 466.15L497.45 465.972L497.626 465.795L497.451 465.621L497.275 465.798ZM497.45 465.972L497.266 466.142L497.441 466.332L497.625 466.162L497.809 465.993L497.634 465.803L497.45 465.972ZM497.625 466.162L497.641 466.412L497.816 466.401L497.8 466.151L497.784 465.902L497.609 465.913L497.625 466.162ZM497.8 466.151L498.008 466.29L498.183 466.027L497.975 465.889L497.767 465.75L497.592 466.012L497.8 466.151ZM497.975 465.889L497.777 466.041L497.952 466.269L498.15 466.117L498.348 465.965L498.173 465.736L497.975 465.889ZM498.15 466.117L498.261 466.341L498.436 466.254L498.325 466.03L498.214 465.806L498.039 465.893L498.15 466.117ZM498.325 466.03L498.188 466.239L498.363 466.354L498.5 466.144L498.637 465.935L498.462 465.821L498.325 466.03ZM498.5 466.144L498.588 466.378L498.763 466.313L498.675 466.079L498.587 465.844L498.412 465.91L498.5 466.144ZM498.675 466.079L498.712 466.326L498.887 466.3L498.85 466.052L498.813 465.805L498.638 465.831L498.675 466.079ZM498.85 466.052L499.03 466.226L499.205 466.045L499.025 465.871L498.845 465.697L498.67 465.879L498.85 466.052ZM499.025 465.871L498.804 465.987L498.979 466.32L499.2 466.204L499.421 466.088L499.246 465.755L499.025 465.871ZM499.2 466.204L499.42 466.322L499.595 465.995L499.375 465.877L499.155 465.759L498.98 466.086L499.2 466.204ZM499.375 465.877L499.303 466.116L499.478 466.169L499.55 465.929L499.622 465.69L499.447 465.637L499.375 465.877ZM499.55 465.929L499.708 466.123L499.883 465.98L499.725 465.786L499.567 465.593L499.392 465.736L499.55 465.929ZM499.725 465.786L499.514 465.92L499.689 466.195L499.9 466.061L500.111 465.927L499.936 465.652L499.725 465.786ZM499.9 466.061L500.099 466.212L500.274 465.982L500.075 465.831L499.876 465.679L499.701 465.91L499.9 466.061ZM500.075 465.831L500.169 466.062L500.344 465.991L500.25 465.759L500.156 465.528L499.981 465.599L500.075 465.831ZM500.25 465.759L500.022 465.861L500.197 466.252L500.425 466.15L500.653 466.047L500.478 465.657L500.25 465.759ZM500.425 466.15L500.596 466.332L500.771 466.169L500.6 465.986L500.429 465.803L500.254 465.967L500.425 466.15ZM500.6 465.986L500.538 466.228L500.713 466.273L500.775 466.031L500.837 465.788L500.662 465.744L500.6 465.986ZM500.775 466.031L500.805 466.279L500.98 466.258L500.95 466.01L500.92 465.761L500.745 465.782L500.775 466.031ZM500.95 466.01L500.86 466.243L501.035 466.31L501.125 466.077L501.215 465.844L501.04 465.776L500.95 466.01ZM501.125 466.077L501.246 466.296L501.421 466.199L501.3 465.98L501.179 465.761L501.004 465.858L501.125 466.077ZM501.3 465.98L501.357 466.223L501.532 466.182L501.475 465.939L501.418 465.696L501.243 465.737L501.3 465.98ZM501.475 465.939L501.389 466.174L501.564 466.238L501.65 466.003L501.736 465.769L501.561 465.704L501.475 465.939ZM501.65 466.003L501.469 466.175L501.644 466.36L501.825 466.188L502.006 466.015L501.831 465.831L501.65 466.003ZM501.825 466.188L502.03 466.33L502.205 466.078L502 465.935L501.795 465.793L501.62 466.045L501.825 466.188ZM502 465.935L502.143 466.141L502.318 466.019L502.175 465.814L502.032 465.608L501.857 465.73L502 465.935ZM502.175 465.814L501.955 465.932L502.13 466.258L502.35 466.139L502.57 466.021L502.395 465.695L502.175 465.814ZM502.35 466.139L502.249 466.368L502.424 466.445L502.525 466.217L502.626 465.988L502.451 465.911L502.35 466.139ZM502.525 466.217L502.676 466.416L502.851 466.283L502.7 466.084L502.549 465.885L502.374 466.018L502.525 466.217ZM502.7 466.084L502.752 466.328L502.927 466.291L502.875 466.047L502.823 465.802L502.648 465.839L502.7 466.084ZM502.875 466.047L503.001 466.263L503.176 466.161L503.05 465.945L502.924 465.729L502.749 465.831L502.875 466.047ZM503.05 465.945L503.145 466.176L503.32 466.104L503.225 465.873L503.13 465.641L502.955 465.714L503.05 465.945ZM503.225 465.873L503.013 466.005L503.188 466.284L503.4 466.151L503.612 466.018L503.437 465.74L503.225 465.873ZM503.4 466.151L503.444 466.397L503.619 466.366L503.575 466.12L503.531 465.874L503.356 465.905L503.4 466.151ZM503.575 466.12L503.766 466.281L503.941 466.075L503.75 465.913L503.559 465.752L503.384 465.958L503.575 466.12ZM503.75 465.913L503.887 466.122L504.062 466.007L503.925 465.798L503.788 465.589L503.613 465.704L503.75 465.913ZM503.925 465.798L503.753 465.979L503.928 466.146L504.1 465.965L504.272 465.784L504.097 465.617L503.925 465.798ZM504.1 465.965L504.292 466.125L504.467 465.914L504.275 465.754L504.083 465.594L503.908 465.805L504.1 465.965ZM504.275 465.754L504.056 465.874L504.231 466.194L504.45 466.074L504.669 465.954L504.494 465.634L504.275 465.754ZM504.45 466.074L504.58 466.287L504.755 466.181L504.625 465.967L504.495 465.754L504.32 465.86L504.45 466.074ZM504.625 465.967L504.725 466.197L504.9 466.121L504.8 465.891L504.7 465.662L504.525 465.738L504.625 465.967ZM504.8 465.891L504.93 466.105L505.105 465.999L504.975 465.785L504.845 465.571L504.67 465.677L504.8 465.891ZM504.975 465.785L504.765 465.921L504.94 466.192L505.15 466.057L505.36 465.921L505.185 465.65L504.975 465.785ZM505.15 466.057L505.363 466.188L505.538 465.903L505.325 465.772L505.112 465.641L504.937 465.926L505.15 466.057ZM505.325 465.772L505.091 465.86L505.266 466.328L505.5 466.24L505.734 466.152L505.559 465.685L505.325 465.772ZM505.5 466.24L505.723 466.352L505.898 466.005L505.675 465.892L505.452 465.78L505.277 466.128L505.5 466.24ZM505.675 465.892L505.519 466.087L505.694 466.228L505.85 466.032L506.006 465.837L505.831 465.697L505.675 465.892ZM505.85 466.032L505.961 466.256L506.136 466.17L506.025 465.946L505.914 465.722L505.739 465.808L505.85 466.032ZM506.025 465.946L505.814 466.08L505.989 466.354L506.2 466.22L506.411 466.085L506.236 465.811L506.025 465.946ZM506.2 466.22L506.428 466.322L506.603 465.931L506.375 465.829L506.147 465.727L505.972 466.117L506.2 466.22ZM506.375 465.829L506.352 466.078L506.527 466.094L506.55 465.845L506.573 465.596L506.398 465.58L506.375 465.829ZM506.55 465.845L506.638 466.08L506.813 466.014L506.725 465.78L506.637 465.546L506.462 465.611L506.55 465.845ZM506.725 465.78L506.754 466.028L506.929 466.008L506.9 465.759L506.871 465.511L506.696 465.532L506.725 465.78ZM506.9 465.759L506.771 465.974L506.946 466.079L507.075 465.865L507.204 465.65L507.029 465.545L506.9 465.759ZM507.075 465.865L507.121 466.11L507.296 466.077L507.25 465.832L507.204 465.586L507.029 465.619L507.075 465.865ZM507.25 465.832L507.159 466.064L507.334 466.133L507.425 465.9L507.516 465.668L507.341 465.599L507.25 465.832ZM507.425 465.9L507.204 466.018L507.379 466.347L507.6 466.23L507.821 466.112L507.646 465.783L507.425 465.9ZM507.6 466.23L507.767 466.416L507.942 466.26L507.775 466.073L507.608 465.887L507.433 466.043L507.6 466.23ZM507.775 466.073L507.942 466.259L508.117 466.102L507.95 465.916L507.783 465.73L507.608 465.887L507.775 466.073ZM507.95 465.916L507.736 465.787L507.61 465.996L507.824 466.125L508.038 466.254L508.164 466.045L507.95 465.916ZM507.824 466.125L507.582 466.059L507.535 466.234L507.776 466.3L508.017 466.366L508.065 466.191L507.824 466.125ZM507.776 466.3L507.631 466.504L507.877 466.679L508.022 466.475L508.167 466.271L507.921 466.096L507.776 466.3ZM508.022 466.475L507.788 466.389L507.723 466.564L507.958 466.65L508.192 466.736L508.257 466.561L508.022 466.475ZM507.958 466.65L507.713 466.597L507.675 466.772L507.919 466.825L508.164 466.878L508.202 466.703L507.958 466.65ZM507.919 466.825L507.794 467.041L508.094 467.216L508.22 467L508.346 466.784L508.045 466.609L507.919 466.825ZM508.22 467L508.085 466.79L507.813 466.965L507.949 467.175L508.084 467.385L508.356 467.21L508.22 467ZM507.949 467.175L507.749 467.025L507.617 467.2L507.817 467.35L508.017 467.5L508.148 467.325L507.949 467.175ZM507.817 467.35L507.71 467.576L508.081 467.751L508.188 467.525L508.294 467.299L507.924 467.124L507.817 467.35ZM508.188 467.525L508.092 467.294L507.667 467.469L507.762 467.7L507.857 467.931L508.283 467.756L508.188 467.525ZM507.762 467.7L507.622 467.907L507.879 468.082L508.019 467.875L508.16 467.668L507.903 467.493L507.762 467.7ZM508.019 467.875L507.788 467.97L507.86 468.145L508.091 468.05L508.322 467.955L508.251 467.78L508.019 467.875ZM508.091 468.05L507.932 467.857L507.719 468.032L507.878 468.225L508.037 468.418L508.25 468.243L508.091 468.05ZM507.878 468.225L507.708 468.408L507.896 468.583L508.067 468.4L508.237 468.217L508.048 468.042L507.878 468.225ZM508.067 468.4L507.921 468.197L507.676 468.372L507.822 468.575L507.967 468.778L508.212 468.603L508.067 468.4ZM507.822 468.575L507.61 468.707L507.719 468.883L507.931 468.75L508.143 468.618L508.034 468.443L507.822 468.575ZM507.931 468.75L507.734 468.904L507.87 469.079L508.067 468.925L508.265 468.771L508.128 468.596L507.931 468.75ZM508.067 468.925L507.855 468.794L507.747 468.969L507.959 469.1L508.172 469.231L508.28 469.056L508.067 468.925ZM507.959 469.1L507.823 469.309L508.09 469.484L508.227 469.275L508.364 469.066L508.096 468.891L507.959 469.1ZM508.227 469.275L508.079 469.073L507.84 469.248L507.988 469.45L508.136 469.652L508.375 469.477L508.227 469.275ZM507.988 469.45L507.809 469.275L507.638 469.45L507.817 469.625L507.995 469.8L508.167 469.625L507.988 469.45ZM507.817 469.625L507.713 469.853L508.098 470.028L508.202 469.8L508.305 469.572L507.92 469.397L507.817 469.625ZM508.202 469.8L508.083 469.58L507.759 469.755L507.877 469.975L507.996 470.195L508.32 470.02L508.202 469.8ZM507.877 469.975L507.637 469.906L507.587 470.081L507.827 470.15L508.068 470.219L508.118 470.044L507.877 469.975ZM507.827 470.15L507.614 470.28L507.72 470.455L507.934 470.325L508.147 470.195L508.041 470.02L507.827 470.15ZM507.934 470.325L507.687 470.286L507.66 470.461L507.907 470.5L508.154 470.539L508.181 470.364L507.934 470.325ZM507.907 470.5L507.739 470.685L507.931 470.86L508.099 470.675L508.267 470.49L508.075 470.315L507.907 470.5ZM508.099 470.675L507.942 470.481L507.726 470.656L507.884 470.85L508.042 471.044L508.257 470.869L508.099 470.675ZM507.884 470.85L507.667 470.726L507.567 470.901L507.784 471.025L508.001 471.149L508.101 470.974L507.884 470.85ZM507.784 471.025L507.569 471.152L507.672 471.327L507.887 471.2L508.103 471.073L508 470.898L507.784 471.025ZM507.887 471.2L507.668 471.079L507.572 471.254L507.79 471.375L508.009 471.496L508.106 471.321L507.887 471.2ZM507.79 471.375L507.591 471.526L507.724 471.701L507.923 471.55L508.122 471.399L507.99 471.224L507.79 471.375ZM507.923 471.55L507.7 471.437L507.612 471.612L507.835 471.725L508.058 471.838L508.146 471.663L507.923 471.55ZM507.835 471.725L507.629 471.867L507.75 472.042L507.956 471.9L508.161 471.758L508.041 471.583L507.835 471.725ZM507.956 471.9L507.772 471.73L507.61 471.905L507.794 472.075L507.977 472.245L508.139 472.07L507.956 471.9ZM507.794 472.075L507.561 472.166L507.63 472.341L507.863 472.25L508.095 472.159L508.027 471.984L507.794 472.075ZM507.863 472.25L507.739 472.467L508.046 472.642L508.17 472.425L508.294 472.208L507.986 472.033L507.863 472.25ZM508.17 472.425L507.937 472.335L507.869 472.51L508.102 472.6L508.336 472.69L508.403 472.515L508.17 472.425ZM508.102 472.6L507.875 472.703L507.954 472.878L508.182 472.775L508.409 472.672L508.33 472.497L508.102 472.6ZM508.182 472.775L507.956 472.668L507.873 472.843L508.099 472.95L508.325 473.057L508.408 472.882L508.182 472.775ZM508.099 472.95L507.858 472.883L507.809 473.058L508.05 473.125L508.291 473.192L508.34 473.017L508.099 472.95ZM508.05 473.125L507.863 473.29L508.017 473.465L508.205 473.3L508.392 473.135L508.237 472.96L508.05 473.125ZM508.205 473.3L508.08 473.083L507.776 473.258L507.901 473.475L508.026 473.692L508.329 473.517L508.205 473.3ZM507.901 473.475L507.772 473.689L508.063 473.864L508.192 473.65L508.321 473.436L508.03 473.261L507.901 473.475ZM508.192 473.65L508.097 473.419L507.67 473.594L507.764 473.825L507.859 474.056L508.286 473.881L508.192 473.65ZM507.764 473.825L507.656 474.051L508.023 474.226L508.13 474L508.238 473.774L507.872 473.599L507.764 473.825ZM508.13 474L507.934 473.845L507.796 474.02L507.992 474.175L508.188 474.33L508.327 474.155L508.13 474ZM507.992 474.175L507.838 473.978L507.614 474.153L507.767 474.35L507.921 474.547L508.146 474.372L507.992 474.175ZM507.767 474.35L507.56 474.49L507.679 474.665L507.886 474.525L508.093 474.385L507.974 474.21L507.767 474.35ZM507.886 474.525L507.656 474.622L507.73 474.797L507.96 474.7L508.19 474.603L508.116 474.428L507.886 474.525ZM507.96 474.7L507.8 474.508L507.59 474.683L507.75 474.875L507.911 475.067L508.12 474.892L507.96 474.7ZM507.75 474.875L507.654 475.106L508.07 475.281L508.167 475.05L508.264 474.819L507.847 474.644L507.75 474.875ZM508.167 475.05L507.975 474.89L507.829 475.065L508.021 475.225L508.213 475.385L508.359 475.21L508.167 475.05ZM508.021 475.225L507.774 475.267L507.804 475.442L508.051 475.4L508.297 475.358L508.267 475.183L508.021 475.225ZM508.051 475.4L507.847 475.255L507.723 475.43L507.927 475.575L508.131 475.72L508.255 475.545L508.051 475.4ZM507.927 475.575L507.703 475.687L507.79 475.862L508.014 475.75L508.238 475.638L508.15 475.463L507.927 475.575ZM508.014 475.75L507.85 475.939L508.052 476.114L508.216 475.925L508.38 475.736L508.178 475.561L508.014 475.75ZM508.216 475.925L508.112 475.698L507.728 475.873L507.832 476.1L507.936 476.327L508.32 476.152L508.216 475.925ZM507.832 476.1L507.655 476.277L507.831 476.452L508.007 476.275L508.184 476.098L508.009 475.923L507.832 476.1ZM508.007 476.275L507.83 476.099L507.656 476.274L507.834 476.45L508.011 476.626L508.185 476.451L508.007 476.275ZM507.834 476.45L507.664 476.634L507.855 476.809L508.024 476.625L508.193 476.441L508.003 476.266L507.834 476.45ZM508.024 476.625L507.803 476.742L507.896 476.917L508.117 476.8L508.338 476.683L508.245 476.508L508.024 476.625ZM508.117 476.8L507.962 476.603L507.739 476.778L507.894 476.975L508.048 477.172L508.271 476.997L508.117 476.8ZM507.894 476.975L507.776 477.196L508.106 477.371L508.224 477.15L508.341 476.929L508.011 476.754L507.894 476.975ZM508.224 477.15L508.126 476.92L507.714 477.095L507.812 477.325L507.909 477.555L508.321 477.38L508.224 477.15ZM507.812 477.325L507.653 477.518L507.866 477.693L508.024 477.5L508.183 477.307L507.97 477.132L507.812 477.325ZM508.024 477.5L507.79 477.586L507.854 477.761L508.089 477.675L508.323 477.589L508.259 477.414L508.024 477.5ZM508.089 477.675L507.859 477.577L507.784 477.752L508.014 477.85L508.244 477.948L508.319 477.773L508.089 477.675ZM508.014 477.85L508.05 477.603L508.011 477.597L507.975 477.844L507.939 478.092L507.978 478.097L508.014 477.85ZM507.975 477.844L507.786 477.681L507.611 477.883L507.8 478.046L507.989 478.21L508.164 478.008L507.975 477.844ZM507.8 478.046L508.012 477.914L507.837 477.633L507.625 477.765L507.413 477.897L507.588 478.178L507.8 478.046ZM507.625 477.765L507.554 477.525L507.379 477.577L507.45 477.817L507.521 478.056L507.696 478.004L507.625 477.765ZM507.45 477.817L507.492 477.57L507.317 477.54L507.275 477.787L507.233 478.033L507.408 478.063L507.45 477.817ZM507.275 477.787L507.057 477.664L506.882 477.975L507.1 478.098L507.318 478.22L507.493 477.909L507.275 477.787ZM507.1 478.098L507.309 477.961L507.134 477.693L506.925 477.83L506.716 477.966L506.891 478.234L507.1 478.098ZM506.925 477.83L506.801 477.612L506.626 477.712L506.75 477.929L506.874 478.147L507.049 478.047L506.925 477.83ZM506.75 477.929L506.669 477.693L506.494 477.753L506.575 477.989L506.656 478.226L506.831 478.166L506.75 477.929ZM506.575 477.989L506.426 477.788L506.251 477.918L506.4 478.119L506.549 478.32L506.724 478.19L506.575 477.989ZM506.4 478.119L506.603 477.973L506.428 477.729L506.225 477.874L506.022 478.02L506.197 478.264L506.4 478.119ZM506.225 477.874L506.335 477.65L506.16 477.564L506.05 477.788L505.94 478.013L506.115 478.099L506.225 477.874ZM506.05 477.788L505.891 477.595L505.716 477.74L505.875 477.933L506.034 478.125L506.209 477.981L506.05 477.788ZM505.875 477.933L505.835 477.686L505.66 477.714L505.7 477.961L505.74 478.208L505.915 478.179L505.875 477.933ZM505.7 477.961L505.494 477.819L505.319 478.073L505.525 478.215L505.731 478.357L505.906 478.103L505.7 477.961ZM505.525 478.215L505.628 477.987L505.453 477.908L505.35 478.136L505.247 478.364L505.422 478.443L505.525 478.215ZM505.35 478.136L505.3 477.891L505.125 477.927L505.175 478.172L505.225 478.417L505.4 478.381L505.35 478.136ZM505.175 478.172L505.398 478.059L505.223 477.712L505 477.825L504.777 477.937L504.952 478.284L505.175 478.172ZM505 477.825L504.809 477.663L504.634 477.87L504.825 478.031L505.016 478.193L505.191 477.986L505 477.825ZM504.825 478.031L505.001 477.854L504.826 477.68L504.65 477.858L504.474 478.035L504.649 478.209L504.825 478.031ZM504.65 477.858L504.591 477.615L504.416 477.657L504.475 477.9L504.534 478.143L504.709 478.101L504.65 477.858ZM504.475 477.9L504.463 477.65L504.288 477.658L504.3 477.908L504.312 478.158L504.487 478.149L504.475 477.9ZM504.3 477.908L504.323 477.659L504.148 477.643L504.125 477.892L504.102 478.141L504.277 478.157L504.3 477.908ZM504.125 477.892L503.9 477.782L503.725 478.14L503.95 478.25L504.175 478.36L504.35 478.002L504.125 477.892ZM503.95 478.25L504.185 478.164L504.01 477.685L503.775 477.771L503.54 477.857L503.715 478.336L503.95 478.25ZM503.775 477.771L503.605 477.588L503.43 477.75L503.6 477.933L503.77 478.117L503.945 477.955L503.775 477.771ZM503.6 477.933L503.441 477.741L503.266 477.885L503.425 478.078L503.584 478.271L503.759 478.126L503.6 477.933ZM503.425 478.078L503.587 477.888L503.412 477.739L503.25 477.929L503.088 478.119L503.263 478.268L503.425 478.078ZM503.25 477.929L503.143 477.703L502.968 477.786L503.075 478.012L503.182 478.238L503.357 478.155L503.25 477.929ZM503.075 478.012L503.254 477.837L503.079 477.658L502.9 477.832L502.721 478.006L502.896 478.186L503.075 478.012ZM502.9 477.832L502.672 477.729L502.497 478.115L502.725 478.218L502.953 478.321L503.128 477.935L502.9 477.832ZM502.725 478.218L502.928 478.072L502.753 477.828L502.55 477.974L502.347 478.12L502.522 478.364L502.725 478.218ZM502.55 477.974L502.607 477.731L502.432 477.69L502.375 477.933L502.318 478.176L502.493 478.218L502.55 477.974ZM502.375 477.933L502.252 477.715L502.077 477.814L502.2 478.032L502.323 478.249L502.498 478.151L502.375 477.933ZM502.2 478.032L502.335 477.821L502.16 477.709L502.025 477.919L501.89 478.129L502.065 478.242L502.2 478.032ZM502.025 477.919L502.079 477.675L501.904 477.636L501.85 477.88L501.796 478.124L501.971 478.163L502.025 477.919ZM501.85 477.88L501.708 477.674L501.533 477.795L501.675 478.001L501.817 478.207L501.992 478.086L501.85 477.88ZM501.675 478.001L501.527 477.799L501.352 477.928L501.5 478.129L501.648 478.331L501.823 478.202L501.675 478.001ZM501.5 478.129L501.69 477.967L501.515 477.762L501.325 477.924L501.135 478.087L501.31 478.292L501.5 478.129ZM501.325 477.924L501.242 477.688L501.067 477.75L501.15 477.986L501.233 478.222L501.408 478.16L501.325 477.924ZM501.15 477.986L501.302 477.787L501.127 477.654L500.975 477.852L500.823 478.051L500.998 478.185L501.15 477.986ZM500.975 477.852L500.767 477.713L500.592 477.973L500.8 478.113L501.008 478.252L501.183 477.992L500.975 477.852ZM500.8 478.113L500.928 477.898L500.753 477.794L500.625 478.009L500.497 478.224L500.672 478.328L500.8 478.113ZM500.625 478.009L500.431 477.851L500.256 478.066L500.45 478.224L500.644 478.382L500.819 478.167L500.625 478.009ZM500.45 478.224L500.68 478.125L500.505 477.717L500.275 477.815L500.045 477.914L500.22 478.322L500.45 478.224ZM500.275 477.815L500.299 477.567L500.124 477.55L500.1 477.799L500.076 478.047L500.251 478.064L500.275 477.815ZM500.1 477.799L499.87 477.7L499.695 478.11L499.925 478.209L500.155 478.307L500.33 477.897L500.1 477.799ZM499.925 478.209L499.879 477.963L499.704 477.996L499.75 478.242L499.796 478.487L499.971 478.454L499.925 478.209ZM499.75 478.242L499.977 478.137L499.802 477.756L499.575 477.86L499.348 477.964L499.523 478.346L499.75 478.242ZM499.575 477.86L499.566 477.61L499.391 477.616L499.4 477.866L499.409 478.116L499.584 478.11L499.575 477.86ZM499.4 477.866L499.18 477.747L499.005 478.068L499.225 478.188L499.445 478.307L499.62 477.985L499.4 477.866ZM499.225 478.188L499.444 478.067L499.269 477.749L499.05 477.87L498.831 477.991L499.006 478.308L499.225 478.188ZM499.05 477.87L498.915 477.659L498.74 477.771L498.875 477.982L499.01 478.192L499.185 478.08L499.05 477.87ZM498.875 477.982L499.047 477.801L498.872 477.634L498.7 477.816L498.528 477.997L498.703 478.163L498.875 477.982ZM498.7 477.816L498.622 477.578L498.447 477.636L498.525 477.873L498.603 478.111L498.778 478.053L498.7 477.816ZM498.525 477.873L498.572 477.628L498.397 477.594L498.35 477.839L498.303 478.085L498.478 478.119L498.525 477.873ZM498.35 477.839L498.179 477.657L498.004 477.821L498.175 478.004L498.346 478.186L498.521 478.022L498.35 477.839ZM498.175 478.004L498.246 477.764L498.071 477.712L498 477.952L497.929 478.191L498.104 478.243L498.175 478.004ZM498 477.952L498.187 477.786L498.012 477.588L497.825 477.754L497.638 477.92L497.813 478.118L498 477.952ZM497.825 477.754L497.695 477.541L497.52 477.648L497.65 477.861L497.78 478.074L497.955 477.968L497.825 477.754ZM497.65 477.861L497.532 477.641L497.357 477.734L497.475 477.955L497.593 478.175L497.768 478.081L497.65 477.861ZM497.475 477.955L497.276 477.803L497.101 478.032L497.3 478.183L497.499 478.335L497.674 478.107L497.475 477.955ZM497.3 478.183L497.509 478.046L497.334 477.779L497.125 477.916L496.916 478.053L497.091 478.32L497.3 478.183ZM497.125 477.916L496.935 477.754L496.76 477.96L496.95 478.122L497.14 478.284L497.315 478.079L497.125 477.916ZM496.95 478.122L497.126 477.944L496.951 477.771L496.775 477.949L496.599 478.127L496.774 478.3L496.95 478.122ZM496.775 477.949L496.591 477.78L496.416 477.971L496.6 478.14L496.784 478.309L496.959 478.118L496.775 477.949ZM496.6 478.14L496.736 477.93L496.561 477.817L496.425 478.027L496.289 478.237L496.464 478.35L496.6 478.14ZM496.425 478.027L496.312 477.804L496.137 477.892L496.25 478.115L496.363 478.338L496.538 478.25L496.425 478.027ZM496.25 478.115L496.418 477.93L496.243 477.771L496.075 477.955L495.907 478.14L496.082 478.3L496.25 478.115ZM496.075 477.955L495.868 477.815L495.693 478.074L495.9 478.214L496.107 478.354L496.282 478.096L496.075 477.955ZM495.9 478.214L495.903 477.964L495.728 477.962L495.725 478.212L495.722 478.462L495.897 478.464L495.9 478.214ZM495.725 478.212L495.935 478.076L495.76 477.805L495.55 477.94L495.34 478.075L495.515 478.347L495.725 478.212ZM495.55 477.94L495.714 477.751L495.539 477.599L495.375 477.787L495.211 477.976L495.386 478.128L495.55 477.94ZM495.375 477.787L495.201 477.608L495.026 477.777L495.2 477.957L495.374 478.136L495.549 477.967L495.375 477.787ZM495.2 477.957L495.051 477.756L494.876 477.886L495.025 478.087L495.174 478.287L495.349 478.157L495.2 477.957ZM495.025 478.087L495.231 477.945L495.056 477.69L494.85 477.832L494.644 477.973L494.819 478.228L495.025 478.087ZM494.85 477.832L494.896 477.586L494.721 477.554L494.675 477.8L494.629 478.045L494.804 478.078L494.85 477.832ZM494.675 477.8L494.557 477.579L494.382 477.673L494.5 477.893L494.618 478.114L494.793 478.02L494.675 477.8ZM494.5 477.893L494.61 477.669L494.435 477.583L494.325 477.807L494.215 478.031L494.39 478.118L494.5 477.893ZM494.325 477.807L494.096 477.708L493.921 478.113L494.15 478.212L494.379 478.311L494.554 477.906L494.325 477.807ZM494.15 478.212L494.232 477.976L494.057 477.915L493.975 478.152L493.893 478.388L494.068 478.448L494.15 478.212ZM493.975 478.152L493.871 477.924L493.696 478.004L493.8 478.232L493.904 478.459L494.079 478.379L493.975 478.152ZM493.8 478.232L494.006 478.09L493.831 477.836L493.625 477.978L493.419 478.12L493.594 478.374L493.8 478.232ZM493.625 477.978L493.561 477.737L493.386 477.783L493.45 478.024L493.514 478.266L493.689 478.22L493.625 477.978ZM493.45 478.024L493.612 477.835L493.437 477.685L493.275 477.875L493.113 478.065L493.288 478.214L493.45 478.024ZM493.275 477.875L493.051 477.765L492.876 478.122L493.1 478.232L493.324 478.342L493.499 477.985L493.275 477.875ZM493.1 478.232L493.302 478.084L493.127 477.845L492.925 477.992L492.723 478.139L492.898 478.379L493.1 478.232ZM492.925 477.992L492.804 477.773L492.629 477.869L492.75 478.088L492.871 478.307L493.046 478.211L492.925 477.992ZM492.75 478.088L492.875 477.872L492.7 477.771L492.575 477.987L492.45 478.203L492.625 478.305L492.75 478.088ZM492.575 477.987L492.538 477.74L492.363 477.766L492.4 478.014L492.437 478.261L492.612 478.234L492.575 477.987ZM492.4 478.014L492.383 477.764L492.208 477.776L492.225 478.025L492.242 478.275L492.417 478.263L492.4 478.014ZM492.225 478.025L492.123 477.797L491.948 477.875L492.05 478.103L492.152 478.332L492.327 478.254L492.225 478.025ZM492.05 478.103L492.263 477.972L492.088 477.689L491.875 477.82L491.662 477.951L491.837 478.235L492.05 478.103ZM491.875 477.82L491.721 477.623L491.546 477.759L491.7 477.957L491.854 478.154L492.029 478.017L491.875 477.82ZM491.7 477.957L491.83 477.743L491.655 477.637L491.525 477.85L491.395 478.064L491.57 478.17L491.7 477.957ZM491.525 477.85L491.305 477.731L491.13 478.053L491.35 478.172L491.57 478.291L491.745 477.97L491.525 477.85ZM491.35 478.172L491.525 477.994L491.35 477.822L491.175 478L491 478.178L491.175 478.35L491.35 478.172ZM491.175 478L491.328 477.803L491.153 477.667L491 477.864L490.847 478.062L491.022 478.198L491.175 478ZM491 477.864L490.808 477.704L490.633 477.915L490.825 478.075L491.017 478.235L491.192 478.024L491 477.864ZM490.825 478.075L490.804 477.826L490.629 477.84L490.65 478.089L490.671 478.338L490.846 478.324L490.825 478.075ZM490.65 478.089L490.858 477.951L490.683 477.687L490.475 477.825L490.267 477.963L490.442 478.227L490.65 478.089ZM490.475 477.825L490.424 477.581L490.249 477.617L490.3 477.862L490.351 478.107L490.526 478.07L490.475 477.825ZM490.3 477.862L490.263 477.615L490.088 477.641L490.125 477.888L490.162 478.135L490.337 478.109L490.3 477.862ZM490.125 477.888L489.915 477.753L489.74 478.025L489.95 478.16L490.16 478.296L490.335 478.024L490.125 477.888ZM489.95 478.16L490.177 478.055L490.002 477.678L489.775 477.783L489.548 477.888L489.723 478.265L489.95 478.16ZM489.775 477.783L489.552 477.67L489.377 478.015L489.6 478.128L489.823 478.241L489.998 477.896L489.775 477.783ZM489.6 478.128L489.76 477.936L489.585 477.79L489.425 477.982L489.265 478.174L489.44 478.32L489.6 478.128ZM489.425 477.982L489.546 477.763L489.371 477.666L489.25 477.885L489.129 478.103L489.304 478.2L489.425 477.982ZM489.25 477.885L489.138 477.661L488.963 477.748L489.075 477.972L489.187 478.196L489.362 478.108L489.25 477.885ZM489.075 477.972L488.953 477.754L488.778 477.852L488.9 478.07L489.022 478.288L489.197 478.19L489.075 477.972ZM488.9 478.07L488.722 477.895L488.547 478.072L488.725 478.248L488.903 478.423L489.078 478.245L488.9 478.07ZM488.725 478.248L488.914 478.084L488.739 477.882L488.55 478.046L488.361 478.21L488.536 478.412L488.725 478.248ZM488.55 478.046L488.751 477.898L488.576 477.66L488.375 477.808L488.174 477.956L488.349 478.194L488.55 478.046ZM488.375 477.808L488.15 477.699L487.975 478.062L488.2 478.171L488.425 478.279L488.6 477.916L488.375 477.808ZM488.2 478.171L488.428 478.068L488.253 477.68L488.025 477.783L487.797 477.886L487.972 478.273L488.2 478.171ZM488.025 477.783L487.941 477.547L487.753 477.615L487.837 477.85L487.921 478.085L488.109 478.018L488.025 477.783ZM487.837 477.85L488.045 477.989L488.162 477.814L487.953 477.675L487.745 477.536L487.629 477.711L487.837 477.85ZM487.953 477.675L488.198 477.624L488.162 477.449L487.917 477.5L487.672 477.551L487.709 477.726L487.953 477.675ZM487.917 477.5L488.069 477.699L488.298 477.524L488.146 477.325L487.994 477.126L487.765 477.301L487.917 477.5ZM488.146 477.325L488.39 477.38L488.43 477.205L488.186 477.15L487.942 477.095L487.902 477.27L488.146 477.325ZM488.186 477.15L488.281 476.919L487.857 476.744L487.762 476.975L487.666 477.206L488.09 477.381L488.186 477.15ZM487.762 476.975L487.959 477.129L488.096 476.954L487.899 476.8L487.702 476.646L487.565 476.821L487.762 476.975ZM487.899 476.8L488.13 476.895L488.202 476.72L487.971 476.625L487.74 476.53L487.667 476.705L487.899 476.8ZM487.971 476.625L488.173 476.478L488.045 476.303L487.843 476.45L487.641 476.597L487.769 476.772L487.971 476.625ZM487.843 476.45L487.979 476.66L488.248 476.485L488.112 476.275L487.976 476.065L487.707 476.24L487.843 476.45ZM488.112 476.275L488.34 476.172L488.261 475.997L488.034 476.1L487.806 476.203L487.884 476.378L488.112 476.275ZM488.034 476.1L488.217 476.27L488.379 476.095L488.196 475.925L488.013 475.755L487.85 475.93L488.034 476.1ZM488.196 475.925L488.434 475.848L488.377 475.673L488.139 475.75L487.902 475.827L487.958 476.002L488.196 475.925ZM488.139 475.75L488.311 475.568L488.126 475.393L487.954 475.575L487.783 475.757L487.968 475.932L488.139 475.75ZM487.954 475.575L488.201 475.537L488.174 475.362L487.927 475.4L487.68 475.438L487.707 475.613L487.954 475.575ZM487.927 475.4L488.052 475.616L488.355 475.441L488.229 475.225L488.104 475.009L487.802 475.184L487.927 475.4ZM488.229 475.225L488.478 475.253L488.498 475.078L488.249 475.05L488.001 475.022L487.981 475.197L488.229 475.225ZM488.249 475.05L488.36 474.826L488.004 474.651L487.894 474.875L487.783 475.099L488.139 475.274L488.249 475.05ZM487.894 474.875L488.088 475.033L488.23 474.858L488.036 474.7L487.843 474.542L487.7 474.717L487.894 474.875ZM488.036 474.7L488.282 474.654L488.249 474.479L488.004 474.525L487.758 474.571L487.791 474.746L488.036 474.7ZM488.004 474.525L488.18 474.348L488.004 474.173L487.828 474.35L487.651 474.527L487.827 474.702L488.004 474.525ZM487.828 474.35L487.992 474.539L488.193 474.364L488.029 474.175L487.865 473.986L487.663 474.161L487.828 474.35ZM488.029 474.175L488.252 474.287L488.34 474.112L488.117 474L487.894 473.888L487.806 474.063L488.029 474.175ZM488.117 474L488.235 473.78L487.908 473.605L487.79 473.825L487.672 474.045L487.999 474.22L488.117 474ZM487.79 473.825L488.009 473.945L488.105 473.77L487.886 473.65L487.667 473.53L487.571 473.705L487.79 473.825ZM487.886 473.65L488.126 473.719L488.176 473.544L487.936 473.475L487.696 473.406L487.646 473.581L487.886 473.65ZM487.936 473.475L488.15 473.605L488.256 473.43L488.042 473.3L487.829 473.17L487.722 473.345L487.936 473.475ZM488.042 473.3L488.272 473.202L488.197 473.027L487.967 473.125L487.738 473.223L487.813 473.398L488.042 473.3ZM487.967 473.125L488.201 473.036L488.134 472.861L487.9 472.95L487.667 473.039L487.734 473.214L487.967 473.125ZM487.9 472.95L488.126 472.842L488.042 472.667L487.816 472.775L487.591 472.883L487.675 473.058L487.9 472.95ZM487.816 472.775L487.958 472.981L488.212 472.806L488.07 472.6L487.927 472.394L487.674 472.569L487.816 472.775ZM488.07 472.6L488.317 472.634L488.341 472.459L488.093 472.425L487.845 472.391L487.822 472.566L488.07 472.6ZM488.093 472.425L488.34 472.384L488.31 472.209L488.064 472.25L487.817 472.291L487.847 472.466L488.093 472.425ZM488.064 472.25L488.272 472.389L488.389 472.214L488.18 472.075L487.972 471.936L487.856 472.111L488.064 472.25ZM488.18 472.075L488.427 472.034L488.398 471.859L488.151 471.9L487.905 471.941L487.934 472.116L488.18 472.075ZM488.151 471.9L488.32 471.716L488.129 471.541L487.96 471.725L487.791 471.909L487.983 472.084L488.151 471.9ZM487.96 471.725L488.104 471.929L488.352 471.754L488.207 471.55L488.063 471.346L487.815 471.521L487.96 471.725ZM488.207 471.55L488.312 471.323L487.936 471.148L487.831 471.375L487.725 471.602L488.102 471.777L488.207 471.55ZM487.831 471.375L487.978 471.577L488.219 471.402L488.072 471.2L487.925 470.998L487.684 471.173L487.831 471.375ZM488.072 471.2L488.216 470.996L487.967 470.821L487.823 471.025L487.679 471.229L487.928 471.404L488.072 471.2ZM487.823 471.025L487.996 471.206L488.18 471.031L488.007 470.85L487.835 470.669L487.651 470.844L487.823 471.025ZM488.007 470.85L488.256 470.827L488.24 470.652L487.991 470.675L487.742 470.698L487.758 470.873L488.007 470.85ZM487.991 470.675L488.218 470.78L488.299 470.605L488.072 470.5L487.845 470.395L487.764 470.57L487.991 470.675ZM488.072 470.5L488.321 470.522L488.336 470.347L488.087 470.325L487.838 470.303L487.823 470.478L488.072 470.5ZM488.087 470.325L488.211 470.108L487.903 469.933L487.78 470.15L487.656 470.367L487.964 470.542L488.087 470.325ZM487.78 470.15L487.878 470.38L488.285 470.205L488.187 469.975L488.088 469.745L487.681 469.92L487.78 470.15ZM488.187 469.975L488.436 469.97L488.433 469.795L488.183 469.8L487.933 469.805L487.937 469.98L488.187 469.975ZM488.183 469.8L488.412 469.699L488.335 469.524L488.106 469.625L487.877 469.726L487.954 469.901L488.183 469.8ZM488.106 469.625L488.341 469.541L488.279 469.366L488.044 469.45L487.808 469.534L487.87 469.709L488.106 469.625ZM488.044 469.45L488.221 469.274L488.047 469.099L487.87 469.275L487.693 469.451L487.866 469.626L488.044 469.45ZM487.87 469.275L488.053 469.445L488.216 469.27L488.033 469.1L487.85 468.93L487.687 469.105L487.87 469.275ZM488.033 469.1L488.282 469.078L488.267 468.903L488.018 468.925L487.769 468.947L487.784 469.122L488.033 469.1ZM488.018 468.925L488.261 468.983L488.303 468.808L488.06 468.75L487.817 468.692L487.774 468.867L488.018 468.925ZM488.06 468.75L488.283 468.861L488.371 468.686L488.147 468.575L487.923 468.464L487.836 468.639L488.06 468.75ZM488.147 468.575L488.322 468.397L488.145 468.222L487.969 468.4L487.794 468.578L487.971 468.753L488.147 468.575ZM487.969 468.4L488.191 468.515L488.282 468.34L488.06 468.225L487.838 468.11L487.747 468.285L487.969 468.4ZM488.06 468.225L488.294 468.312L488.359 468.137L488.125 468.05L487.891 467.963L487.826 468.138L488.06 468.225ZM488.125 468.05L488.232 467.824L487.864 467.649L487.757 467.875L487.65 468.101L488.018 468.276L488.125 468.05ZM487.757 467.875L487.897 468.082L488.155 467.907L488.015 467.7L487.875 467.493L487.617 467.668L487.757 467.875ZM488.015 467.7L488.204 467.536L488.051 467.361L487.863 467.525L487.674 467.689L487.827 467.864L488.015 467.7ZM487.863 467.525L488.112 467.516L488.106 467.341L487.856 467.35L487.607 467.359L487.613 467.534L487.863 467.525ZM487.856 467.35L488.105 467.381L488.126 467.206L487.878 467.175L487.63 467.144L487.608 467.319L487.856 467.35ZM487.878 467.175L488.007 467.39L488.299 467.215L488.171 467L488.042 466.785L487.75 466.96L487.878 467.175ZM488.171 467L488.3 466.786L488.011 466.611L487.882 466.825L487.752 467.039L488.041 467.214L488.171 467ZM487.882 466.825L488.117 466.742L488.056 466.567L487.82 466.65L487.584 466.733L487.646 466.908L487.882 466.825ZM487.82 466.65L488.069 466.634L488.058 466.459L487.809 466.475L487.559 466.491L487.57 466.666L487.82 466.65ZM487.809 466.475L487.921 466.699L488.27 466.524L488.158 466.3L488.047 466.076L487.697 466.251L487.809 466.475ZM488.158 466.3L488.27 466.076L487.92 465.901L487.808 466.125L487.696 466.349L488.047 466.524L488.158 466.3ZM487.808 466.125L487.926 466.346L488.161 466.221L488.043 466L487.926 465.779L487.691 465.904L487.808 466.125ZM488.043 466V465.75H488V466V466.25H488.043V466Z\" fill=\"black\"/>\n</g>\n<rect id=\"Rectangle 88_2\" x=\"485.5\" y=\"468.5\" width=\"7\" height=\"7\" fill=\"#4A3D20\" stroke=\"black\"/>\n<rect id=\"Rectangle 89_2\" x=\"502.5\" y=\"468.5\" width=\"8\" height=\"7\" fill=\"#A99463\" stroke=\"black\"/>\n<rect id=\"Rectangle 90_2\" x=\"491.5\" y=\"468.5\" width=\"13\" height=\"7\" fill=\"#6F5E37\" stroke=\"black\"/>\n<rect id=\"Rectangle 91_2\" x=\"486.5\" y=\"477.5\" width=\"23\" height=\"3\" rx=\"0.5\" fill=\"#2C2C2C\" stroke=\"black\"/>\n<rect id=\"Rectangle 95\" x=\"489.5\" y=\"480.5\" width=\"17\" height=\"3\" rx=\"0.5\" fill=\"#2C2C2C\" stroke=\"black\"/>\n</g>\n<g id=\"Group 4\">\n<rect id=\"Rectangle 94_2\" x=\"0.5\" y=\"-0.5\" width=\"9\" height=\"4\" rx=\"0.5\" transform=\"matrix(1 0 0 -1 493 577)\" fill=\"url(#paint43_linear_6_626)\" stroke=\"black\"/>\n<g id=\"Rectangle 87_3\">\n<path d=\"M488 589H508V582H488V589Z\" fill=\"#CECFD0\"/>\n<path d=\"M488 589V589.25H487.653L487.763 588.921L488 589ZM488.1 589L488.335 589.085L488.275 589.25H488.1V589ZM488.175 588.793L487.94 588.708L487.991 588.566L488.141 588.545L488.175 588.793ZM488.35 588.769L488.316 588.521L488.433 588.505L488.519 588.585L488.35 588.769ZM488.525 588.93L488.429 589.161L488.388 589.144L488.356 589.114L488.525 588.93ZM488.7 589.003L488.796 588.772L488.861 588.798L488.902 588.855L488.7 589.003ZM488.875 589.243L489.066 589.404L488.86 589.647L488.673 589.39L488.875 589.243ZM489.05 589.036L489.254 589.181L489.248 589.189L489.241 589.197L489.05 589.036ZM489.225 588.79L489.021 588.645L489.216 588.372L489.422 588.636L489.225 588.79ZM489.4 589.015L489.298 589.243L489.241 589.218L489.203 589.168L489.4 589.015ZM489.575 589.092L489.674 589.322L489.574 589.365L489.473 589.321L489.575 589.092ZM489.75 589.017L489.651 588.787L489.781 588.731L489.896 588.814L489.75 589.017ZM489.925 589.143L490.086 589.334L489.937 589.459L489.779 589.346L489.925 589.143ZM490.1 588.996L489.939 588.805L490.135 588.64L490.295 588.84L490.1 588.996ZM490.275 589.215L490.483 589.353L490.294 589.638L490.08 589.371L490.275 589.215ZM490.45 588.952L490.242 588.813L490.347 588.656L490.527 588.714L490.45 588.952ZM490.625 589.009L490.609 589.258L490.578 589.256L490.548 589.246L490.625 589.009ZM490.8 589.02L490.816 588.77L490.875 588.774L490.927 588.804L490.8 589.02ZM490.975 589.123L491.145 589.306L491.008 589.433L490.848 589.338L490.975 589.123ZM491.15 588.961L490.98 588.777L491.169 588.603L491.338 588.796L491.15 588.961ZM491.325 589.16L491.33 589.41L491.214 589.412L491.137 589.325L491.325 589.16ZM491.5 589.157L491.558 589.4L491.532 589.406L491.505 589.407L491.5 589.157ZM491.675 589.115L491.617 588.872L491.673 588.859L491.728 588.871L491.675 589.115ZM491.85 589.153L492.079 589.253L491.997 589.441L491.797 589.398L491.85 589.153ZM492.025 588.751L491.796 588.652L491.981 588.226L492.235 588.615L492.025 588.751ZM492.2 589.02L492.026 589.2L492.006 589.18L491.99 589.157L492.2 589.02ZM492.375 589.189L492.376 589.439L492.274 589.44L492.201 589.369L492.375 589.189ZM492.55 589.189L492.589 589.436L492.57 589.439L492.551 589.439L492.55 589.189ZM492.725 589.161L492.927 589.308L492.866 589.392L492.764 589.408L492.725 589.161ZM492.9 588.921L492.698 588.774L492.723 588.739L492.758 588.715L492.9 588.921ZM493.075 588.8L492.933 588.594L493.024 588.531L493.133 588.556L493.075 588.8ZM493.25 588.841L493.308 588.598L493.42 588.625L493.473 588.727L493.25 588.841ZM493.425 589.183L493.615 589.345L493.373 589.63L493.202 589.297L493.425 589.183ZM493.6 588.978L493.41 588.816L493.622 588.567L493.806 588.836L493.6 588.978ZM493.775 589.233L493.863 589.467L493.68 589.536L493.569 589.374L493.775 589.233ZM493.95 589.167L494.177 589.272L494.134 589.365L494.038 589.401L493.95 589.167ZM494.125 588.787L493.898 588.682L493.961 588.546L494.111 588.537L494.125 588.787ZM494.3 588.777L494.286 588.528L494.365 588.523L494.432 588.565L494.3 588.777ZM494.475 588.886L494.44 589.133L494.388 589.126L494.343 589.098L494.475 588.886ZM494.65 588.911L494.685 588.664L494.741 588.671L494.787 588.702L494.65 588.911ZM494.825 589.026L494.985 589.218L494.842 589.337L494.688 589.235L494.825 589.026ZM495 588.881L494.84 588.688L495.063 588.504L495.213 588.751L495 588.881ZM495.175 589.168L495.098 589.406L495.01 589.377L494.962 589.298L495.175 589.168ZM495.35 589.224L495.56 589.359L495.457 589.521L495.273 589.462L495.35 589.224ZM495.525 588.951L495.315 588.816L495.524 588.49L495.735 588.815L495.525 588.951ZM495.7 589.221L495.887 589.388L495.669 589.633L495.49 589.357L495.7 589.221ZM495.875 589.025L495.688 588.859L495.837 588.692L496.019 588.821L495.875 589.025ZM496.05 589.148L496.263 589.279L496.123 589.506L495.906 589.353L496.05 589.148ZM496.225 588.864L496.012 588.733L496.063 588.651L496.155 588.624L496.225 588.864ZM496.4 588.813L496.33 588.573L496.364 588.563L496.4 588.563L496.4 588.813ZM496.575 588.813L496.575 588.563L496.735 588.563L496.802 588.708L496.575 588.813ZM496.75 589.193L496.719 589.441L496.581 589.423L496.523 589.297L496.75 589.193ZM496.925 589.215L496.989 589.457L496.942 589.469L496.894 589.463L496.925 589.215ZM497.1 589.168L497.036 588.927L497.091 588.912L497.146 588.923L497.1 589.168ZM497.275 589.202L497.451 589.379L497.358 589.472L497.229 589.447L497.275 589.202ZM497.45 589.028L497.634 589.197L497.626 589.205L497.45 589.028ZM497.625 588.838L497.441 588.668L497.522 588.581L497.641 588.588L497.625 588.838ZM497.8 588.849L497.816 588.599L497.939 588.607L498.008 588.71L497.8 588.849ZM497.975 589.111L498.173 589.264L497.961 589.541L497.767 589.25L497.975 589.111ZM498.15 588.883L497.952 588.731L498.077 588.568L498.261 588.659L498.15 588.883ZM498.325 588.97L498.462 589.179L498.342 589.257L498.214 589.194L498.325 588.97ZM498.5 588.856L498.363 588.646L498.469 588.577L498.588 588.622L498.5 588.856ZM498.675 588.921L498.638 589.169L498.612 589.165L498.587 589.156L498.675 588.921ZM498.85 588.948L498.887 588.7L498.971 588.713L499.03 588.774L498.85 588.948ZM499.025 589.129L499.246 589.245L499.085 589.552L498.845 589.303L499.025 589.129ZM499.2 588.796L498.979 588.68L499.198 588.262L499.42 588.678L499.2 588.796ZM499.375 589.123L499.447 589.363L499.251 589.421L499.155 589.241L499.375 589.123ZM499.55 589.071L499.478 588.831L499.606 588.793L499.708 588.877L499.55 589.071ZM499.725 589.214L499.936 589.348L499.785 589.586L499.567 589.407L499.725 589.214ZM499.9 588.939L499.689 588.805L499.882 588.502L500.099 588.788L499.9 588.939ZM500.075 589.169L499.981 589.401L499.917 589.375L499.876 589.321L500.075 589.169ZM500.25 589.241L500.478 589.343L500.379 589.564L500.156 589.472L500.25 589.241ZM500.425 588.85L500.197 588.748L500.34 588.429L500.596 588.668L500.425 588.85ZM500.6 589.014L500.662 589.256L500.529 589.29L500.429 589.197L500.6 589.014ZM500.775 588.969L500.713 588.727L500.758 588.716L500.805 588.721L500.775 588.969ZM500.95 588.99L501.04 589.224L500.982 589.246L500.92 589.239L500.95 588.99ZM501.125 588.923L501.035 588.69L501.144 588.648L501.246 588.704L501.125 588.923ZM501.3 589.02L501.243 589.263L501.209 589.256L501.179 589.239L501.3 589.02ZM501.475 589.061L501.561 589.296L501.491 589.322L501.418 589.304L501.475 589.061ZM501.65 588.997L501.831 589.169L501.791 589.211L501.736 589.231L501.65 588.997ZM501.825 588.812L501.644 588.64L501.855 588.417L502.03 588.67L501.825 588.812ZM502 589.065L501.857 589.27L501.82 589.244L501.795 589.207L502 589.065ZM502.175 589.186L502.395 589.305L502.263 589.552L502.032 589.392L502.175 589.186ZM502.35 588.861L502.13 588.742L502.17 588.667L502.249 588.632L502.35 588.861ZM502.525 588.783L502.424 588.555L502.559 588.495L502.676 588.584L502.525 588.783ZM502.7 588.916L502.648 589.161L502.593 589.149L502.549 589.115L502.7 588.916ZM502.875 588.953L502.927 588.709L502.966 588.717L503.001 588.737L502.875 588.953ZM503.05 589.055L502.955 589.286L502.939 589.28L502.924 589.271L503.05 589.055ZM503.225 589.127L503.437 589.26L503.325 589.439L503.13 589.359L503.225 589.127ZM503.4 588.849L503.188 588.716L503.278 588.573L503.444 588.603L503.4 588.849ZM503.575 588.88L503.619 588.634L503.708 588.65L503.766 588.719L503.575 588.88ZM503.75 589.087L503.613 589.296L503.583 589.276L503.559 589.248L503.75 589.087ZM503.925 589.202L504.097 589.383L503.954 589.52L503.788 589.411L503.925 589.202ZM504.1 589.035L503.928 588.854L504.121 588.67L504.292 588.875L504.1 589.035ZM504.275 589.246L504.494 589.366L504.318 589.689L504.083 589.406L504.275 589.246ZM504.45 588.926L504.231 588.806L504.356 588.576L504.58 588.713L504.45 588.926ZM504.625 589.033L504.525 589.262L504.51 589.255L504.495 589.246L504.625 589.033ZM504.8 589.109L504.9 588.879L504.915 588.886L504.93 588.895L504.8 589.109ZM504.975 589.215L505.185 589.35L505.053 589.555L504.845 589.429L504.975 589.215ZM505.15 588.943L504.94 588.808L505.155 588.474L505.363 588.812L505.15 588.943ZM505.325 589.228L505.559 589.315L505.38 589.794L505.112 589.359L505.325 589.228ZM505.5 588.76L505.266 588.672L505.466 588.137L505.723 588.648L505.5 588.76ZM505.675 589.108L505.831 589.303L505.59 589.496L505.452 589.22L505.675 589.108ZM505.85 588.968L505.694 588.772L505.818 588.673L505.961 588.744L505.85 588.968ZM506.025 589.054L506.236 589.189L506.115 589.378L505.914 589.278L506.025 589.054ZM506.2 588.78L505.989 588.646L506.239 588.256L506.428 588.678L506.2 588.78ZM506.375 589.171L506.398 589.42L506.22 589.436L506.147 589.273L506.375 589.171ZM506.55 589.155L506.527 588.906L506.584 588.9L506.638 588.92L506.55 589.155ZM506.725 589.22L506.696 589.468L506.666 589.465L506.637 589.454L506.725 589.22ZM506.9 589.241L507.029 589.455L506.956 589.499L506.871 589.489L506.9 589.241ZM507.075 589.135L506.946 588.921L507.028 588.872L507.121 588.89L507.075 589.135ZM507.25 589.168L507.341 589.401L507.274 589.427L507.204 589.414L507.25 589.168ZM507.425 589.1L507.646 589.217L507.602 589.299L507.516 589.332L507.425 589.1ZM507.6 588.77L507.379 588.653L507.529 588.372L507.767 588.584L507.6 588.77ZM507.775 588.927L507.942 588.74L507.942 588.741L507.775 588.927ZM507.95 589.084L508.164 588.955L507.783 589.27L507.95 589.084ZM507.824 588.875L507.61 589.004L507.592 588.974L507.582 588.941L507.824 588.875ZM507.776 588.7L507.535 588.766L507.489 588.597L507.631 588.496L507.776 588.7ZM508.022 588.525L508.257 588.439L508.323 588.618L508.167 588.729L508.022 588.525ZM507.958 588.35L507.723 588.436L507.717 588.42L507.713 588.403L507.958 588.35ZM507.919 588.175L507.675 588.228L507.636 588.051L507.794 587.959L507.919 588.175ZM508.22 588L508.356 587.79L508.699 588.011L508.346 588.216L508.22 588ZM507.949 587.825L507.813 588.035L507.776 588.011L507.749 587.975L507.949 587.825ZM507.817 587.65L507.617 587.8L507.433 587.555L507.71 587.424L507.817 587.65ZM508.188 587.475L508.283 587.244L508.807 587.459L508.294 587.701L508.188 587.475ZM507.762 587.3L507.667 587.531L507.238 587.355L507.622 587.093L507.762 587.3ZM508.019 587.125L508.251 587.22L508.222 587.289L508.16 587.332L508.019 587.125ZM508.091 586.95L508.25 586.757L508.392 586.874L508.322 587.045L508.091 586.95ZM507.878 586.775L507.719 586.968L507.499 586.786L507.708 586.592L507.878 586.775ZM508.067 586.6L508.212 586.397L508.461 586.575L508.237 586.783L508.067 586.6ZM507.822 586.425L507.676 586.628L507.485 586.492L507.61 586.293L507.822 586.425ZM507.931 586.25L507.719 586.117L507.726 586.107L507.734 586.096L507.931 586.25ZM508.067 586.075L508.28 585.944L508.371 586.092L508.265 586.229L508.067 586.075ZM507.959 585.9L507.747 586.031L507.619 585.824L507.823 585.691L507.959 585.9ZM508.227 585.725L508.375 585.523L508.666 585.737L508.364 585.934L508.227 585.725ZM507.988 585.55L507.84 585.752L507.824 585.74L507.809 585.725L507.988 585.55ZM507.817 585.375L507.638 585.55L507.389 585.295L507.713 585.147L507.817 585.375ZM508.202 585.2L508.32 584.98L508.763 585.219L508.305 585.428L508.202 585.2ZM507.877 585.025L507.759 585.245L507.666 585.195L507.637 585.094L507.877 585.025ZM507.827 584.85L507.587 584.919L507.557 584.813L507.614 584.72L507.827 584.85ZM507.934 584.675L508.181 584.636L508.195 584.727L508.147 584.805L507.934 584.675ZM507.907 584.5L507.66 584.539L507.639 584.405L507.739 584.315L507.907 584.5ZM508.099 584.325L508.257 584.131L508.483 584.315L508.267 584.51L508.099 584.325ZM507.884 584.15L507.726 584.344L507.69 584.315L507.667 584.274L507.884 584.15ZM507.784 583.975L507.567 584.099L507.495 583.973L507.569 583.848L507.784 583.975ZM507.887 583.8L508.106 583.679L508.175 583.804L508.103 583.927L507.887 583.8ZM507.79 583.625L507.572 583.746L507.493 583.604L507.591 583.474L507.79 583.625ZM507.923 583.45L508.146 583.337L508.217 583.477L508.122 583.601L507.923 583.45ZM507.835 583.275L507.612 583.388L507.545 583.255L507.629 583.133L507.835 583.275ZM507.956 583.1L508.139 582.93L508.275 583.077L508.161 583.242L507.956 583.1ZM507.794 582.925L507.61 583.095L507.504 582.98L507.561 582.834L507.794 582.925ZM507.863 582.75L507.63 582.659L507.662 582.576L507.739 582.533L507.863 582.75ZM508.17 582.575L508.403 582.485L508.48 582.686L508.294 582.792L508.17 582.575ZM508.102 582.4L507.869 582.49L507.832 582.392L507.875 582.297L508.102 582.4ZM508.182 582.225L508.408 582.118L508.457 582.223L508.409 582.328L508.182 582.225ZM508.099 582.05L508.201 581.822L508.285 581.859L508.325 581.943L508.099 582.05ZM507.875 581.95L507.773 582.178L507.738 582.163L507.71 582.137L507.875 581.95ZM507.7 581.795L507.483 581.671L507.636 581.406L507.865 581.608L507.7 581.795ZM507.525 582.099L507.742 582.224L507.53 582.591L507.311 582.228L507.525 582.099ZM507.35 581.808L507.119 581.714L507.307 581.253L507.564 581.679L507.35 581.808ZM507.175 582.236L507.406 582.33L507.193 582.853L506.949 582.344L507.175 582.236ZM507 581.87L506.845 581.673L507.091 581.479L507.226 581.762L507 581.87ZM506.825 582.008L506.628 581.854L506.646 581.831L506.67 581.812L506.825 582.008ZM506.65 582.233L506.847 582.386L506.704 582.571L506.51 582.44L506.65 582.233ZM506.475 582.114L506.572 581.884L506.595 581.893L506.615 581.907L506.475 582.114ZM506.3 582.04L506.108 581.88L506.227 581.738L506.397 581.81L506.3 582.04ZM506.125 582.25L506.317 582.41L506.054 582.725L505.894 582.346L506.125 582.25ZM505.95 581.833L505.79 581.641L506.049 581.424L506.181 581.736L505.95 581.833ZM505.775 581.979L505.935 582.171L505.847 582.245L505.733 582.226L505.775 581.979ZM505.6 581.949L505.455 581.745L505.54 581.686L505.642 581.703L505.6 581.949ZM505.425 582.073L505.57 582.277L505.447 582.364L505.313 582.297L505.425 582.073ZM505.25 581.986L505.138 582.21L505.094 582.187L505.061 582.15L505.25 581.986ZM505.075 581.784L504.848 581.68L505.009 581.326L505.264 581.62L505.075 581.784ZM504.9 582.168L505.127 582.272L504.978 582.6L504.723 582.345L504.9 582.168ZM504.725 581.993L504.549 581.815L504.726 581.639L504.902 581.816L504.725 581.993ZM504.55 582.166L504.726 582.344L504.542 582.527L504.366 582.336L504.55 582.166ZM504.375 581.976L504.492 581.755L504.53 581.775L504.559 581.807L504.375 581.976ZM504.2 581.883L504.003 581.729L504.132 581.565L504.317 581.662L504.2 581.883ZM504.025 582.106L504.222 582.261L503.984 582.563L503.804 582.224L504.025 582.106ZM503.85 581.776L503.62 581.679L503.825 581.196L504.071 581.659L503.85 581.776ZM503.675 582.188L503.905 582.286L503.744 582.666L503.482 582.347L503.675 582.188ZM503.5 581.976L503.586 581.741L503.65 581.764L503.693 581.817L503.5 581.976ZM503.325 581.911L503.227 581.681L503.318 581.642L503.411 581.677L503.325 581.911ZM503.15 581.986L502.976 581.807L503.009 581.774L503.052 581.756L503.15 581.986ZM502.975 582.156L503.149 582.335L502.959 582.519L502.786 582.319L502.975 582.156ZM502.8 581.954L502.588 581.822L502.767 581.534L502.989 581.79L502.8 581.954ZM502.625 582.235L502.837 582.367L502.737 582.529L502.554 582.475L502.625 582.235ZM502.45 582.183L502.408 581.937L502.465 581.927L502.521 581.944L502.45 582.183ZM502.275 582.213L502.317 582.46L502.144 582.49L502.057 582.336L502.275 582.213ZM502.1 581.902L501.891 581.766L502.116 581.421L502.318 581.78L502.1 581.902ZM501.925 582.17L502.134 582.307L502.006 582.504L501.801 582.388L501.925 582.17ZM501.75 582.071L501.831 581.834L501.853 581.842L501.874 581.853L501.75 582.071ZM501.575 582.011L501.494 582.247L501.457 582.235L501.426 582.212L501.575 582.011ZM501.4 581.881L501.197 581.736L501.344 581.529L501.549 581.68L501.4 581.881ZM501.225 582.126L501.428 582.271L501.392 582.323L501.335 582.35L501.225 582.126ZM501.05 582.212L501.16 582.436L501.015 582.507L500.891 582.405L501.05 582.212ZM500.875 582.067L500.915 581.821L500.982 581.831L501.034 581.875L500.875 582.067ZM500.7 582.039L500.66 582.286L500.555 582.269L500.494 582.181L500.7 582.039ZM500.525 581.785L500.422 581.557L500.613 581.471L500.731 581.643L500.525 581.785ZM500.35 581.864L500.453 582.092L500.379 582.125L500.3 582.109L500.35 581.864ZM500.175 581.828L499.952 581.716L500.038 581.545L500.225 581.583L500.175 581.828ZM500 582.175L500.223 582.288L500.053 582.625L499.809 582.337L500 582.175ZM499.825 581.969L499.649 581.791L499.841 581.6L500.016 581.807L499.825 581.969ZM499.65 582.142L499.826 582.32L499.727 582.418L499.591 582.385L499.65 582.142ZM499.475 582.1L499.487 581.851L499.51 581.852L499.534 581.857L499.475 582.1ZM499.3 582.092L499.277 581.843L499.294 581.842L499.312 581.842L499.3 582.092ZM499.125 582.108L499.148 582.357L498.976 582.373L498.9 582.218L499.125 582.108ZM498.95 581.75L498.715 581.664L498.917 581.113L499.175 581.64L498.95 581.75ZM498.775 582.229L499.01 582.315L498.881 582.668L498.605 582.412L498.775 582.229ZM498.6 582.067L498.76 581.874L498.77 581.883L498.6 582.067ZM498.425 581.922L498.263 581.732L498.423 581.595L498.584 581.729L498.425 581.922ZM498.25 582.071L498.412 582.261L498.289 582.366L498.143 582.297L498.25 582.071ZM498.075 581.988L497.896 581.814L498.02 581.686L498.182 581.762L498.075 581.988ZM497.9 582.168L498.079 582.342L497.824 582.605L497.672 582.271L497.9 582.168ZM497.725 581.782L497.522 581.636L497.774 581.285L497.953 581.679L497.725 581.782ZM497.55 582.026L497.753 582.172L497.698 582.248L497.607 582.269L497.55 582.026ZM497.375 582.067L497.432 582.31L497.337 582.333L497.252 582.285L497.375 582.067ZM497.2 581.968L497.065 581.758L497.191 581.677L497.323 581.751L497.2 581.968ZM497.025 582.081L497.16 582.291L497.123 582.315L497.079 582.325L497.025 582.081ZM496.85 582.12L496.904 582.364L496.798 582.388L496.708 582.326L496.85 582.12ZM496.675 581.999L496.533 582.205L496.527 582.201L496.675 581.999ZM496.5 581.871L496.31 581.708L496.461 581.532L496.648 581.669L496.5 581.871ZM496.325 582.076L496.515 582.238L496.404 582.369L496.242 582.312L496.325 582.076ZM496.15 582.014L495.998 581.815L496.106 581.734L496.233 581.778L496.15 582.014ZM495.975 582.148L496.127 582.346L495.916 582.508L495.767 582.287L495.975 582.148ZM495.8 581.887L495.672 581.672L495.876 581.551L496.008 581.748L495.8 581.887ZM495.625 581.991L495.753 582.206L495.567 582.316L495.431 582.149L495.625 581.991ZM495.45 581.776L495.22 581.678L495.383 581.298L495.644 581.618L495.45 581.776ZM495.275 582.185L495.505 582.283L495.446 582.419L495.299 582.433L495.275 582.185ZM495.1 582.201L495.124 582.45L494.942 582.468L494.87 582.3L495.1 582.201ZM494.925 581.791L494.971 581.546L495.103 581.571L495.155 581.693L494.925 581.791ZM494.75 581.758L494.523 581.654L494.604 581.476L494.796 581.513L494.75 581.758ZM494.575 582.14L494.802 582.244L494.733 582.396L494.566 582.39L494.575 582.14ZM494.4 582.134L494.391 582.384L494.249 582.379L494.18 582.253L494.4 582.134ZM494.225 581.812L494.006 581.692L494.226 581.292L494.445 581.693L494.225 581.812ZM494.05 582.13L494.269 582.251L494.14 582.485L493.915 582.341L494.05 582.13ZM493.875 582.018L493.703 581.837L493.845 581.702L494.01 581.808L493.875 582.018ZM493.7 582.184L493.872 582.366L493.764 582.469L493.622 582.422L493.7 582.184ZM493.525 582.127L493.478 581.881L493.541 581.869L493.603 581.889L493.525 582.127ZM493.35 582.161L493.397 582.406L493.272 582.43L493.179 582.343L493.35 582.161ZM493.175 581.996L493.104 581.757L493.241 581.716L493.346 581.814L493.175 581.996ZM493 582.048L492.813 581.882L492.86 581.829L492.929 581.809L493 582.048ZM492.825 582.246L493.012 582.412L492.873 582.568L492.695 582.459L492.825 582.246ZM492.65 582.139L492.768 581.918L492.78 581.926L492.65 582.139ZM492.475 582.045L492.357 582.266L492.309 582.24L492.276 582.197L492.475 582.045ZM492.3 581.817L492.091 581.68L492.284 581.385L492.499 581.665L492.3 581.817ZM492.125 582.084L492.334 582.221L492.151 582.5L491.935 582.246L492.125 582.084ZM491.95 581.878L491.774 581.7L491.966 581.511L492.14 581.716L491.95 581.878ZM491.775 582.051L491.951 582.229L491.766 582.411L491.591 582.22L491.775 582.051ZM491.6 581.86L491.464 581.65L491.641 581.535L491.784 581.691L491.6 581.86ZM491.425 581.973L491.561 582.183L491.44 582.261L491.312 582.196L491.425 581.973ZM491.25 581.885L491.082 581.7L491.209 581.584L491.363 581.662L491.25 581.885ZM491.075 582.045L491.243 582.229L491.03 582.424L490.868 582.185L491.075 582.045ZM490.9 581.786L490.897 581.536L491.031 581.534L491.107 581.646L490.9 581.786ZM490.725 581.788L490.515 581.653L490.588 581.54L490.722 581.538L490.725 581.788ZM490.55 582.06L490.76 582.195L490.741 582.225L490.714 582.249L490.55 582.06ZM490.375 582.213L490.539 582.401L490.366 582.552L490.201 582.392L490.375 582.213ZM490.2 582.043L490.349 581.843L490.362 581.852L490.374 581.864L490.2 582.043ZM490.025 581.913L489.819 581.772L489.966 581.557L490.174 581.713L490.025 581.913ZM489.85 582.168L490.056 582.31L489.997 582.395L489.896 582.414L489.85 582.168ZM489.675 582.2L489.721 582.446L489.634 582.462L489.557 582.421L489.675 582.2ZM489.5 582.107L489.39 581.882L489.505 581.826L489.618 581.886L489.5 582.107ZM489.325 582.193L489.435 582.417L489.2 582.533L489.096 582.292L489.325 582.193ZM489.15 581.788L489.068 581.552L489.288 581.476L489.379 581.689L489.15 581.788ZM488.975 581.848L489.057 582.085L488.962 582.117L488.871 582.076L488.975 581.848ZM488.8 581.768L488.594 581.626L488.713 581.454L488.904 581.541L488.8 581.768ZM488.625 582.022L488.831 582.164L488.731 582.308L488.561 582.263L488.625 582.022ZM488.45 581.975L488.288 581.786L488.387 581.7L488.514 581.734L488.45 581.975ZM488.275 582.125L488.437 582.315L488.192 582.525L488.051 582.235L488.275 582.125ZM488.1 581.768L487.861 581.697L488.044 581.086L488.324 581.658L488.1 581.768ZM488.008 582.075L488.247 582.147L488.24 582.172L488.227 582.196L488.008 582.075ZM487.912 582.25L487.695 582.375L487.625 582.253L487.693 582.129L487.912 582.25ZM488.013 582.425L488.229 582.3L488.273 582.376L488.26 582.462L488.013 582.425ZM487.986 582.6L487.737 582.583L487.738 582.573L487.739 582.563L487.986 582.6ZM487.975 582.775L488.224 582.792L488.221 582.836L488.203 582.877L487.975 582.775ZM487.897 582.95L487.765 583.163L487.579 583.048L487.668 582.848L487.897 582.95ZM488.18 583.125L488.311 582.912L488.549 583.059L488.377 583.279L488.18 583.125ZM488.043 583.3L487.83 583.43L487.74 583.282L487.846 583.146L488.043 583.3ZM488.15 583.475L488.363 583.345L488.499 583.569L488.269 583.695L488.15 583.475ZM487.828 583.65L487.65 583.825L487.417 583.589L487.709 583.43L487.828 583.65ZM488 583.825L488.178 583.65L488.188 583.66L488.197 583.672L488 583.825ZM488.136 584L488.333 583.847L488.481 584.038L488.296 584.192L488.136 584ZM487.925 584.175L487.676 584.154L487.685 584.05L487.765 583.983L487.925 584.175ZM487.911 584.35L487.773 584.558L487.649 584.477L487.662 584.329L487.911 584.35ZM488.175 584.525L488.313 584.317L488.454 584.41L488.419 584.576L488.175 584.525ZM488.138 584.7L487.891 584.663L487.893 584.649L488.138 584.7ZM488.112 584.875L488.359 584.912L488.342 585.024L488.247 585.085L488.112 584.875ZM487.84 585.05L487.735 585.277L487.322 585.086L487.704 584.84L487.84 585.05ZM488.217 585.225L488.322 584.998L488.79 585.215L488.33 585.448L488.217 585.225ZM487.872 585.4L487.68 585.56L487.479 585.319L487.759 585.177L487.872 585.4ZM488.018 585.575L488.21 585.415L488.225 585.433L488.237 585.454L488.018 585.575ZM488.115 585.75L488.334 585.629L488.398 585.744L488.339 585.862L488.115 585.75ZM488.028 585.925L488.252 586.037L488.246 586.047L488.028 585.925ZM487.93 586.1L488.148 586.222L488.131 586.253L488.105 586.278L487.93 586.1ZM487.752 586.275L487.588 586.464L487.384 586.287L487.577 586.097L487.752 586.275ZM487.954 586.45L487.806 586.651L487.798 586.646L487.79 586.639L487.954 586.45ZM488.192 586.625L488.34 586.424L488.675 586.67L488.301 586.85L488.192 586.625ZM487.829 586.8L487.727 587.028L487.238 586.808L487.721 586.575L487.829 586.8ZM488.217 586.975L488.32 586.747L488.82 586.973L488.322 587.202L488.217 586.975ZM487.837 587.15L487.629 587.289L487.467 587.045L487.732 586.923L487.837 587.15ZM487.953 587.325L488.162 587.186L488.219 587.273L488.198 587.376L487.953 587.325ZM487.917 587.5L487.765 587.699L487.64 587.603L487.672 587.449L487.917 587.5ZM488.146 587.675L488.298 587.476L488.37 587.531L488.39 587.62L488.146 587.675ZM488.186 587.85L488.43 587.795L488.476 588.001L488.281 588.081L488.186 587.85ZM487.762 588.025L487.565 588.179L487.362 587.92L487.666 587.794L487.762 588.025ZM487.899 588.2L488.096 588.046L488.117 588.073L488.13 588.105L487.899 588.2ZM487.971 588.375L488.202 588.28L488.255 588.409L488.173 588.522L487.971 588.375ZM487.843 588.55L487.707 588.76L487.485 588.616L487.641 588.403L487.843 588.55ZM488.112 588.725L488.248 588.515L488.428 588.632L488.34 588.828L488.112 588.725ZM488.034 588.9L487.796 588.821L487.8 588.809L487.806 588.797L488.034 588.9ZM488 589V588.75H488.1V589V589.25H488V589ZM488.1 589L487.865 588.915L487.94 588.708L488.175 588.793L488.41 588.878L488.335 589.085L488.1 589ZM488.175 588.793L488.141 588.545L488.316 588.521L488.35 588.769L488.384 589.017L488.209 589.041L488.175 588.793ZM488.35 588.769L488.519 588.585L488.694 588.746L488.525 588.93L488.356 589.114L488.181 588.953L488.35 588.769ZM488.525 588.93L488.621 588.699L488.796 588.772L488.7 589.003L488.604 589.234L488.429 589.161L488.525 588.93ZM488.7 589.003L488.902 588.855L489.077 589.096L488.875 589.243L488.673 589.39L488.498 589.15L488.7 589.003ZM488.875 589.243L488.684 589.081L488.859 588.874L489.05 589.036L489.241 589.197L489.066 589.404L488.875 589.243ZM489.05 589.036L488.846 588.891L489.021 588.645L489.225 588.79L489.429 588.935L489.254 589.181L489.05 589.036ZM489.225 588.79L489.422 588.636L489.597 588.861L489.4 589.015L489.203 589.168L489.028 588.944L489.225 588.79ZM489.4 589.015L489.502 588.786L489.677 588.864L489.575 589.092L489.473 589.321L489.298 589.243L489.4 589.015ZM489.575 589.092L489.476 588.863L489.651 588.787L489.75 589.017L489.849 589.246L489.674 589.322L489.575 589.092ZM489.75 589.017L489.896 588.814L490.071 588.94L489.925 589.143L489.779 589.346L489.604 589.22L489.75 589.017ZM489.925 589.143L489.764 588.951L489.939 588.805L490.1 588.996L490.261 589.188L490.086 589.334L489.925 589.143ZM490.1 588.996L490.295 588.84L490.47 589.058L490.275 589.215L490.08 589.371L489.905 589.153L490.1 588.996ZM490.275 589.215L490.067 589.076L490.242 588.813L490.45 588.952L490.658 589.09L490.483 589.353L490.275 589.215ZM490.45 588.952L490.527 588.714L490.702 588.771L490.625 589.009L490.548 589.246L490.373 589.19L490.45 588.952ZM490.625 589.009L490.641 588.759L490.816 588.77L490.8 589.02L490.784 589.269L490.609 589.258L490.625 589.009ZM490.8 589.02L490.927 588.804L491.102 588.907L490.975 589.123L490.848 589.338L490.673 589.235L490.8 589.02ZM490.975 589.123L490.805 588.939L490.98 588.777L491.15 588.961L491.32 589.144L491.145 589.306L490.975 589.123ZM491.15 588.961L491.338 588.796L491.513 588.995L491.325 589.16L491.137 589.325L490.962 589.125L491.15 588.961ZM491.325 589.16L491.32 588.91L491.495 588.907L491.5 589.157L491.505 589.407L491.33 589.41L491.325 589.16ZM491.5 589.157L491.442 588.914L491.617 588.872L491.675 589.115L491.733 589.358L491.558 589.4L491.5 589.157ZM491.675 589.115L491.728 588.871L491.903 588.909L491.85 589.153L491.797 589.398L491.622 589.359L491.675 589.115ZM491.85 589.153L491.621 589.054L491.796 588.652L492.025 588.751L492.254 588.851L492.079 589.253L491.85 589.153ZM492.025 588.751L492.235 588.615L492.41 588.884L492.2 589.02L491.99 589.157L491.815 588.888L492.025 588.751ZM492.2 589.02L492.374 588.841L492.549 589.01L492.375 589.189L492.201 589.369L492.026 589.2L492.2 589.02ZM492.375 589.189L492.374 588.939L492.549 588.939L492.55 589.189L492.551 589.439L492.376 589.439L492.375 589.189ZM492.55 589.189L492.511 588.942L492.686 588.914L492.725 589.161L492.764 589.408L492.589 589.436L492.55 589.189ZM492.725 589.161L492.523 589.014L492.698 588.774L492.9 588.921L493.102 589.068L492.927 589.308L492.725 589.161ZM492.9 588.921L492.758 588.715L492.933 588.594L493.075 588.8L493.217 589.005L493.042 589.126L492.9 588.921ZM493.075 588.8L493.133 588.556L493.308 588.598L493.25 588.841L493.192 589.084L493.017 589.043L493.075 588.8ZM493.25 588.841L493.473 588.727L493.648 589.069L493.425 589.183L493.202 589.297L493.027 588.955L493.25 588.841ZM493.425 589.183L493.235 589.021L493.41 588.816L493.6 588.978L493.79 589.14L493.615 589.345L493.425 589.183ZM493.6 588.978L493.806 588.836L493.981 589.092L493.775 589.233L493.569 589.374L493.394 589.119L493.6 588.978ZM493.775 589.233L493.687 588.999L493.862 588.933L493.95 589.167L494.038 589.401L493.863 589.467L493.775 589.233ZM493.95 589.167L493.723 589.063L493.898 588.682L494.125 588.787L494.352 588.892L494.177 589.272L493.95 589.167ZM494.125 588.787L494.111 588.537L494.286 588.528L494.3 588.777L494.314 589.027L494.139 589.037L494.125 588.787ZM494.3 588.777L494.432 588.565L494.607 588.674L494.475 588.886L494.343 589.098L494.168 588.99L494.3 588.777ZM494.475 588.886L494.51 588.639L494.685 588.664L494.65 588.911L494.615 589.159L494.44 589.133L494.475 588.886ZM494.65 588.911L494.787 588.702L494.962 588.817L494.825 589.026L494.688 589.235L494.513 589.12L494.65 588.911ZM494.825 589.026L494.665 588.834L494.84 588.688L495 588.881L495.16 589.073L494.985 589.218L494.825 589.026ZM495 588.881L495.213 588.751L495.388 589.038L495.175 589.168L494.962 589.298L494.787 589.011L495 588.881ZM495.175 589.168L495.252 588.93L495.427 588.986L495.35 589.224L495.273 589.462L495.098 589.406L495.175 589.168ZM495.35 589.224L495.14 589.089L495.315 588.816L495.525 588.951L495.735 589.086L495.56 589.359L495.35 589.224ZM495.525 588.951L495.735 588.815L495.91 589.086L495.7 589.221L495.49 589.357L495.315 589.087L495.525 588.951ZM495.7 589.221L495.513 589.055L495.688 588.859L495.875 589.025L496.062 589.191L495.887 589.388L495.7 589.221ZM495.875 589.025L496.019 588.821L496.194 588.944L496.05 589.148L495.906 589.353L495.731 589.229L495.875 589.025ZM496.05 589.148L495.837 589.017L496.012 588.733L496.225 588.864L496.438 588.995L496.263 589.279L496.05 589.148ZM496.225 588.864L496.155 588.624L496.33 588.573L496.4 588.813L496.47 589.053L496.295 589.104L496.225 588.864ZM496.4 588.813L496.4 588.563L496.575 588.563L496.575 588.813L496.575 589.063L496.4 589.063L496.4 588.813ZM496.575 588.813L496.802 588.708L496.977 589.088L496.75 589.193L496.523 589.297L496.348 588.918L496.575 588.813ZM496.75 589.193L496.781 588.945L496.956 588.967L496.925 589.215L496.894 589.463L496.719 589.441L496.75 589.193ZM496.925 589.215L496.861 588.973L497.036 588.927L497.1 589.168L497.164 589.41L496.989 589.457L496.925 589.215ZM497.1 589.168L497.146 588.923L497.321 588.956L497.275 589.202L497.229 589.447L497.054 589.414L497.1 589.168ZM497.275 589.202L497.099 589.024L497.274 588.85L497.45 589.028L497.626 589.205L497.451 589.379L497.275 589.202ZM497.45 589.028L497.266 588.858L497.441 588.668L497.625 588.838L497.809 589.007L497.634 589.197L497.45 589.028ZM497.625 588.838L497.641 588.588L497.816 588.599L497.8 588.849L497.784 589.098L497.609 589.087L497.625 588.838ZM497.8 588.849L498.008 588.71L498.183 588.973L497.975 589.111L497.767 589.25L497.592 588.988L497.8 588.849ZM497.975 589.111L497.777 588.959L497.952 588.731L498.15 588.883L498.348 589.035L498.173 589.264L497.975 589.111ZM498.15 588.883L498.261 588.659L498.436 588.746L498.325 588.97L498.214 589.194L498.039 589.107L498.15 588.883ZM498.325 588.97L498.188 588.761L498.363 588.646L498.5 588.856L498.637 589.065L498.462 589.179L498.325 588.97ZM498.5 588.856L498.588 588.622L498.763 588.687L498.675 588.921L498.587 589.156L498.412 589.09L498.5 588.856ZM498.675 588.921L498.712 588.674L498.887 588.7L498.85 588.948L498.813 589.195L498.638 589.169L498.675 588.921ZM498.85 588.948L499.03 588.774L499.205 588.955L499.025 589.129L498.845 589.303L498.67 589.121L498.85 588.948ZM499.025 589.129L498.804 589.013L498.979 588.68L499.2 588.796L499.421 588.912L499.246 589.245L499.025 589.129ZM499.2 588.796L499.42 588.678L499.595 589.005L499.375 589.123L499.155 589.241L498.98 588.914L499.2 588.796ZM499.375 589.123L499.303 588.884L499.478 588.831L499.55 589.071L499.622 589.31L499.447 589.363L499.375 589.123ZM499.55 589.071L499.708 588.877L499.883 589.02L499.725 589.214L499.567 589.407L499.392 589.264L499.55 589.071ZM499.725 589.214L499.514 589.08L499.689 588.805L499.9 588.939L500.111 589.073L499.936 589.348L499.725 589.214ZM499.9 588.939L500.099 588.788L500.274 589.018L500.075 589.169L499.876 589.321L499.701 589.09L499.9 588.939ZM500.075 589.169L500.169 588.938L500.344 589.009L500.25 589.241L500.156 589.472L499.981 589.401L500.075 589.169ZM500.25 589.241L500.022 589.139L500.197 588.748L500.425 588.85L500.653 588.953L500.478 589.343L500.25 589.241ZM500.425 588.85L500.596 588.668L500.771 588.831L500.6 589.014L500.429 589.197L500.254 589.033L500.425 588.85ZM500.6 589.014L500.538 588.772L500.713 588.727L500.775 588.969L500.837 589.212L500.662 589.256L500.6 589.014ZM500.775 588.969L500.805 588.721L500.98 588.742L500.95 588.99L500.92 589.239L500.745 589.218L500.775 588.969ZM500.95 588.99L500.86 588.757L501.035 588.69L501.125 588.923L501.215 589.156L501.04 589.224L500.95 588.99ZM501.125 588.923L501.246 588.704L501.421 588.801L501.3 589.02L501.179 589.239L501.004 589.142L501.125 588.923ZM501.3 589.02L501.357 588.777L501.532 588.818L501.475 589.061L501.418 589.304L501.243 589.263L501.3 589.02ZM501.475 589.061L501.389 588.826L501.564 588.762L501.65 588.997L501.736 589.231L501.561 589.296L501.475 589.061ZM501.65 588.997L501.469 588.825L501.644 588.64L501.825 588.812L502.006 588.985L501.831 589.169L501.65 588.997ZM501.825 588.812L502.03 588.67L502.205 588.922L502 589.065L501.795 589.207L501.62 588.955L501.825 588.812ZM502 589.065L502.143 588.859L502.318 588.981L502.175 589.186L502.032 589.392L501.857 589.27L502 589.065ZM502.175 589.186L501.955 589.068L502.13 588.742L502.35 588.861L502.57 588.979L502.395 589.305L502.175 589.186ZM502.35 588.861L502.249 588.632L502.424 588.555L502.525 588.783L502.626 589.012L502.451 589.089L502.35 588.861ZM502.525 588.783L502.676 588.584L502.851 588.717L502.7 588.916L502.549 589.115L502.374 588.982L502.525 588.783ZM502.7 588.916L502.752 588.672L502.927 588.709L502.875 588.953L502.823 589.198L502.648 589.161L502.7 588.916ZM502.875 588.953L503.001 588.737L503.176 588.839L503.05 589.055L502.924 589.271L502.749 589.169L502.875 588.953ZM503.05 589.055L503.145 588.824L503.32 588.896L503.225 589.127L503.13 589.359L502.955 589.286L503.05 589.055ZM503.225 589.127L503.013 588.995L503.188 588.716L503.4 588.849L503.612 588.982L503.437 589.26L503.225 589.127ZM503.4 588.849L503.444 588.603L503.619 588.634L503.575 588.88L503.531 589.126L503.356 589.095L503.4 588.849ZM503.575 588.88L503.766 588.719L503.941 588.925L503.75 589.087L503.559 589.248L503.384 589.042L503.575 588.88ZM503.75 589.087L503.887 588.878L504.062 588.993L503.925 589.202L503.788 589.411L503.613 589.296L503.75 589.087ZM503.925 589.202L503.753 589.021L503.928 588.854L504.1 589.035L504.272 589.216L504.097 589.383L503.925 589.202ZM504.1 589.035L504.292 588.875L504.467 589.086L504.275 589.246L504.083 589.406L503.908 589.195L504.1 589.035ZM504.275 589.246L504.056 589.126L504.231 588.806L504.45 588.926L504.669 589.046L504.494 589.366L504.275 589.246ZM504.45 588.926L504.58 588.713L504.755 588.819L504.625 589.033L504.495 589.246L504.32 589.14L504.45 588.926ZM504.625 589.033L504.725 588.803L504.9 588.879L504.8 589.109L504.7 589.338L504.525 589.262L504.625 589.033ZM504.8 589.109L504.93 588.895L505.105 589.001L504.975 589.215L504.845 589.429L504.67 589.323L504.8 589.109ZM504.975 589.215L504.765 589.079L504.94 588.808L505.15 588.943L505.36 589.079L505.185 589.35L504.975 589.215ZM505.15 588.943L505.363 588.812L505.538 589.097L505.325 589.228L505.112 589.359L504.937 589.074L505.15 588.943ZM505.325 589.228L505.091 589.14L505.266 588.672L505.5 588.76L505.734 588.848L505.559 589.315L505.325 589.228ZM505.5 588.76L505.723 588.648L505.898 588.995L505.675 589.108L505.452 589.22L505.277 588.872L505.5 588.76ZM505.675 589.108L505.519 588.913L505.694 588.772L505.85 588.968L506.006 589.163L505.831 589.303L505.675 589.108ZM505.85 588.968L505.961 588.744L506.136 588.83L506.025 589.054L505.914 589.278L505.739 589.192L505.85 588.968ZM506.025 589.054L505.814 588.92L505.989 588.646L506.2 588.78L506.411 588.915L506.236 589.189L506.025 589.054ZM506.2 588.78L506.428 588.678L506.603 589.069L506.375 589.171L506.147 589.273L505.972 588.883L506.2 588.78ZM506.375 589.171L506.352 588.922L506.527 588.906L506.55 589.155L506.573 589.404L506.398 589.42L506.375 589.171ZM506.55 589.155L506.638 588.92L506.813 588.986L506.725 589.22L506.637 589.454L506.462 589.389L506.55 589.155ZM506.725 589.22L506.754 588.972L506.929 588.992L506.9 589.241L506.871 589.489L506.696 589.468L506.725 589.22ZM506.9 589.241L506.771 589.026L506.946 588.921L507.075 589.135L507.204 589.35L507.029 589.455L506.9 589.241ZM507.075 589.135L507.121 588.89L507.296 588.923L507.25 589.168L507.204 589.414L507.029 589.381L507.075 589.135ZM507.25 589.168L507.159 588.936L507.334 588.867L507.425 589.1L507.516 589.332L507.341 589.401L507.25 589.168ZM507.425 589.1L507.204 588.982L507.379 588.653L507.6 588.77L507.821 588.888L507.646 589.217L507.425 589.1ZM507.6 588.77L507.767 588.584L507.942 588.74L507.775 588.927L507.608 589.113L507.433 588.957L507.6 588.77ZM507.775 588.927L507.942 588.741L508.117 588.898L507.95 589.084L507.783 589.27L507.608 589.113L507.775 588.927ZM507.95 589.084L507.736 589.213L507.61 589.004L507.824 588.875L508.038 588.746L508.164 588.955L507.95 589.084ZM507.824 588.875L507.582 588.941L507.535 588.766L507.776 588.7L508.017 588.634L508.065 588.809L507.824 588.875ZM507.776 588.7L507.631 588.496L507.877 588.321L508.022 588.525L508.167 588.729L507.921 588.904L507.776 588.7ZM508.022 588.525L507.788 588.611L507.723 588.436L507.958 588.35L508.192 588.264L508.257 588.439L508.022 588.525ZM507.958 588.35L507.713 588.403L507.675 588.228L507.919 588.175L508.164 588.122L508.202 588.297L507.958 588.35ZM507.919 588.175L507.794 587.959L508.094 587.784L508.22 588L508.346 588.216L508.045 588.391L507.919 588.175ZM508.22 588L508.085 588.21L507.813 588.035L507.949 587.825L508.084 587.615L508.356 587.79L508.22 588ZM507.949 587.825L507.749 587.975L507.617 587.8L507.817 587.65L508.017 587.5L508.148 587.675L507.949 587.825ZM507.817 587.65L507.71 587.424L508.081 587.249L508.188 587.475L508.294 587.701L507.924 587.876L507.817 587.65ZM508.188 587.475L508.092 587.706L507.667 587.531L507.762 587.3L507.857 587.069L508.283 587.244L508.188 587.475ZM507.762 587.3L507.622 587.093L507.879 586.918L508.019 587.125L508.16 587.332L507.903 587.507L507.762 587.3ZM508.019 587.125L507.788 587.03L507.86 586.855L508.091 586.95L508.322 587.045L508.251 587.22L508.019 587.125ZM508.091 586.95L507.932 587.143L507.719 586.968L507.878 586.775L508.037 586.582L508.25 586.757L508.091 586.95ZM507.878 586.775L507.708 586.592L507.896 586.417L508.067 586.6L508.237 586.783L508.048 586.958L507.878 586.775ZM508.067 586.6L507.921 586.803L507.676 586.628L507.822 586.425L507.967 586.222L508.212 586.397L508.067 586.6ZM507.822 586.425L507.61 586.293L507.719 586.117L507.931 586.25L508.143 586.382L508.034 586.557L507.822 586.425ZM507.931 586.25L507.734 586.096L507.87 585.921L508.067 586.075L508.265 586.229L508.128 586.404L507.931 586.25ZM508.067 586.075L507.855 586.206L507.747 586.031L507.959 585.9L508.172 585.769L508.28 585.944L508.067 586.075ZM507.959 585.9L507.823 585.691L508.09 585.516L508.227 585.725L508.364 585.934L508.096 586.109L507.959 585.9ZM508.227 585.725L508.079 585.927L507.84 585.752L507.988 585.55L508.136 585.348L508.375 585.523L508.227 585.725ZM507.988 585.55L507.809 585.725L507.638 585.55L507.817 585.375L507.995 585.2L508.167 585.375L507.988 585.55ZM507.817 585.375L507.713 585.147L508.098 584.972L508.202 585.2L508.305 585.428L507.92 585.603L507.817 585.375ZM508.202 585.2L508.083 585.42L507.759 585.245L507.877 585.025L507.996 584.805L508.32 584.98L508.202 585.2ZM507.877 585.025L507.637 585.094L507.587 584.919L507.827 584.85L508.068 584.781L508.118 584.956L507.877 585.025ZM507.827 584.85L507.614 584.72L507.72 584.545L507.934 584.675L508.147 584.805L508.041 584.98L507.827 584.85ZM507.934 584.675L507.687 584.714L507.66 584.539L507.907 584.5L508.154 584.461L508.181 584.636L507.934 584.675ZM507.907 584.5L507.739 584.315L507.931 584.14L508.099 584.325L508.267 584.51L508.075 584.685L507.907 584.5ZM508.099 584.325L507.942 584.519L507.726 584.344L507.884 584.15L508.042 583.956L508.257 584.131L508.099 584.325ZM507.884 584.15L507.667 584.274L507.567 584.099L507.784 583.975L508.001 583.851L508.101 584.026L507.884 584.15ZM507.784 583.975L507.569 583.848L507.672 583.673L507.887 583.8L508.103 583.927L508 584.102L507.784 583.975ZM507.887 583.8L507.668 583.921L507.572 583.746L507.79 583.625L508.009 583.504L508.106 583.679L507.887 583.8ZM507.79 583.625L507.591 583.474L507.724 583.299L507.923 583.45L508.122 583.601L507.99 583.776L507.79 583.625ZM507.923 583.45L507.7 583.563L507.612 583.388L507.835 583.275L508.058 583.162L508.146 583.337L507.923 583.45ZM507.835 583.275L507.629 583.133L507.75 582.958L507.956 583.1L508.161 583.242L508.041 583.417L507.835 583.275ZM507.956 583.1L507.772 583.27L507.61 583.095L507.794 582.925L507.977 582.755L508.139 582.93L507.956 583.1ZM507.794 582.925L507.561 582.834L507.63 582.659L507.863 582.75L508.095 582.841L508.027 583.016L507.794 582.925ZM507.863 582.75L507.739 582.533L508.046 582.358L508.17 582.575L508.294 582.792L507.986 582.967L507.863 582.75ZM508.17 582.575L507.937 582.665L507.869 582.49L508.102 582.4L508.336 582.31L508.403 582.485L508.17 582.575ZM508.102 582.4L507.875 582.297L507.954 582.122L508.182 582.225L508.409 582.328L508.33 582.503L508.102 582.4ZM508.182 582.225L507.956 582.332L507.873 582.157L508.099 582.05L508.325 581.943L508.408 582.118L508.182 582.225ZM508.099 582.05L507.997 582.278L507.773 582.178L507.875 581.95L507.977 581.722L508.201 581.822L508.099 582.05ZM507.875 581.95L507.71 582.137L507.535 581.983L507.7 581.795L507.865 581.608L508.04 581.763L507.875 581.95ZM507.7 581.795L507.917 581.92L507.742 582.224L507.525 582.099L507.308 581.974L507.483 581.671L507.7 581.795ZM507.525 582.099L507.311 582.228L507.136 581.937L507.35 581.808L507.564 581.679L507.739 581.97L507.525 582.099ZM507.35 581.808L507.581 581.903L507.406 582.33L507.175 582.236L506.944 582.141L507.119 581.714L507.35 581.808ZM507.175 582.236L506.949 582.344L506.774 581.977L507 581.87L507.226 581.762L507.401 582.128L507.175 582.236ZM507 581.87L507.155 582.066L506.98 582.204L506.825 582.008L506.67 581.812L506.845 581.673L507 581.87ZM506.825 582.008L507.022 582.162L506.847 582.386L506.65 582.233L506.453 582.079L506.628 581.854L506.825 582.008ZM506.65 582.233L506.51 582.44L506.335 582.321L506.475 582.114L506.615 581.907L506.79 582.026L506.65 582.233ZM506.475 582.114L506.378 582.344L506.203 582.27L506.3 582.04L506.397 581.81L506.572 581.884L506.475 582.114ZM506.3 582.04L506.492 582.2L506.317 582.41L506.125 582.25L505.933 582.089L506.108 581.88L506.3 582.04ZM506.125 582.25L505.894 582.346L505.719 581.93L505.95 581.833L506.181 581.736L506.356 582.153L506.125 582.25ZM505.95 581.833L506.11 582.025L505.935 582.171L505.775 581.979L505.615 581.787L505.79 581.641L505.95 581.833ZM505.775 581.979L505.733 582.226L505.558 582.196L505.6 581.949L505.642 581.703L505.817 581.733L505.775 581.979ZM505.6 581.949L505.745 582.153L505.57 582.277L505.425 582.073L505.28 581.869L505.455 581.745L505.6 581.949ZM505.425 582.073L505.313 582.297L505.138 582.21L505.25 581.986L505.362 581.762L505.537 581.85L505.425 582.073ZM505.25 581.986L505.061 582.15L504.886 581.948L505.075 581.784L505.264 581.62L505.439 581.822L505.25 581.986ZM505.075 581.784L505.302 581.888L505.127 582.272L504.9 582.168L504.673 582.064L504.848 581.68L505.075 581.784ZM504.9 582.168L504.723 582.345L504.548 582.169L504.725 581.993L504.902 581.816L505.077 581.991L504.9 582.168ZM504.725 581.993L504.901 582.17L504.726 582.344L504.55 582.166L504.374 581.989L504.549 581.815L504.725 581.993ZM504.55 582.166L504.366 582.336L504.191 582.145L504.375 581.976L504.559 581.807L504.734 581.997L504.55 582.166ZM504.375 581.976L504.258 582.197L504.083 582.104L504.2 581.883L504.317 581.662L504.492 581.755L504.375 581.976ZM504.2 581.883L504.397 582.038L504.222 582.261L504.025 582.106L503.828 581.952L504.003 581.729L504.2 581.883ZM504.025 582.106L503.804 582.224L503.629 581.894L503.85 581.776L504.071 581.659L504.246 581.989L504.025 582.106ZM503.85 581.776L504.08 581.874L503.905 582.286L503.675 582.188L503.445 582.091L503.62 581.679L503.85 581.776ZM503.675 582.188L503.482 582.347L503.307 582.134L503.5 581.976L503.693 581.817L503.868 582.03L503.675 582.188ZM503.5 581.976L503.414 582.21L503.239 582.146L503.325 581.911L503.411 581.677L503.586 581.741L503.5 581.976ZM503.325 581.911L503.423 582.141L503.248 582.216L503.15 581.986L503.052 581.756L503.227 581.681L503.325 581.911ZM503.15 581.986L503.324 582.166L503.149 582.335L502.975 582.156L502.801 581.976L502.976 581.807L503.15 581.986ZM502.975 582.156L502.786 582.319L502.611 582.117L502.8 581.954L502.989 581.79L503.164 581.992L502.975 582.156ZM502.8 581.954L503.012 582.086L502.837 582.367L502.625 582.235L502.413 582.103L502.588 581.822L502.8 581.954ZM502.625 582.235L502.554 582.475L502.379 582.423L502.45 582.183L502.521 581.944L502.696 581.996L502.625 582.235ZM502.45 582.183L502.492 582.43L502.317 582.46L502.275 582.213L502.233 581.967L502.408 581.937L502.45 582.183ZM502.275 582.213L502.057 582.336L501.882 582.025L502.1 581.902L502.318 581.78L502.493 582.091L502.275 582.213ZM502.1 581.902L502.309 582.039L502.134 582.307L501.925 582.17L501.716 582.034L501.891 581.766L502.1 581.902ZM501.925 582.17L501.801 582.388L501.626 582.288L501.75 582.071L501.874 581.853L502.049 581.953L501.925 582.17ZM501.75 582.071L501.669 582.307L501.494 582.247L501.575 582.011L501.656 581.774L501.831 581.834L501.75 582.071ZM501.575 582.011L501.426 582.212L501.251 582.082L501.4 581.881L501.549 581.68L501.724 581.81L501.575 582.011ZM501.4 581.881L501.603 582.027L501.428 582.271L501.225 582.126L501.022 581.98L501.197 581.736L501.4 581.881ZM501.225 582.126L501.335 582.35L501.16 582.436L501.05 582.212L500.94 581.987L501.115 581.901L501.225 582.126ZM501.05 582.212L500.891 582.405L500.716 582.26L500.875 582.067L501.034 581.875L501.209 582.019L501.05 582.212ZM500.875 582.067L500.835 582.314L500.66 582.286L500.7 582.039L500.74 581.792L500.915 581.821L500.875 582.067ZM500.7 582.039L500.494 582.181L500.319 581.927L500.525 581.785L500.731 581.643L500.906 581.897L500.7 582.039ZM500.525 581.785L500.628 582.013L500.453 582.092L500.35 581.864L500.247 581.636L500.422 581.557L500.525 581.785ZM500.35 581.864L500.3 582.109L500.125 582.073L500.175 581.828L500.225 581.583L500.4 581.619L500.35 581.864ZM500.175 581.828L500.398 581.941L500.223 582.288L500 582.175L499.777 582.063L499.952 581.716L500.175 581.828ZM500 582.175L499.809 582.337L499.634 582.13L499.825 581.969L500.016 581.807L500.191 582.014L500 582.175ZM499.825 581.969L500.001 582.146L499.826 582.32L499.65 582.142L499.474 581.965L499.649 581.791L499.825 581.969ZM499.65 582.142L499.591 582.385L499.416 582.343L499.475 582.1L499.534 581.857L499.709 581.899L499.65 582.142ZM499.475 582.1L499.463 582.35L499.288 582.342L499.3 582.092L499.312 581.842L499.487 581.851L499.475 582.1ZM499.3 582.092L499.323 582.341L499.148 582.357L499.125 582.108L499.102 581.859L499.277 581.843L499.3 582.092ZM499.125 582.108L498.9 582.218L498.725 581.86L498.95 581.75L499.175 581.64L499.35 581.998L499.125 582.108ZM498.95 581.75L499.185 581.836L499.01 582.315L498.775 582.229L498.54 582.143L498.715 581.664L498.95 581.75ZM498.775 582.229L498.605 582.412L498.43 582.25L498.6 582.067L498.77 581.883L498.945 582.045L498.775 582.229ZM498.6 582.067L498.441 582.259L498.266 582.115L498.425 581.922L498.584 581.729L498.759 581.874L498.6 582.067ZM498.425 581.922L498.587 582.112L498.412 582.261L498.25 582.071L498.088 581.881L498.263 581.732L498.425 581.922ZM498.25 582.071L498.143 582.297L497.968 582.214L498.075 581.988L498.182 581.762L498.357 581.845L498.25 582.071ZM498.075 581.988L498.254 582.163L498.079 582.342L497.9 582.168L497.721 581.994L497.896 581.814L498.075 581.988ZM497.9 582.168L497.672 582.271L497.497 581.885L497.725 581.782L497.953 581.679L498.128 582.065L497.9 582.168ZM497.725 581.782L497.928 581.928L497.753 582.172L497.55 582.026L497.347 581.88L497.522 581.636L497.725 581.782ZM497.55 582.026L497.607 582.269L497.432 582.31L497.375 582.067L497.318 581.824L497.493 581.782L497.55 582.026ZM497.375 582.067L497.252 582.285L497.077 582.186L497.2 581.968L497.323 581.751L497.498 581.849L497.375 582.067ZM497.2 581.968L497.335 582.179L497.16 582.291L497.025 582.081L496.89 581.871L497.065 581.758L497.2 581.968ZM497.025 582.081L497.079 582.325L496.904 582.364L496.85 582.12L496.796 581.876L496.971 581.837L497.025 582.081ZM496.85 582.12L496.708 582.326L496.533 582.205L496.675 581.999L496.817 581.793L496.992 581.914L496.85 582.12ZM496.675 581.999L496.527 582.201L496.352 582.072L496.5 581.871L496.648 581.669L496.823 581.798L496.675 581.999ZM496.5 581.871L496.69 582.033L496.515 582.238L496.325 582.076L496.135 581.913L496.31 581.708L496.5 581.871ZM496.325 582.076L496.242 582.312L496.067 582.25L496.15 582.014L496.233 581.778L496.408 581.84L496.325 582.076ZM496.15 582.014L496.302 582.213L496.127 582.346L495.975 582.148L495.823 581.949L495.998 581.815L496.15 582.014ZM495.975 582.148L495.767 582.287L495.592 582.027L495.8 581.887L496.008 581.748L496.183 582.008L495.975 582.148ZM495.8 581.887L495.928 582.102L495.753 582.206L495.625 581.991L495.497 581.776L495.672 581.672L495.8 581.887ZM495.625 581.991L495.431 582.149L495.256 581.934L495.45 581.776L495.644 581.618L495.819 581.833L495.625 581.991ZM495.45 581.776L495.68 581.875L495.505 582.283L495.275 582.185L495.045 582.086L495.22 581.678L495.45 581.776ZM495.275 582.185L495.299 582.433L495.124 582.45L495.1 582.201L495.076 581.953L495.251 581.936L495.275 582.185ZM495.1 582.201L494.87 582.3L494.695 581.89L494.925 581.791L495.155 581.693L495.33 582.103L495.1 582.201ZM494.925 581.791L494.879 582.037L494.704 582.004L494.75 581.758L494.796 581.513L494.971 581.546L494.925 581.791ZM494.75 581.758L494.977 581.863L494.802 582.244L494.575 582.14L494.348 582.036L494.523 581.654L494.75 581.758ZM494.575 582.14L494.566 582.39L494.391 582.384L494.4 582.134L494.409 581.884L494.584 581.89L494.575 582.14ZM494.4 582.134L494.18 582.253L494.005 581.932L494.225 581.812L494.445 581.693L494.62 582.015L494.4 582.134ZM494.225 581.812L494.444 581.933L494.269 582.251L494.05 582.13L493.831 582.009L494.006 581.692L494.225 581.812ZM494.05 582.13L493.915 582.341L493.74 582.229L493.875 582.018L494.01 581.808L494.185 581.92L494.05 582.13ZM493.875 582.018L494.047 582.199L493.872 582.366L493.7 582.184L493.528 582.003L493.703 581.837L493.875 582.018ZM493.7 582.184L493.622 582.422L493.447 582.364L493.525 582.127L493.603 581.889L493.778 581.947L493.7 582.184ZM493.525 582.127L493.572 582.372L493.397 582.406L493.35 582.161L493.303 581.915L493.478 581.881L493.525 582.127ZM493.35 582.161L493.179 582.343L493.004 582.179L493.175 581.996L493.346 581.814L493.521 581.978L493.35 582.161ZM493.175 581.996L493.246 582.236L493.071 582.288L493 582.048L492.929 581.809L493.104 581.757L493.175 581.996ZM493 582.048L493.187 582.214L493.012 582.412L492.825 582.246L492.638 582.08L492.813 581.882L493 582.048ZM492.825 582.246L492.695 582.459L492.52 582.352L492.65 582.139L492.78 581.926L492.955 582.032L492.825 582.246ZM492.65 582.139L492.532 582.359L492.357 582.266L492.475 582.045L492.593 581.825L492.768 581.919L492.65 582.139ZM492.475 582.045L492.276 582.197L492.101 581.968L492.3 581.817L492.499 581.665L492.674 581.893L492.475 582.045ZM492.3 581.817L492.509 581.954L492.334 582.221L492.125 582.084L491.916 581.947L492.091 581.68L492.3 581.817ZM492.125 582.084L491.935 582.246L491.76 582.04L491.95 581.878L492.14 581.716L492.315 581.921L492.125 582.084ZM491.95 581.878L492.126 582.056L491.951 582.229L491.775 582.051L491.599 581.873L491.774 581.7L491.95 581.878ZM491.775 582.051L491.591 582.22L491.416 582.029L491.6 581.86L491.784 581.691L491.959 581.882L491.775 582.051ZM491.6 581.86L491.736 582.07L491.561 582.183L491.425 581.973L491.289 581.763L491.464 581.65L491.6 581.86ZM491.425 581.973L491.312 582.196L491.137 582.108L491.25 581.885L491.363 581.662L491.538 581.75L491.425 581.973ZM491.25 581.885L491.418 582.07L491.243 582.229L491.075 582.045L490.907 581.86L491.082 581.7L491.25 581.885ZM491.075 582.045L490.868 582.185L490.693 581.926L490.9 581.786L491.107 581.646L491.282 581.904L491.075 582.045ZM490.9 581.786L490.903 582.036L490.728 582.038L490.725 581.788L490.722 581.538L490.897 581.536L490.9 581.786ZM490.725 581.788L490.935 581.924L490.76 582.195L490.55 582.06L490.34 581.925L490.515 581.653L490.725 581.788ZM490.55 582.06L490.714 582.249L490.539 582.401L490.375 582.213L490.211 582.024L490.386 581.872L490.55 582.06ZM490.375 582.213L490.201 582.392L490.026 582.223L490.2 582.043L490.374 581.864L490.549 582.033L490.375 582.213ZM490.2 582.043L490.051 582.244L489.876 582.114L490.025 581.913L490.174 581.713L490.349 581.843L490.2 582.043ZM490.025 581.913L490.231 582.055L490.056 582.31L489.85 582.168L489.644 582.027L489.819 581.772L490.025 581.913ZM489.85 582.168L489.896 582.414L489.721 582.446L489.675 582.2L489.629 581.955L489.804 581.922L489.85 582.168ZM489.675 582.2L489.557 582.421L489.382 582.327L489.5 582.107L489.618 581.886L489.793 581.98L489.675 582.2ZM489.5 582.107L489.61 582.331L489.435 582.417L489.325 582.193L489.215 581.969L489.39 581.882L489.5 582.107ZM489.325 582.193L489.096 582.292L488.921 581.887L489.15 581.788L489.379 581.689L489.554 582.094L489.325 582.193ZM489.15 581.788L489.232 582.024L489.057 582.085L488.975 581.848L488.893 581.612L489.068 581.552L489.15 581.788ZM488.975 581.848L488.871 582.076L488.696 581.996L488.8 581.768L488.904 581.541L489.079 581.621L488.975 581.848ZM488.8 581.768L489.006 581.91L488.831 582.164L488.625 582.022L488.419 581.88L488.594 581.626L488.8 581.768ZM488.625 582.022L488.561 582.263L488.386 582.217L488.45 581.975L488.514 581.734L488.689 581.78L488.625 582.022ZM488.45 581.975L488.612 582.165L488.437 582.315L488.275 582.125L488.113 581.935L488.288 581.786L488.45 581.975ZM488.275 582.125L488.051 582.235L487.876 581.878L488.1 581.768L488.324 581.658L488.499 582.015L488.275 582.125ZM488.1 581.768L488.339 581.84L488.247 582.147L488.008 582.075L487.769 582.003L487.861 581.697L488.1 581.768ZM488.008 582.075L488.227 582.196L488.131 582.371L487.912 582.25L487.693 582.129L487.789 581.954L488.008 582.075ZM487.912 582.25L488.128 582.125L488.229 582.3L488.013 582.425L487.797 582.55L487.695 582.375L487.912 582.25ZM488.013 582.425L488.26 582.462L488.234 582.637L487.986 582.6L487.739 582.563L487.766 582.388L488.013 582.425ZM487.986 582.6L488.236 582.617L488.224 582.792L487.975 582.775L487.725 582.758L487.737 582.583L487.986 582.6ZM487.975 582.775L488.203 582.877L488.125 583.052L487.897 582.95L487.668 582.848L487.746 582.673L487.975 582.775ZM487.897 582.95L488.028 582.737L488.311 582.912L488.18 583.125L488.049 583.338L487.765 583.163L487.897 582.95ZM488.18 583.125L488.377 583.279L488.241 583.454L488.043 583.3L487.846 583.146L487.983 582.971L488.18 583.125ZM488.043 583.3L488.257 583.17L488.363 583.345L488.15 583.475L487.936 583.605L487.83 583.43L488.043 583.3ZM488.15 583.475L488.269 583.695L487.947 583.87L487.828 583.65L487.709 583.43L488.03 583.255L488.15 583.475ZM487.828 583.65L488.006 583.475L488.178 583.65L488 583.825L487.822 584L487.65 583.825L487.828 583.65ZM488 583.825L488.197 583.672L488.333 583.847L488.136 584L487.938 584.153L487.802 583.978L488 583.825ZM488.136 584L488.296 584.192L488.085 584.367L487.925 584.175L487.765 583.983L487.976 583.808L488.136 584ZM487.925 584.175L488.174 584.196L488.16 584.371L487.911 584.35L487.662 584.329L487.676 584.154L487.925 584.175ZM487.911 584.35L488.049 584.142L488.313 584.317L488.175 584.525L488.037 584.733L487.773 584.558L487.911 584.35ZM488.175 584.525L488.419 584.576L488.383 584.751L488.138 584.7L487.893 584.649L487.93 584.474L488.175 584.525ZM488.138 584.7L488.385 584.737L488.359 584.912L488.112 584.875L487.865 584.838L487.891 584.663L488.138 584.7ZM488.112 584.875L488.247 585.085L487.975 585.26L487.84 585.05L487.704 584.84L487.976 584.665L488.112 584.875ZM487.84 585.05L487.945 584.823L488.322 584.998L488.217 585.225L488.112 585.452L487.735 585.277L487.84 585.05ZM488.217 585.225L488.33 585.448L487.985 585.623L487.872 585.4L487.759 585.177L488.104 585.002L488.217 585.225ZM487.872 585.4L488.064 585.24L488.21 585.415L488.018 585.575L487.826 585.735L487.68 585.56L487.872 585.4ZM488.018 585.575L488.237 585.454L488.334 585.629L488.115 585.75L487.897 585.871L487.8 585.696L488.018 585.575ZM488.115 585.75L488.339 585.862L488.252 586.037L488.028 585.925L487.804 585.813L487.892 585.638L488.115 585.75ZM488.028 585.925L488.246 586.047L488.148 586.222L487.93 586.1L487.712 585.978L487.81 585.803L488.028 585.925ZM487.93 586.1L488.105 586.278L487.928 586.453L487.752 586.275L487.577 586.097L487.755 585.922L487.93 586.1ZM487.752 586.275L487.916 586.086L488.118 586.261L487.954 586.45L487.79 586.639L487.588 586.464L487.752 586.275ZM487.954 586.45L488.102 586.249L488.34 586.424L488.192 586.625L488.044 586.826L487.806 586.651L487.954 586.45ZM488.192 586.625L488.301 586.85L487.938 587.025L487.829 586.8L487.721 586.575L488.084 586.4L488.192 586.625ZM487.829 586.8L487.932 586.572L488.32 586.747L488.217 586.975L488.114 587.203L487.727 587.028L487.829 586.8ZM488.217 586.975L488.322 587.202L487.941 587.377L487.837 587.15L487.732 586.923L488.113 586.748L488.217 586.975ZM487.837 587.15L488.045 587.011L488.162 587.186L487.953 587.325L487.745 587.464L487.629 587.289L487.837 587.15ZM487.953 587.325L488.198 587.376L488.162 587.551L487.917 587.5L487.672 587.449L487.709 587.274L487.953 587.325ZM487.917 587.5L488.069 587.301L488.298 587.476L488.146 587.675L487.994 587.874L487.765 587.699L487.917 587.5ZM488.146 587.675L488.39 587.62L488.43 587.795L488.186 587.85L487.942 587.905L487.902 587.73L488.146 587.675ZM488.186 587.85L488.281 588.081L487.857 588.256L487.762 588.025L487.666 587.794L488.09 587.619L488.186 587.85ZM487.762 588.025L487.959 587.871L488.096 588.046L487.899 588.2L487.702 588.354L487.565 588.179L487.762 588.025ZM487.899 588.2L488.13 588.105L488.202 588.28L487.971 588.375L487.74 588.47L487.667 588.295L487.899 588.2ZM487.971 588.375L488.173 588.522L488.045 588.697L487.843 588.55L487.641 588.403L487.769 588.228L487.971 588.375ZM487.843 588.55L487.979 588.34L488.248 588.515L488.112 588.725L487.976 588.935L487.707 588.76L487.843 588.55ZM488.112 588.725L488.34 588.828L488.261 589.003L488.034 588.9L487.806 588.797L487.884 588.622L488.112 588.725ZM488.034 588.9L488.271 588.979L488.237 589.079L488 589L487.763 588.921L487.796 588.821L488.034 588.9Z\" fill=\"black\"/>\n</g>\n<rect id=\"Rectangle 88_3\" x=\"0.5\" y=\"-0.5\" width=\"7\" height=\"7\" transform=\"matrix(1 0 0 -1 485 591)\" fill=\"#4A3D20\" stroke=\"black\"/>\n<rect id=\"Rectangle 89_3\" x=\"0.5\" y=\"-0.5\" width=\"8\" height=\"7\" transform=\"matrix(1 0 0 -1 502 591)\" fill=\"#A99463\" stroke=\"black\"/>\n<rect id=\"Rectangle 90_3\" x=\"0.5\" y=\"-0.5\" width=\"13\" height=\"7\" transform=\"matrix(1 0 0 -1 491 591)\" fill=\"#6F5E37\" stroke=\"black\"/>\n<rect id=\"Rectangle 91_3\" x=\"0.5\" y=\"-0.5\" width=\"23\" height=\"3\" rx=\"0.5\" transform=\"matrix(1 0 0 -1 486 582)\" fill=\"#2C2C2C\" stroke=\"black\"/>\n<rect id=\"Rectangle 95_2\" x=\"0.5\" y=\"-0.5\" width=\"17\" height=\"3\" rx=\"0.5\" transform=\"matrix(1 0 0 -1 489 579)\" fill=\"#2C2C2C\" stroke=\"black\"/>\n</g>\n<rect id=\"Rectangle 93\" x=\"483.5\" y=\"480.5\" width=\"29\" height=\"99\" fill=\"#D9D9D9\" fill-opacity=\"0.5\" stroke=\"black\"/>\n<g id=\"Repeat group 2\">\n<path id=\"Line 17\" d=\"M503 489.125H498\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 17_2\" d=\"M503 509.125H498\" stroke=\"black\" stroke-width=\"0.25\"/>\n<line id=\"Line 17_3\" x1=\"503\" y1=\"529.125\" x2=\"498\" y2=\"529.125\" stroke=\"black\" stroke-width=\"0.25\"/>\n<line id=\"Line 17_4\" x1=\"503\" y1=\"549.125\" x2=\"498\" y2=\"549.125\" stroke=\"black\" stroke-width=\"0.25\"/>\n<line id=\"Line 17_5\" x1=\"503\" y1=\"569.125\" x2=\"498\" y2=\"569.125\" stroke=\"black\" stroke-width=\"0.25\"/>\n</g>\n<path id=\"0\" d=\"M491.5 572.08C491.072 572.08 490.707 571.963 490.406 571.73C490.105 571.495 489.875 571.155 489.716 570.71C489.557 570.263 489.477 569.723 489.477 569.091C489.477 568.462 489.557 567.925 489.716 567.48C489.877 567.033 490.108 566.692 490.409 566.457C490.712 566.221 491.076 566.102 491.5 566.102C491.924 566.102 492.287 566.221 492.588 566.457C492.891 566.692 493.122 567.033 493.281 567.48C493.442 567.925 493.523 568.462 493.523 569.091C493.523 569.723 493.443 570.263 493.284 570.71C493.125 571.155 492.895 571.495 492.594 571.73C492.293 571.963 491.928 572.08 491.5 572.08ZM491.5 571.455C491.924 571.455 492.254 571.25 492.489 570.841C492.723 570.432 492.841 569.848 492.841 569.091C492.841 568.587 492.787 568.158 492.679 567.804C492.573 567.45 492.42 567.18 492.219 566.994C492.02 566.809 491.78 566.716 491.5 566.716C491.08 566.716 490.751 566.923 490.514 567.338C490.277 567.751 490.159 568.335 490.159 569.091C490.159 569.595 490.212 570.023 490.318 570.375C490.424 570.727 490.577 570.995 490.776 571.179C490.976 571.363 491.218 571.455 491.5 571.455Z\" fill=\"black\"/>\n<path id=\"15\" d=\"M489.648 546.182V552H488.943V546.92H488.909L487.489 547.864V547.148L488.943 546.182H489.648ZM493.139 552.08C492.806 552.08 492.506 552.013 492.239 551.881C491.972 551.748 491.758 551.566 491.597 551.335C491.436 551.104 491.348 550.841 491.332 550.545H492.014C492.041 550.809 492.16 551.027 492.372 551.199C492.586 551.369 492.842 551.455 493.139 551.455C493.378 551.455 493.59 551.399 493.776 551.287C493.963 551.175 494.11 551.022 494.216 550.827C494.324 550.63 494.378 550.407 494.378 550.159C494.378 549.905 494.322 549.679 494.21 549.48C494.1 549.279 493.949 549.121 493.756 549.006C493.563 548.89 493.342 548.831 493.094 548.83C492.916 548.828 492.733 548.855 492.545 548.912C492.358 548.967 492.204 549.038 492.082 549.125L491.423 549.045L491.776 546.182H494.798V546.807H492.366L492.162 548.523H492.196C492.315 548.428 492.465 548.349 492.645 548.287C492.825 548.224 493.012 548.193 493.207 548.193C493.563 548.193 493.881 548.278 494.159 548.449C494.439 548.617 494.659 548.848 494.818 549.142C494.979 549.436 495.06 549.771 495.06 550.148C495.06 550.519 494.976 550.85 494.81 551.142C494.645 551.432 494.418 551.661 494.128 551.83C493.838 551.996 493.509 552.08 493.139 552.08Z\" fill=\"black\"/>\n<path id=\"30\" d=\"M488.568 532.08C488.193 532.08 487.859 532.015 487.565 531.886C487.274 531.758 487.042 531.579 486.869 531.349C486.699 531.118 486.606 530.85 486.591 530.545H487.307C487.322 530.733 487.386 530.895 487.5 531.031C487.614 531.166 487.762 531.27 487.946 531.344C488.13 531.418 488.333 531.455 488.557 531.455C488.807 531.455 489.028 531.411 489.222 531.324C489.415 531.237 489.566 531.116 489.676 530.96C489.786 530.805 489.841 530.625 489.841 530.42C489.841 530.206 489.788 530.018 489.682 529.855C489.576 529.69 489.42 529.562 489.216 529.469C489.011 529.376 488.761 529.33 488.466 529.33H488V528.705H488.466C488.697 528.705 488.9 528.663 489.074 528.58C489.25 528.496 489.387 528.379 489.486 528.227C489.586 528.076 489.636 527.898 489.636 527.693C489.636 527.496 489.593 527.325 489.506 527.179C489.419 527.033 489.295 526.92 489.136 526.838C488.979 526.757 488.794 526.716 488.58 526.716C488.379 526.716 488.189 526.753 488.011 526.827C487.835 526.899 487.691 527.004 487.58 527.142C487.468 527.278 487.407 527.443 487.398 527.636H486.716C486.727 527.331 486.819 527.064 486.991 526.835C487.164 526.604 487.389 526.424 487.668 526.295C487.948 526.167 488.256 526.102 488.591 526.102C488.951 526.102 489.259 526.175 489.517 526.321C489.775 526.465 489.973 526.655 490.111 526.892C490.249 527.129 490.318 527.384 490.318 527.659C490.318 527.987 490.232 528.266 490.06 528.497C489.889 528.728 489.657 528.888 489.364 528.977V529.023C489.731 529.083 490.018 529.24 490.224 529.491C490.431 529.741 490.534 530.051 490.534 530.42C490.534 530.737 490.448 531.021 490.276 531.273C490.105 531.523 489.872 531.72 489.577 531.864C489.281 532.008 488.945 532.08 488.568 532.08ZM493.594 532.08C493.166 532.08 492.801 531.963 492.5 531.73C492.199 531.495 491.969 531.155 491.81 530.71C491.651 530.263 491.571 529.723 491.571 529.091C491.571 528.462 491.651 527.925 491.81 527.48C491.971 527.033 492.202 526.692 492.503 526.457C492.806 526.221 493.17 526.102 493.594 526.102C494.018 526.102 494.381 526.221 494.682 526.457C494.985 526.692 495.216 527.033 495.375 527.48C495.536 527.925 495.616 528.462 495.616 529.091C495.616 529.723 495.537 530.263 495.378 530.71C495.219 531.155 494.989 531.495 494.688 531.73C494.386 531.963 494.022 532.08 493.594 532.08ZM493.594 531.455C494.018 531.455 494.348 531.25 494.582 530.841C494.817 530.432 494.935 529.848 494.935 529.091C494.935 528.587 494.881 528.158 494.773 527.804C494.667 527.45 494.513 527.18 494.312 526.994C494.114 526.809 493.874 526.716 493.594 526.716C493.173 526.716 492.845 526.923 492.608 527.338C492.371 527.751 492.253 528.335 492.253 529.091C492.253 529.595 492.306 530.023 492.412 530.375C492.518 530.727 492.67 530.995 492.869 531.179C493.07 531.363 493.312 531.455 493.594 531.455Z\" fill=\"black\"/>\n<path id=\"45\" d=\"M486.466 510.807V510.227L489.023 506.182H489.443V507.08H489.159L487.227 510.136V510.182H490.67V510.807H486.466ZM489.205 512V510.631V510.361V506.182H489.875V512H489.205ZM493.553 512.08C493.22 512.08 492.92 512.013 492.653 511.881C492.386 511.748 492.172 511.566 492.011 511.335C491.85 511.104 491.762 510.841 491.746 510.545H492.428C492.455 510.809 492.574 511.027 492.786 511.199C493 511.369 493.256 511.455 493.553 511.455C493.792 511.455 494.004 511.399 494.19 511.287C494.377 511.175 494.524 511.022 494.63 510.827C494.738 510.63 494.792 510.407 494.792 510.159C494.792 509.905 494.736 509.679 494.624 509.48C494.514 509.279 494.363 509.121 494.17 509.006C493.977 508.89 493.756 508.831 493.508 508.83C493.33 508.828 493.147 508.855 492.96 508.912C492.772 508.967 492.618 509.038 492.496 509.125L491.837 509.045L492.19 506.182H495.212V506.807H492.781L492.576 508.523H492.61C492.729 508.428 492.879 508.349 493.059 508.287C493.239 508.224 493.426 508.193 493.621 508.193C493.978 508.193 494.295 508.278 494.573 508.449C494.853 508.617 495.073 508.848 495.232 509.142C495.393 509.436 495.474 509.771 495.474 510.148C495.474 510.519 495.39 510.85 495.224 511.142C495.059 511.432 494.832 511.661 494.542 511.83C494.252 511.996 493.923 512.08 493.553 512.08Z\" fill=\"black\"/>\n<path id=\"60\" d=\"M488.534 492.08C488.295 492.076 488.057 492.03 487.818 491.943C487.58 491.856 487.362 491.709 487.165 491.503C486.968 491.295 486.81 491.013 486.69 490.659C486.571 490.303 486.511 489.856 486.511 489.318C486.511 488.803 486.56 488.347 486.656 487.949C486.753 487.549 486.893 487.213 487.077 486.94C487.26 486.666 487.482 486.457 487.741 486.315C488.003 486.173 488.297 486.102 488.625 486.102C488.951 486.102 489.241 486.168 489.494 486.298C489.75 486.427 489.958 486.607 490.119 486.838C490.28 487.069 490.384 487.335 490.432 487.636H489.739C489.674 487.375 489.549 487.158 489.364 486.986C489.178 486.813 488.932 486.727 488.625 486.727C488.174 486.727 487.819 486.923 487.56 487.315C487.302 487.707 487.172 488.258 487.17 488.966H487.216C487.322 488.805 487.448 488.668 487.594 488.554C487.741 488.438 487.904 488.349 488.082 488.287C488.26 488.224 488.449 488.193 488.648 488.193C488.981 488.193 489.286 488.277 489.562 488.443C489.839 488.608 490.061 488.836 490.227 489.128C490.394 489.418 490.477 489.75 490.477 490.125C490.477 490.485 490.397 490.814 490.236 491.114C490.075 491.411 489.848 491.648 489.557 491.824C489.267 491.998 488.926 492.083 488.534 492.08ZM488.534 491.455C488.773 491.455 488.987 491.395 489.176 491.276C489.367 491.156 489.518 490.996 489.628 490.795C489.74 490.595 489.795 490.371 489.795 490.125C489.795 489.884 489.741 489.666 489.634 489.469C489.527 489.27 489.381 489.112 489.193 488.994C489.008 488.877 488.795 488.818 488.557 488.818C488.377 488.818 488.209 488.854 488.054 488.926C487.899 488.996 487.762 489.093 487.645 489.216C487.529 489.339 487.438 489.48 487.372 489.639C487.306 489.796 487.273 489.962 487.273 490.136C487.273 490.367 487.327 490.583 487.435 490.784C487.545 490.985 487.694 491.147 487.884 491.27C488.075 491.393 488.292 491.455 488.534 491.455ZM493.492 492.08C493.064 492.08 492.7 491.963 492.398 491.73C492.097 491.495 491.867 491.155 491.708 490.71C491.549 490.263 491.469 489.723 491.469 489.091C491.469 488.462 491.549 487.925 491.708 487.48C491.869 487.033 492.1 486.692 492.401 486.457C492.704 486.221 493.068 486.102 493.492 486.102C493.916 486.102 494.279 486.221 494.58 486.457C494.883 486.692 495.114 487.033 495.273 487.48C495.434 487.925 495.515 488.462 495.515 489.091C495.515 489.723 495.435 490.263 495.276 490.71C495.117 491.155 494.887 491.495 494.586 491.73C494.285 491.963 493.92 492.08 493.492 492.08ZM493.492 491.455C493.916 491.455 494.246 491.25 494.481 490.841C494.716 490.432 494.833 489.848 494.833 489.091C494.833 488.587 494.779 488.158 494.671 487.804C494.565 487.45 494.412 487.18 494.211 486.994C494.012 486.809 493.772 486.716 493.492 486.716C493.072 486.716 492.743 486.923 492.506 487.338C492.27 487.751 492.151 488.335 492.151 489.091C492.151 489.595 492.204 490.023 492.31 490.375C492.416 490.727 492.569 490.995 492.768 491.179C492.969 491.363 493.21 491.455 493.492 491.455Z\" fill=\"black\"/>\n<path id=\"LPM&#226;&#128;&#148;LIQUID&#226;&#128;&#148;READ TOP OF FLOAT\" d=\"M509 563.648H506.091V563.295H508.688V561.943H509V563.648ZM509 561.398H506.091V560.415C506.091 560.187 506.132 560 506.214 559.855C506.296 559.709 506.406 559.601 506.545 559.531C506.685 559.461 506.84 559.426 507.011 559.426C507.183 559.426 507.339 559.461 507.479 559.531C507.619 559.6 507.731 559.707 507.814 559.852C507.896 559.997 507.938 560.183 507.938 560.409V561.114H507.625V560.42C507.625 560.264 507.598 560.139 507.544 560.044C507.49 559.949 507.417 559.881 507.325 559.838C507.232 559.795 507.128 559.773 507.011 559.773C506.895 559.773 506.791 559.795 506.699 559.838C506.607 559.881 506.535 559.95 506.483 560.045C506.43 560.141 506.403 560.268 506.403 560.426V561.045H509V561.398ZM506.091 558.859V558.438L508.506 557.45V557.415L506.091 556.427V556.006H509V556.336H506.79V556.364L509 557.273V557.592L506.79 558.501V558.529H509V558.859H506.091ZM507.389 551.652H507.702V555.652H507.389V551.652ZM509 551.3H506.091V550.948H508.688V549.596H509V551.3ZM506.091 548.698H509V549.05H506.091V548.698ZM508.091 546.935V546.548L508.517 546.224L508.631 546.139L509.273 545.656V546.043L508.847 546.361L508.739 546.44L508.091 546.935ZM507.545 545.537C507.852 545.537 508.117 545.592 508.341 545.703C508.564 545.814 508.737 545.966 508.858 546.159C508.979 546.352 509.04 546.573 509.04 546.821C509.04 547.069 508.979 547.29 508.858 547.483C508.737 547.676 508.564 547.828 508.341 547.939C508.117 548.05 507.852 548.105 507.545 548.105C507.239 548.105 506.973 548.05 506.75 547.939C506.527 547.828 506.354 547.676 506.233 547.483C506.112 547.29 506.051 547.069 506.051 546.821C506.051 546.573 506.112 546.352 506.233 546.159C506.354 545.966 506.527 545.814 506.75 545.703C506.973 545.592 507.239 545.537 507.545 545.537ZM507.545 545.878C507.294 545.878 507.081 545.92 506.908 546.004C506.734 546.088 506.603 546.201 506.514 546.344C506.425 546.486 506.381 546.645 506.381 546.821C506.381 546.997 506.425 547.157 506.514 547.3C506.603 547.442 506.734 547.555 506.908 547.639C507.081 547.723 507.294 547.764 507.545 547.764C507.797 547.764 508.01 547.723 508.183 547.639C508.357 547.555 508.488 547.442 508.577 547.3C508.666 547.157 508.71 546.997 508.71 546.821C508.71 546.645 508.666 546.486 508.577 546.344C508.488 546.201 508.357 546.088 508.183 546.004C508.01 545.92 507.797 545.878 507.545 545.878ZM506.091 543.036V542.683H508.017C508.216 542.683 508.393 542.73 508.55 542.824C508.705 542.917 508.828 543.048 508.918 543.217C509.007 543.387 509.051 543.586 509.051 543.814C509.051 544.042 509.007 544.241 508.918 544.411C508.828 544.58 508.705 544.712 508.55 544.805C508.393 544.898 508.216 544.945 508.017 544.945H506.091V544.592H507.989C508.131 544.592 508.257 544.561 508.368 544.499C508.478 544.436 508.564 544.347 508.628 544.232C508.69 544.115 508.722 543.976 508.722 543.814C508.722 543.652 508.69 543.513 508.628 543.396C508.564 543.28 508.478 543.191 508.368 543.129C508.257 543.067 508.131 543.036 507.989 543.036H506.091ZM506.091 541.627H509V541.98H506.091V541.627ZM509 540.023V540.921H506.091V539.984C506.091 539.701 506.149 539.46 506.266 539.259C506.381 539.058 506.547 538.905 506.764 538.798C506.98 538.691 507.239 538.637 507.54 538.637C507.843 538.637 508.104 538.691 508.322 538.799C508.54 538.907 508.708 539.064 508.825 539.271C508.942 539.477 509 539.728 509 540.023ZM508.688 540.569V540.046C508.688 539.806 508.641 539.606 508.548 539.448C508.455 539.29 508.323 539.172 508.152 539.094C507.981 539.017 507.777 538.978 507.54 538.978C507.305 538.978 507.103 539.016 506.933 539.093C506.763 539.17 506.632 539.284 506.541 539.437C506.449 539.589 506.403 539.779 506.403 540.006V540.569H508.688ZM507.389 534.398H507.702V538.398H507.389V534.398ZM509 534.046H506.091V533.063C506.091 532.836 506.13 532.649 506.207 532.504C506.284 532.358 506.39 532.25 506.524 532.18C506.659 532.11 506.812 532.075 506.983 532.075C507.154 532.075 507.306 532.11 507.439 532.18C507.571 532.25 507.676 532.357 507.751 532.502C507.826 532.647 507.864 532.832 507.864 533.058V533.853H507.545V533.069C507.545 532.914 507.523 532.789 507.477 532.694C507.432 532.598 507.367 532.529 507.284 532.487C507.2 532.443 507.099 532.421 506.983 532.421C506.866 532.421 506.765 532.443 506.678 532.487C506.59 532.53 506.523 532.6 506.476 532.695C506.428 532.791 506.403 532.917 506.403 533.075V533.694H509V534.046ZM507.693 532.677L509 531.961V532.37L507.693 533.075V532.677ZM509 531.488H506.091V529.732H506.403V531.135H507.386V529.823H507.699V531.135H508.688V529.709H509V531.488ZM509 528.978V529.347L506.091 528.279V527.915L509 526.847V527.216L506.551 528.086V528.108L509 528.978ZM507.864 528.841V527.353H508.176V528.841H507.864ZM509 525.496V526.394H506.091V525.456C506.091 525.174 506.149 524.933 506.266 524.732C506.381 524.531 506.547 524.377 506.764 524.27C506.98 524.163 507.239 524.11 507.54 524.11C507.843 524.11 508.104 524.164 508.322 524.272C508.54 524.38 508.708 524.537 508.825 524.743C508.942 524.95 509 525.201 509 525.496ZM508.688 526.042V525.519C508.688 525.278 508.641 525.079 508.548 524.921C508.455 524.763 508.323 524.645 508.152 524.567C507.981 524.489 507.777 524.451 507.54 524.451C507.305 524.451 507.103 524.489 506.933 524.566C506.763 524.642 506.632 524.757 506.541 524.909C506.449 525.062 506.403 525.252 506.403 525.479V526.042H508.688ZM506.403 522.553H506.091V520.371H506.403V521.286H509V521.638H506.403V522.553ZM507.545 517.494C507.852 517.494 508.117 517.549 508.341 517.66C508.564 517.771 508.737 517.923 508.858 518.116C508.979 518.309 509.04 518.53 509.04 518.778C509.04 519.026 508.979 519.247 508.858 519.44C508.737 519.633 508.564 519.785 508.341 519.896C508.117 520.007 507.852 520.062 507.545 520.062C507.239 520.062 506.973 520.007 506.75 519.896C506.527 519.785 506.354 519.633 506.233 519.44C506.112 519.247 506.051 519.026 506.051 518.778C506.051 518.53 506.112 518.309 506.233 518.116C506.354 517.923 506.527 517.771 506.75 517.66C506.973 517.549 507.239 517.494 507.545 517.494ZM507.545 517.835C507.294 517.835 507.081 517.877 506.908 517.961C506.734 518.045 506.603 518.158 506.514 518.301C506.425 518.443 506.381 518.602 506.381 518.778C506.381 518.954 506.425 519.114 506.514 519.257C506.603 519.399 506.734 519.512 506.908 519.596C507.081 519.68 507.294 519.721 507.545 519.721C507.797 519.721 508.01 519.68 508.183 519.596C508.357 519.512 508.488 519.399 508.577 519.257C508.666 519.114 508.71 518.954 508.71 518.778C508.71 518.602 508.666 518.443 508.577 518.301C508.488 518.158 508.357 518.045 508.183 517.961C508.01 517.877 507.797 517.835 507.545 517.835ZM509 516.902H506.091V515.919C506.091 515.69 506.132 515.504 506.214 515.359C506.296 515.213 506.406 515.105 506.545 515.035C506.685 514.965 506.84 514.93 507.011 514.93C507.183 514.93 507.339 514.965 507.479 515.035C507.619 515.104 507.731 515.211 507.814 515.356C507.896 515.501 507.938 515.687 507.938 515.913V516.618H507.625V515.924C507.625 515.768 507.598 515.643 507.544 515.548C507.49 515.453 507.417 515.385 507.325 515.342C507.232 515.298 507.128 515.277 507.011 515.277C506.895 515.277 506.791 515.298 506.699 515.342C506.607 515.385 506.535 515.454 506.483 515.549C506.43 515.645 506.403 515.772 506.403 515.93V516.549H509V516.902ZM507.545 510.783C507.852 510.783 508.117 510.838 508.341 510.949C508.564 511.06 508.737 511.212 508.858 511.405C508.979 511.598 509.04 511.819 509.04 512.067C509.04 512.315 508.979 512.536 508.858 512.729C508.737 512.922 508.564 513.074 508.341 513.185C508.117 513.296 507.852 513.351 507.545 513.351C507.239 513.351 506.973 513.296 506.75 513.185C506.527 513.074 506.354 512.922 506.233 512.729C506.112 512.536 506.051 512.315 506.051 512.067C506.051 511.819 506.112 511.598 506.233 511.405C506.354 511.212 506.527 511.06 506.75 510.949C506.973 510.838 507.239 510.783 507.545 510.783ZM507.545 511.124C507.294 511.124 507.081 511.166 506.908 511.25C506.734 511.334 506.603 511.447 506.514 511.59C506.425 511.732 506.381 511.891 506.381 512.067C506.381 512.243 506.425 512.403 506.514 512.546C506.603 512.688 506.734 512.801 506.908 512.885C507.081 512.969 507.294 513.01 507.545 513.01C507.797 513.01 508.01 512.969 508.183 512.885C508.357 512.801 508.488 512.688 508.577 512.546C508.666 512.403 508.71 512.243 508.71 512.067C508.71 511.891 508.666 511.732 508.577 511.59C508.488 511.447 508.357 511.334 508.183 511.25C508.01 511.166 507.797 511.124 507.545 511.124ZM509 510.191H506.091V508.446H506.403V509.838H507.386V508.577H507.699V509.838H509V510.191ZM509 506.718H506.091V504.974H506.403V506.366H507.386V505.104H507.699V506.366H509V506.718ZM509 504.37H506.091V504.018H508.688V502.666H509V504.37ZM507.545 499.779C507.852 499.779 508.117 499.835 508.341 499.945C508.564 500.056 508.737 500.208 508.858 500.401C508.979 500.594 509.04 500.815 509.04 501.063C509.04 501.311 508.979 501.532 508.858 501.725C508.737 501.918 508.564 502.07 508.341 502.181C508.117 502.292 507.852 502.347 507.545 502.347C507.239 502.347 506.973 502.292 506.75 502.181C506.527 502.07 506.354 501.918 506.233 501.725C506.112 501.532 506.051 501.311 506.051 501.063C506.051 500.815 506.112 500.594 506.233 500.401C506.354 500.208 506.527 500.056 506.75 499.945C506.973 499.835 507.239 499.779 507.545 499.779ZM507.545 500.12C507.294 500.12 507.081 500.162 506.908 500.246C506.734 500.33 506.603 500.443 506.514 500.586C506.425 500.728 506.381 500.887 506.381 501.063C506.381 501.239 506.425 501.399 506.514 501.542C506.603 501.684 506.734 501.797 506.908 501.881C507.081 501.965 507.294 502.006 507.545 502.006C507.797 502.006 508.01 501.965 508.183 501.881C508.357 501.797 508.488 501.684 508.577 501.542C508.666 501.399 508.71 501.239 508.71 501.063C508.71 500.887 508.666 500.728 508.577 500.586C508.488 500.443 508.357 500.33 508.183 500.246C508.01 500.162 507.797 500.12 507.545 500.12ZM509 499.204V499.574L506.091 498.505V498.142L509 497.074V497.443L506.551 498.312V498.335L509 499.204ZM507.864 499.068V497.579H508.176V499.068H507.864ZM506.403 497.119H506.091V494.938H506.403V495.852H509V496.205H506.403V497.119Z\" fill=\"black\"/>\n<g id=\"Repeat group 2_2\">\n<g id=\"Repeat group 1\">\n<path id=\"Line 26\" d=\"M500 490.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_2\" d=\"M500 491.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_3\" d=\"M500 492.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_4\" d=\"M500 493.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_5\" d=\"M499 494.125H501.667H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_6\" d=\"M500 495.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_7\" d=\"M500 496.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_8\" d=\"M500 497.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_9\" d=\"M500 498.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_10\" d=\"M499 499.125H501.667H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_11\" d=\"M500 500.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_12\" d=\"M500 501.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_13\" d=\"M500 502.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_14\" d=\"M500 503.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_15\" d=\"M499 504.125H501.667H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_16\" d=\"M500 505.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_17\" d=\"M500 506.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_18\" d=\"M500 507.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_19\" d=\"M500 508.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n</g>\n<g id=\"Repeat group 1_2\">\n<path id=\"Line 26_20\" d=\"M500 510.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_21\" d=\"M500 511.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_22\" d=\"M500 512.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_23\" d=\"M500 513.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_24\" d=\"M499 514.125H501.667H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_25\" d=\"M500 515.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_26\" d=\"M500 516.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_27\" d=\"M500 517.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_28\" d=\"M500 518.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_29\" d=\"M499 519.125H501.667H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_30\" d=\"M500 520.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_31\" d=\"M500 521.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_32\" d=\"M500 522.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_33\" d=\"M500 523.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_34\" d=\"M499 524.125H501.667H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_35\" d=\"M500 525.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_36\" d=\"M500 526.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_37\" d=\"M500 527.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_38\" d=\"M500 528.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n</g>\n<g id=\"Repeat group 1_3\">\n<path id=\"Line 26_39\" d=\"M500 530.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_40\" d=\"M500 531.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_41\" d=\"M500 532.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_42\" d=\"M500 533.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_43\" d=\"M499 534.125H501.667H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_44\" d=\"M500 535.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_45\" d=\"M500 536.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_46\" d=\"M500 537.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_47\" d=\"M500 538.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_48\" d=\"M499 539.125H501.667H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_49\" d=\"M500 540.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_50\" d=\"M500 541.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_51\" d=\"M500 542.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_52\" d=\"M500 543.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_53\" d=\"M499 544.125H501.667H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_54\" d=\"M500 545.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_55\" d=\"M500 546.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_56\" d=\"M500 547.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_57\" d=\"M500 548.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n</g>\n<g id=\"Repeat group 1_4\">\n<path id=\"Line 26_58\" d=\"M500 550.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_59\" d=\"M500 551.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_60\" d=\"M500 552.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_61\" d=\"M500 553.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_62\" d=\"M499 554.125H501.667H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_63\" d=\"M500 555.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_64\" d=\"M500 556.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_65\" d=\"M500 557.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_66\" d=\"M500 558.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_67\" d=\"M499 559.125H501.667H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_68\" d=\"M500 560.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_69\" d=\"M500 561.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_70\" d=\"M500 562.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_71\" d=\"M500 563.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_72\" d=\"M499 564.125H501.667H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_73\" d=\"M500 565.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_74\" d=\"M500 566.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_75\" d=\"M500 567.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n<path id=\"Line 26_76\" d=\"M500 568.125H501.5H503\" stroke=\"black\" stroke-width=\"0.25\"/>\n</g>\n</g>\n</g>\n)}\n\nexport default Rotameter;","/* *************************************************************************************************************** */\n/* ********* This file should contain helper/convenience functions to make the rest of the code simpler. ********* */\n/* ********* Do not put any imports here! These should ideally all be pure and self-contained. ******************* */\n/* *************************************************************************************************************** */\n\n/**\n * Namespace for certain SVG calls\n */\nexport const svgNS = \"http://www.w3.org/2000/svg\";\n\n/**\n * Helper type for 2-component vectors\n */\nexport type vec2 = {\n    x: number,\n    y: number\n};\n\n/**\n * Alias to help initialize a vec2\n * @param x default 0\n * @param y default 0\n * @returns vec2 object\n */\nexport const vec2 = (x: number = 0, y: number = 0): vec2 => {\n    return {x: x, y: y};\n}\n\n/**\n * Gets an element through document.getElementById and safely returns it after checking.\n * @param id Unique identifier\n * @returns Element\n */\nexport function GetElement<T = HTMLElement>(id: string): T {\n    const e = document.getElementById(id);\n    // Check\n    if (e === null) throw new Error(`getElementById: Could not get element ${id}`);\n    // Cast and return\n    return e as unknown as T;\n}\n\n/**\n * Parse and insert SVG into a div\n * @param {string} svg SVG source to be inserted\n * @returns {HTMLDivElement} Div containing svg\n */\nexport function insertSVG(svg: string): HTMLDivElement {\n    const div = document.createElement(\"div\");\n  \n    // Set basic attributes\n    div.id = \"apparatus-wrapper\";\n    div.innerHTML = svg;\n    return div;\n}\n\n/**\n * Constrain a number x to be at least min and at most max.\n * @param x Number to constrain\n * @param min minimum constraining value\n * @param max maximum constraining value\n * @returns Constrained value\n */\nexport function constrain(x: number, min: number, max: number) {\n    if (x < min) x = min;\n    if (x > max) x = max;\n    return x;\n}\n\n/**\n * Find the angle between A->B and down (0,1).\n * @param A \n * @param B \n * @returns \n */\nexport function getAngleFromDown(A: { x: number, y: number }, B: { x: number, y: number }) {\n    var dx = B.x - A.x;\n    var dy = B.y - A.y;\n    var mag = Math.sqrt(dx*dx + dy*dy);\n    return -Math.sign(dx) * Math.acos(dy / mag) * 180 / Math.PI;\n}\n\n/**\n * Check an element for a child defs element. If none are found, append a new defs element.\n * @param parent Node to be searched for defs children. Note if none are found, a new defs element will be inserted to this node.\n * @returns Reference to new defs element.\n */\nconst checkForDefs = (parent: HTMLElement): SVGDefsElement => {\n    // Start with null defs\n    let defs: SVGDefsElement | null = null;\n\n    // Search each child node for a defs element\n    parent.childNodes.forEach((value) => {\n        if (value.nodeName === \"defs\")\n            defs = value as unknown as SVGDefsElement;\n    });\n\n    // If defs were not found, append a new defs element to parent\n    if (defs === null) {\n        defs = document.createElementNS(\"http://www.w3.org/2000/svg\",\"defs\");\n        parent.appendChild(defs);\n    }\n    // Return the defs element\n    return defs;\n}\n\n/**\n * Insert a new clip path to the child of the corresponding element.\n * @param e Element to attach clip path to\n * @param clippathID ID to name clippath from\n * @param bbox bounding box of element to create rect\n * @returns Clippath inserted by function\n */\nexport function insertClipPath(e: HTMLElement | SVGAElement | SVGPathElement, clippathID: string, bbox: DOMRect) {\n    // Get the parent element\n    const parent = e.parentElement!;\n    const defs = checkForDefs(parent);\n    // Create a clip path div\n    const clippath = document.createElementNS(\"http://www.w3.org/2000/svg\",\"clipPath\");\n    clippath.setAttribute(\"id\", clippathID + \"-clip\");\n\n    // Create rect for clip path\n    const rect = document.createElementNS(\"http://www.w3.org/2000/svg\",\"rect\");\n    rect.setAttribute(\"x\",`${bbox.x}`);\n    rect.setAttribute(\"y\",`${bbox.y}`);\n    rect.setAttribute(\"width\",`${bbox.width}`);\n    rect.setAttribute(\"height\",`${0}`);\n    clippath.appendChild(rect);\n\n    // Insert the new clip path\n    parent.appendChild(defs);\n    defs.appendChild(clippath);\n    // Apply the clip path styling\n    var child = e.childNodes[0] as unknown as SVGAElement;\n    if (child === undefined)\n        child = e as unknown as SVGAElement;\n    child.setAttribute(\"clip-path\",`url(#${clippathID + \"-clip\"})`);\n\n    // Return the polygon element\n    return clippath;\n}\n\n/**\n * Check if two SVG Elements are overlapping\n * @param el1 Element 1\n * @param el2 Element 2\n * @returns True if bboxes are overlapping; false if not.\n */\nexport function isOverlapping(el1: SVGGElement, el2: SVGRectElement) {\n    console.log(el1, el2)\n  const r1 = el1.getBoundingClientRect();\n  const r2 = el2.getBoundingClientRect();\n  console.log(r1, r2)\n\n  return !(\n    r1.x + r1.width  < r2.x ||\n    r1.x > r2.x + r2.width ||\n    r1.y + r1.height < r2.y ||\n    r1.y > r2.y + r2.height\n  );\n}\n\n/* ******************************************** */\n/* *************** Drag and Zoom ************** */\n/* ******************************************** */\n\ntype Viewbox = {\n    maxViewBox: number[];\n    curViewBox: number[];\n}\nvar viewState: Viewbox;\n\nfunction getDistance(touches: TouchList) {\n  const dx = touches[0].clientX - touches[1].clientX;\n  const dy = touches[0].clientY - touches[1].clientY;\n  return Math.sqrt(dx*dx + dy*dy);\n}\n\nexport function initSvgZoom() {\n    // Get the svg context\n    const svg = document.querySelector(\"svg\")!;\n    const viewBox = svg.getAttribute(\"viewBox\")!.split(\" \").map(Number);\n    viewState = {\n        maxViewBox: viewBox,\n        curViewBox: viewBox\n    };\n\n    const zoom = (scale: number, pt: DOMPoint) => {\n        // alert(scale)\n        pt = pt.matrixTransform(svg.getScreenCTM()!.inverse());\n\n        // get viewbox transform\n        let [x, y, width, height] = svg\n        .getAttribute(\"viewBox\")!\n        .split(\" \")\n        .map(Number);\n        const amountZoomed =\n        width / (viewState.maxViewBox[2] - viewState.maxViewBox[0]);\n        scale *= Math.max(0.1, amountZoomed);\n\n        // get pt.x as a proportion of width and pt.y as proportion of height\n        let [xPropW, yPropH] = [(pt.x - x) / width, (pt.y - y) / height];\n\n        // calc new width and height, new x2, y2 (using proportions and new width and height)\n        let [width2, height2] = [\n        Math.min(viewState.maxViewBox[2], width + width * scale),\n        Math.min(viewState.maxViewBox[3], height + height * scale),\n        ];\n        let x2 = Math.max(0, pt.x - xPropW * width2);\n        let y2 = Math.max(0, pt.y - yPropH * height2);\n\n        [width2, height2] = [\n        Math.max(10, Math.min(viewState.maxViewBox[2] - x2, width2)),\n        Math.max(10, Math.min(viewState.maxViewBox[3] - y2, height2)),\n        ];\n\n        if (\n        Number.isNaN(x2) ||\n        Number.isNaN(y2) ||\n        Number.isNaN(width2) ||\n        Number.isNaN(height2)\n        ) {\n        return;\n        }\n\n        svg.setAttribute(\"viewBox\", `${x2} ${y2} ${width2} ${height2}`);\n    }\n\n    svg.addEventListener(\"wheel\", (e) => {\n        e.preventDefault();\n        // set the scaling factor (and make sure it's at least 10%)\n        let scale = e.deltaY / 1000;\n        scale = Math.abs(scale) < 0.1 ? (0.1 * e.deltaY) / Math.abs(e.deltaY) : scale;\n        // get point in SVG space\n        let pt = new DOMPoint(e.clientX, e.clientY);\n        // Zoom\n        zoom(scale, pt);\n    });\n\n    let startDist: number | null = null;\n    svg.addEventListener(\"touchstart\", (e) => {\n        if (e.touches.length !== 2) return;\n        e.preventDefault();\n        const dist = getDistance(e.touches);\n        startDist = dist;\n    });\n\n    svg.addEventListener(\"touchmove\", (e) => {\n        if (e.touches.length !== 2) return;\n        if (startDist === null) return;\n        e.preventDefault();\n        // Get the distance between the two points\n        const dist = getDistance(e.touches);\n        const scale = constrain((startDist / dist - 1) * 2, -.1, .1);\n        // alert(`scale = ${scale}`)\n        startDist = dist;\n\n        // Find the average point\n        const pt = new DOMPoint((e.touches.item(0)!.clientX + e.touches.item(1)!.clientX) / 2,\n                                    (e.touches.item(0)!.clientY + e.touches.item(1)!.clientY) / 2);\n\n        zoom(scale, pt)\n    });\n    svg.addEventListener(\"touchend\", e => {\n        if (e.touches.length < 2) {\n            startDist = null;\n        }\n    });\n}\n\nexport function initSvgDrag(exemptIDs?: string[]) {\n    // Get exempt elements provided\n    const exemptElements: HTMLElement[] = [];\n    if (exemptIDs !== undefined && exemptIDs.length > 0) {\n        exemptIDs!.forEach(id => exemptElements.push(GetElement(id)));\n    }\n    \n    // Find exempt elements from class\n    const classExempt = document.querySelectorAll(\".drag-exempt\");\n    classExempt.forEach(el => {\n        exemptElements.push(el as unknown as HTMLElement);\n    });\n\n    // Get the svg context\n    const svg = document.querySelector(\"svg\")!;\n    // Set defaults\n    let isDragging = false;\n    let prevX = 0;\n    let prevY = 0;\n\n    // Begin dragging on pointer down\n    svg.addEventListener(\"pointerdown\", (e) => {\n        // Check exemptions\n        let exempt = false;\n        let allExemptions = [...exemptElements, ...document.querySelectorAll(\".drag-exempt-slippery\")];\n        allExemptions.forEach(el => {\n            if (el.contains(e.target as Node)) {\n                exempt = true;\n                return;\n            }\n        });\n        if (exempt) return;\n        \n        // Start dragging\n        e.preventDefault();\n        isDragging = true;\n        prevX = e.clientX;\n        prevY = e.clientY;\n    });\n\n    // Hold pointer to move the camera around\n    svg.addEventListener(\"pointermove\", (e) => {\n        if (isDragging) {\n        const [x, y, width, height] = svg\n            .getAttribute(\"viewBox\")!\n            .split(\" \")\n            .map(Number);\n        // const dx = ((prevX - e.clientX) * width) / svg.clientWidth;\n        const dx = ((prevX - e.clientX) * width) / svg.clientWidth;\n        const dy = ((prevY - e.clientY) * height) / svg.clientHeight;\n        let viewX = Math.max(0, x + dx);\n        let viewY = Math.max(0, y + dy);\n        let viewWidth = Math.min(viewState.maxViewBox[2], width);\n        let viewHeight = Math.min(viewState.maxViewBox[3], height);\n        if (viewX + viewWidth >= viewState.maxViewBox[2]) {\n            viewX = viewState.maxViewBox[2] - viewWidth;\n        }\n        if (viewY + viewHeight >= viewState.maxViewBox[3]) {\n            viewY = viewState.maxViewBox[3] - viewHeight;\n        }\n        svg.setAttribute(\n            \"viewBox\",\n            `${viewX} ${viewY} ${viewWidth} ${viewHeight}`\n        );\n        prevX = e.clientX;\n        prevY = e.clientY;\n        }\n    });\n\n    document.addEventListener(\"pointerup\", () => {\n        isDragging = false;\n    });\n}\n\n// --- Resize Handling ---\nexport function enableWindowResize() {\n    const e = document.querySelector(\"svg\")!;\n    const asp = e.clientWidth / e.clientHeight;\n    // Attach event handler\n    const resize = () => {\n        let windowWidth = Math.max(Math.min(window.innerWidth * .8, 1800), 400);\n        let windowHeight = window.innerHeight * .95 - 50;\n        // Enforce asp\n        windowWidth = Math.min(windowWidth, windowHeight * asp);\n        windowHeight = windowWidth / asp;\n        // Resize canvas\n        e.setAttribute(\"width\", `${windowWidth}`);\n        e.setAttribute(\"height\", `${windowHeight}`);\n    };\n    window.addEventListener('resize', resize);\n    resize();\n}\n\n/**\n * Get SVG coordinates from a mouse or touch event\n * @param evt Mouse or touch event\n * @returns SVG coordinates as a point\n */\nexport function getSVGCoords(evt: MouseEvent | Touch) {\n    const svg = document.querySelector(\"svg\")!;\n    var pt = svg.createSVGPoint();\n    pt.x = evt.clientX;\n    pt.y = evt.clientY;\n    return pt.matrixTransform(svg.getScreenCTM()!.inverse());\n}\n\n/**\n * Animate function to be called every frame.\n * @param fn Function to call every frame. dt is time since last call in seconds, t is total time in ms. Return true to continue, false to stop.\n * @param then Optional function to call when animation ends.\n */\nexport function animate(fn: (dt: number, t: number) => boolean, then?: () => void) {\n    let prevtime: number | null = null;\n\n    const frame = (time: number) => {\n        if (prevtime === null) prevtime = time;\n        const dt = Math.min((time - prevtime) / 1000, .3); // in ms\n        prevtime = time;\n\n        // Call the function\n        const playing = fn(dt, time);\n\n        // Request next frame\n        if (playing) requestAnimationFrame(frame);\n        else then?.();\n    }\n    requestAnimationFrame(frame);\n}\n","\nexport const FEED_RATE_GAIN = 60; // Gain factor to convert lift to flow rate\n\n/**\n * Calculate saturation temperature (C) from pressure (psi) using Antoine equation\n * @param pressure Pressure in psi\n * @returns Temperature in Celsius\n */\nexport function calculateSteamTemperature(barg: number): number {\n    // If less than 0, fake it cooling to room temp\n    if (barg < 0) return (100.1 - 25.0) * barg + 100.1;\n\n    // Convert barg to bara\n    const P = 1 + barg;\n\n    // Simplified Antoine equation for water/steam\n    const [A, B, C] = [4.6543, 1435.264, -64.848]; // Valid for T < 399.94 C;\n\n    // Calculate temperature in Celsius\n    const tempC = (B / (A - Math.log10(P))) - C;\n    return tempC - 273.15; // Convert K to C\n}\n\n/**\n * Calculate saturated pressure (bar) from temperature (K). Valid for T < 399.94 K.\n * @param T Temperature (K)\n * @returns Saturated Pressure (bar absolute)\n */\nexport function antoines(T: number) {\n    const A = 4.6543;\n    const B = 1435.264;\n    const C = -64.848;\n    return 10 ** (A - B / (T + C));\n}\n\n\n/**\n * Calculate enthalpy of vaporization for water at a given temperature\n * @param T temperature (C)\n * @returns deltaHvap (kJ/kg)\n */\nexport function dHvap(Tc: number) {\n    // Equation for heat of vaporization of saturated water\n    // Source: https://mychemengmusings.wordpress.com/2019/01/08/handy-equations-to-calculate-heat-of-evaporation-and-condensation-of-water-steam/\n    let H_vap = 193.1 - 10950 * Math.log( ( 374 - Tc ) / 647) * ( 374 - Tc )**0.785 / ( 273 + Tc ); // heat of vaporization (kJ/kg)\n    return H_vap;\n}\n","import { type Accessor, type Setter } from \"solid-js\";\nimport { animate } from \"../../ts/helpers\";\nimport type { KettleProps } from \"./Kettle\";\nimport { dHvap } from \"../../ts/calcs\";\n\nconst chamberVolume = 12; // L\nconst chamberCapac_kg = chamberVolume * 0.998; // kg\nconst chamberHeatCapac = 100; // J / K\nconst Cp = 4186.8; // J / kg / K\nconst rho = .998; // kg / L\n\nexport interface ChamberFills { \n    // Fill Accessors\n    chamberFill     : Accessor<number>,\n    pathFill        : Accessor<number>,\n    overflowFill    : Accessor<number>,\n    // Fill Setters\n    setChamberFill  : Setter<number>,\n    setPathFill     : Setter<number>,\n    setOverflowFill : Setter<number>,\n    // Evaporate\n    internalEvaporateRate   : Accessor<number>,\n    setInternalEvaporateRate: Setter<number>,\n};\n\nexport function animateChamberMassBalance(props: KettleProps, fills: ChamberFills) {\n    const OVERFLOW_PIXELS_MAX = 5;\n    const MAX_OVERFLOW_RATE = 1; // L / s\n    // Variables only seen by this\n    let overflowRate = 0;\n\n    // Animate the chamber itself\n    animate((dt: number) => {\n        // Update chamber fill based on feed rate\n        const fill = fills.chamberFill();\n        const flow = props.feedRate() / 60; // L / s\n        // Pixels tall\n        const height = 129 * fill;\n\n        // Calculate new fill level\n        const fillIn = flow / chamberVolume * dt; // normalize to chamber volume (unitless)\n        overflowRate = (height > 124) ? (height - 124) * MAX_OVERFLOW_RATE / OVERFLOW_PIXELS_MAX : 0;\n        const fillOut = overflowRate * dt / chamberVolume; // unitless\n        const evapOut = fills.internalEvaporateRate() * dt / chamberCapac_kg; // unitless\n\n        let newFill = fill + fillIn - fillOut - evapOut;\n        newFill = Math.min(1, newFill); // Clamp under 1\n\n        // Update and continue animation if not full\n        fills.setChamberFill(newFill);\n        // Always run this animation\n        return true;\n    });\n\n    // Animate the path until it is filled...\n    let filling: boolean = false;\n    animate((dt: number) => {\n        // Determine whether to start the animation\n        const start = (fills.chamberFill() * 129 > 124);\n        if (start) filling = true;\n\n        // If not started, keep waiting\n        if (!filling) return true;\n\n        // Update chamber fill based on feed rate\n        const fill = fills.pathFill();\n\n        // Calculate new fill level\n        let newFill = filling ? fill + dt : 0; // Only one second to fill\n        newFill = Math.min(1, newFill); // Clamp under 1\n\n        // Update and continue animation until full\n        fills.setPathFill(newFill);\n        return (newFill !== 1);\n    }, \n    // ...Then animate the overflow\n    () => animate((dt: number) => {\n        // Update chamber fill based on feed rate\n        const fill = fills.overflowFill();\n        const flowIn = overflowRate; // L / s\n        const flowOut = fill; // L / s\n\n        // Calculate new fill level\n        let newFill = fill + (flowIn - flowOut) * dt;\n        newFill = Math.min(1, newFill); // Clamp under 1\n        // console.log(`Overflow fill: ${newFill.toFixed(3)}\\nflowIn: ${overflowRate}`);\n\n        // Update and continue animation if not full\n        fills.setOverflowFill(newFill);\n        // Update the outlet\n        props.onOutletChange?.(flowOut * 1000); // mL / s\n        return true;\n    }));\n}\n\n// /**\n//  * Energy balance to calculate the steam flowrate\n//  * @param chamberFill Fill ratio of the chamber (fraction)\n//  * @param steamTemp Temperature of steam (C)\n//  * @param chamberTemp Temperature of the chamber (K)\n//  * @returns Steam Flowrate (g/s)\n//  */\n// export function calculateSteamOut(chamberFill: number, steamTemp: number, chamberTemp: number) {\n//     const UA = Math.max(chamberFill * UA0, MIN_UA);\n\n//     // Heat rate\n//     const Qs = UA * (steamTemp - chamberTemp); // W\n//     const mdot_s = Qs / dHvap(steamTemp); // kg / s\n//     return 1000 * mdot_s; // g / s\n// }\n\nconst controller = {\n    I: 0,\n    prev: 0,\n    kp: 1,\n    ki: 8,\n    kd: .2\n}\n\nexport function animateChamberEnergyBalance(props: KettleProps, fills: ChamberFills) {\n\n    // Animate the energy balance\n    animate((dt: number) => {\n        const fillFrac = fills.chamberFill();\n        const fillMass = fillFrac * chamberCapac_kg; // mass in shell\n        const Tc = props.outTemp();\n\n        // Calc Heat rate\n        const UA = 3628;//Math.max(fillFrac * UA0, MIN_UA); // W / K\n        const heat_rate = UA * (props.steamTemp() - Tc); // W\n\n        // Feed rate\n        const mdot_in = rho * props.feedRate() / 60; // LPM to kg/s\n        const T_in = 25; // C\n        \n        // Balance\n        const nrg_in = (fillMass > 0) ? mdot_in * Cp * (T_in - Tc) : 0; // W\n        const totCapac = fillMass * Cp + chamberHeatCapac; // J / K\n        \n        let cons = 0, evap = 0;\n        if (fillFrac > 0.05) {\n            // Solve for evaporation\n            const Tboil = 100; // K\n            const nrg_left = (Tc - Tboil) * totCapac; // W\n\n            // Controller to drive temp down while boiling\n            const proportional = nrg_left;\n            if (proportional > 0) {\n                controller.I += proportional * dt;\n            } else {\n                controller.I *= .98;\n            }\n            \n            let deriv = (dt !== 0) ? (proportional - controller.prev) / dt : 0;\n            // deriv = (Tc > Tboil) ? deriv : 0;\n            controller.prev = proportional;\n\n            // Calculate controller output\n            cons = controller.kp * proportional + controller.ki * controller.I + controller.kd * deriv; // W\n            // if (cons > 0) console.log(controller.kp * proportional, controller.ki * controller.I, controller.kd * deriv)\n            cons = cons > 0 ? cons : 0; // W\n            console.log(`cons: ${cons}`)\n\n            // Use consumption to solve mass balance\n            evap = cons / dHvap(100) / 1000; // kg / s\n            if (evap > 0) console.log(`setting evap to ${evap}`)\n        }\n\n        // Evolve\n        const acc = nrg_in + heat_rate - cons; // W\n        const dTdt = acc / totCapac; // K / s\n        const cond = heat_rate / dHvap(props.steamTemp()); // W kg / kJ == g / s\n        props.onOutTempChange(Tc + dTdt * dt);\n        props.onEvaporateChange?.(evap);\n        props.onSteamOutChange?.(cond);\n\n        return true;\n    });\n\n}","import { createEffect, createSignal, For, type Accessor, type Component, type Setter } from \"solid-js\";\nimport \"./Boils.css\";\nimport { animate } from \"../../ts/helpers\";\n\n/**\n * Generate a value around a given mean with a given standard deviation\n * @param mean \n * @param stdev \n * @returns random value in distribution\n */\nfunction randNormal(mean: number, stdev: number): number {\n    let u = 0, v = 0;\n    while (u === 0) u = Math.random(); // avoid 0 to prevent log(0)\n    while (v === 0) v = Math.random();\n    // Box-Muller transform\n    const z = Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);\n    return mean + z * stdev;\n}\n\ntype Bubble = {\n    cx: number;\n    cy: number;\n    r: number;\n    aniScale: number;\n    interpolant: { get: Accessor<number>, set: Setter<number> };\n    timeScale: number;\n    render: { get: Accessor<boolean>, set: Setter<boolean> };\n};\n\nexport const Boils: Component<{ showing: () => boolean, x: number, y: number, w: number, h: () => number, nbubbles: number }> = ({ showing, x, y, w, h, nbubbles }) => {\n    // Initialize the bubbles\n    const bubbles: Array<Bubble> = [];\n    for (let i=0; i<nbubbles; i++) {\n        const [get, set] = createSignal(Math.random())\n        const [gr, sr] = createSignal(false);\n        const bubble: Bubble = {\n            cx: Math.random() * w + x,\n            cy: Math.random() * 30 + y,\n            r: randNormal(4, 2),\n            aniScale: randNormal(1.4, .05),\n            interpolant: { get, set },\n            timeScale: randNormal(.5, .1),\n            render: { get:gr, set:sr }\n        };\n        bubbles.push(bubble);\n    }\n\n    // Animate while showing\n    let playing = false;\n    createEffect(() => {\n        if (showing()) {\n            // Dont double-enqueue\n            if (playing) return;\n            playing = true;\n            // Animation\n            animate((dt: number) => {\n                let lingering = false;\n                for (const b of bubbles) {\n                    // Interpolate the \n                    let next = b.interpolant.get() + b.timeScale * dt;\n                    // Only change whether it's rendering when b \n                    if (next > 1) {\n                        next -= 1;\n                        b.render.set(showing());\n                    }\n                    b.interpolant.set(next);\n                    lingering = lingering || b.render.get();\n                }\n                // Exit when the animation is done playing and all bubbles are not rendered\n                return playing || lingering;\n            }, () => playing = false);\n        }\n    });\n\n  return (\n    <g>\n      <For each={bubbles}>\n          {\n          b => <circle \n                  fill=\"none\"\n                  stroke=\"white\"\n                  stroke-width=\"2px\"\n                  cx={b.cx + .05 * w * Math.cos(4 * b.interpolant.get() + 100 * b.cx)}\n                  cy={b.cy - b.interpolant.get() * h()}\n                  r={b.r}\n                  transform={`translate(${b.cx}, ${b.cy}) scale(${1 + (b.aniScale - 1) * b.interpolant.get()}) translate(${-b.cx}, ${-b.cy})`}\n                  opacity={b.render.get() ? 1 - (2 * b.interpolant.get() - 1) ** 6 : 0}\n              />\n          }\n      </For>\n    </g>\n  );\n};\n","import { createEffect, createSignal, For, type Accessor, type Component, type Setter } from \"solid-js\";\nimport \"./Steam.css\";\nimport { animate } from \"../../ts/helpers\";\n\n/**\n * Generate a value around a given mean with a given standard deviation\n * @param mean \n * @param stdev \n * @returns random value in distribution\n */\nfunction randNormal(mean: number, stdev: number): number {\n    let u = 0, v = 0;\n    while (u === 0) u = Math.random(); // avoid 0 to prevent log(0)\n    while (v === 0) v = Math.random();\n    // Box-Muller transform\n    const z = Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);\n    return mean + z * stdev;\n}\n\ntype Bubble = {\n    cx: number;\n    cy: number;\n    r: number;\n    aniScale: number;\n    interpolant: { get: Accessor<number>, set: Setter<number> };\n    timeScale: number;\n    render: { get: Accessor<boolean>, set: Setter<boolean> };\n};\n\nexport const Steam: Component<{ showing: () => boolean, x: number, y: number, w: number, h: number }> = ({ showing, x, y, w, h }) => {\n    // Initialize the bubbles\n    const bubbles: Array<Bubble> = [];\n    for (let i=0; i<8; i++) {\n        const [get, set] = createSignal(Math.random())\n        const [gr, sr] = createSignal(false);\n        const bubble: Bubble = {\n            cx: randNormal(x, w),\n            cy: randNormal(y, h),\n            r: randNormal(12, 5),\n            aniScale: randNormal(.4, .05),\n            interpolant: { get, set },\n            timeScale: randNormal(.5, .1),\n            render: { get:gr, set:sr }\n        };\n        bubbles.push(bubble);\n    }\n\n    // Animate while showing\n    let playing = false;\n    createEffect(() => {\n        if (showing()) {\n            // Dont double-enqueue\n            if (playing) return;\n            playing = true;\n            // Animation\n            animate((dt: number) => {\n                let lingering = false;\n                for (const b of bubbles) {\n                    // Interpolate the \n                    let next = b.interpolant.get() + b.timeScale * dt;\n                    // Only change whether it's rendering when b \n                    if (next > 1) {\n                        next -= 1;\n                        b.render.set(showing());\n                    }\n                    b.interpolant.set(next);\n                    lingering = lingering || b.render.get();\n                }\n                // Exit when the animation is done playing and all bubbles are not rendered\n                return playing || lingering;\n            }, () => playing = false);\n        }\n    });\n\n  return (\n    <>\n      <defs>\n        <radialGradient id=\"steamGrad\" cx=\"40%\" cy=\"35%\" r=\"70%\">\n          <stop offset=\"0%\" stop-color=\"lightgrey\" stop-opacity=\"0.95\" />\n          <stop offset=\"45%\" stop-color=\"lightgrey\" stop-opacity=\"0.65\" />\n          <stop offset=\"100%\" stop-color=\"lightgrey\" stop-opacity=\"0.05\" />\n        </radialGradient>\n        <filter id=\"softBlur\" x=\"-30%\" y=\"-30%\" width=\"160%\" height=\"160%\">\n          <feGaussianBlur stdDeviation=\"3\" />\n        </filter>\n      </defs>\n\n      <g>\n        <For each={bubbles}>\n            {\n            b => <circle \n                    class=\"steam\"\n                    cx={b.cx}\n                    cy={b.cy - b.interpolant.get() * 100}\n                    r={b.r}\n                    transform={`scale(${1 + (b.aniScale - 1) * b.interpolant.get()})`}\n                    opacity={b.render.get() ? 1 - (2 * b.interpolant.get() - 1) ** 6 : 0}\n                />\n            }\n        </For>\n      </g>\n    </>\n  );\n};\n","import { createMemo, createSignal, onMount, type Component } from \"solid-js\";\nimport \"./Kettle.css\";\nimport { animateChamberEnergyBalance, animateChamberMassBalance, type ChamberFills } from \"./KettleLogic\";\nimport { Boils } from \"../Boils/Boils\";\nimport { Steam } from \"../Steam/Steam\";\n\n// Debug in dev mode only\ndeclare const __DEV__: boolean;\n\nexport interface KettleProps {\n  // Inputs\n  feedRate: () => number; // in gal/min\n  steamTemp: () => number; // in C\n  outTemp: () => number; // in C\n\n  // Outputs\n  onOutletChange?: (outletTemp: number) => void; // Callback for outlet flowrate change\n  onEvaporateChange?: (evapCh: number) => void; // Callback for evaporation change, in gal/m\n  onSteamOutChange?: (concCh: number) => void; // Callback for steam flowrate change\n  onOutTempChange: (t: number) => void;\n};\n\nexport const Kettle: Component<KettleProps> = (props) => {\n  // Start empty\n  const [chamberFill, setChamberFill] = createSignal(0); // 0 to 1\n  const [pathFill, setPathFill] = createSignal(0); // 0 to 1\n  const [overflowFill, setOverflowFill] = createSignal(0); // 0 to 1\n  const [internalEvaporateRate, setInternalEvaporateRate] = createSignal(0);\n\n  onMount(() => {\n    // Initially hide the exterior\n    setTimeout(() => {\n      document.querySelectorAll('.kettle-exterior').forEach(el => el.classList.add('kettle-exterior-hidden'));\n    }, 1000); // Slight delay to ensure CSS transition\n  });\n\n  // // Memo to update the steam outlet\n  // const steamOut = createMemo(() => calculateSteamOut(chamberFill(), props.steamTemp(), props.outTemp()));\n  // if (props.onSteamOutChange) createEffect(() => props.onSteamOutChange!(Math.max(steamOut(), 0)));\n\n  // Animations for the three fills\n  const fills: ChamberFills = { chamberFill, pathFill, overflowFill, setChamberFill, setPathFill, setOverflowFill, internalEvaporateRate, setInternalEvaporateRate };\n  animateChamberMassBalance(props, fills);\n  animateChamberEnergyBalance(props, fills);\n  const bubbleHeight = createMemo(() => 60 * chamberFill());;\n\n\n  // Render\n  return (\n  <>\n    <g id=\"kettle\">\n      <g id=\"interior\">\n        <path\n          id=\"Rectangle 72\"\n          d=\"M511.5 392.5V402C511.5 403.381 510.381 404.5 509 404.5H487C485.619 404.5 484.5 403.381 484.5 402V392.5H511.5Z\"\n          fill=\"url(#paint44_linear_6_626)\"\n          stroke=\"black\"\n        />\n        <path\n          id=\"Rectangle 74_2\"\n          d=\"M1025.5 214.5V209C1025.5 208.172 1024.83 207.5 1024 207.5H1000C999.172 207.5 998.5 208.172 998.5 209V214.5H1025.5Z\"\n          fill=\"url(#paint45_linear_6_626)\"\n          stroke=\"black\"\n        />\n        <path\n          id=\"Rectangle 75_2\"\n          d=\"M854.5 214.5V209C854.5 208.172 853.828 207.5 853 207.5H829C828.172 207.5 827.5 208.172 827.5 209V214.5H854.5Z\"\n          fill=\"url(#paint46_linear_6_626)\"\n          stroke=\"black\"\n        />\n        <path\n          id=\"Rectangle 73_2\"\n          d=\"M978.5 397.5V402C978.5 403.381 977.381 404.5 976 404.5H954C952.619 404.5 951.5 403.381 951.5 402V397.5H978.5Z\"\n          fill=\"url(#paint47_linear_6_626)\"\n          stroke=\"black\"\n        />\n        <path\n          id=\"walls\"\n          d=\"M1018 214.011H1023.48C1023.48 214.011 1085 211.05 1085 306.011C1085 400.972 1023.48 397.936 1023.48 397.936H1018V398H529.214C519.75 398 510.298 397.329 500.93 395.99L494.07 395.011C484.702 393.672 475.25 393 465.786 393H435V273C440.816 273 446.449 270.965 450.922 267.248L498.08 228.061C508.758 219.188 522.139 214.238 536 214.011V214H1018V214.011Z\"\n          fill=\"url(#paint48_linear_6_626)\"\n        />\n        <g id=\"trap\">\n          <rect\n            id=\"Rectangle 63\"\n            x=\"435.5\"\n            y=\"283.5\"\n            width=\"430\"\n            height=\"19\"\n            fill=\"url(#paint49_linear_6_626)\"\n            stroke=\"black\"\n          />\n          <rect\n            id=\"Rectangle 65\"\n            x=\"435.5\"\n            y=\"307.5\"\n            width=\"430\"\n            height=\"19\"\n            fill=\"url(#paint50_linear_6_626)\"\n            stroke=\"black\"\n          />\n          <rect\n            id=\"Rectangle 66\"\n            x=\"435.5\"\n            y=\"339.5\"\n            width=\"430\"\n            height=\"19\"\n            fill=\"url(#paint51_linear_6_626)\"\n            stroke=\"black\"\n          />\n          <rect\n            id=\"Rectangle 64\"\n            x=\"435.5\"\n            y=\"363.5\"\n            width=\"430\"\n            height=\"19\"\n            fill=\"url(#paint52_linear_6_626)\"\n            stroke=\"black\"\n          />\n          <g id=\"Subtract\">\n            <mask id=\"path-161-inside-3_6_626\" fill=\"white\">\n              <path\n                d=\"M865.538 277C889.132 282.167 907 306.614 907 335.994C907 365.373 889.132 389.819 865.538 394.986V277Z\"\n              />\n            </mask>\n            <path\n              d=\"M865.538 277C889.132 282.167 907 306.614 907 335.994C907 365.373 889.132 389.819 865.538 394.986V277Z\"\n              fill=\"#686155\"\n            />\n            <path\n              d=\"M865.538 277L865.752 276.024L864.538 275.758V277H865.538ZM865.538 394.986H864.538V396.229L865.752 395.963L865.538 394.986ZM865.538 277L865.324 277.977C888.363 283.022 906 306.978 906 335.994H907H908C908 306.25 889.901 281.311 865.752 276.024L865.538 277ZM907 335.994H906C906 365.009 888.363 388.964 865.324 394.009L865.538 394.986L865.752 395.963C889.9 390.675 908 365.738 908 335.994H907ZM865.538 394.986H866.538V277H865.538H864.538V394.986H865.538Z\"\n              fill=\"black\"\n              mask=\"url(#path-161-inside-3_6_626)\"\n            />\n          </g>\n          <rect\n            id=\"Rectangle 57\"\n            x=\"755.5\"\n            y=\"279.5\"\n            width=\"4\"\n            height=\"9\"\n            rx=\"1.5\"\n            fill=\"url(#paint53_linear_6_626)\"\n            stroke=\"black\"\n          />\n          <rect\n            id=\"Rectangle 67\"\n            x=\"436.5\"\n            y=\"281.5\"\n            width=\"318\"\n            height=\"5\"\n            fill=\"url(#paint54_linear_6_626)\"\n            stroke=\"black\"\n          />\n          <rect\n            id=\"Rectangle 68\"\n            x=\"755.5\"\n            y=\"377.5\"\n            width=\"4\"\n            height=\"9\"\n            rx=\"1.5\"\n            fill=\"url(#paint55_linear_6_626)\"\n            stroke=\"black\"\n          />\n          <rect\n            id=\"Rectangle 69\"\n            x=\"436.5\"\n            y=\"379.5\"\n            width=\"318\"\n            height=\"5\"\n            fill=\"url(#paint56_linear_6_626)\"\n            stroke=\"black\"\n          />\n          <g id=\"Repeat group 1_2\">\n            <rect\n              id=\"Rectangle 62\"\n              x=\"533.5\"\n              y=\"277.5\"\n              width=\"3\"\n              height=\"117\"\n              rx=\"0.5\"\n              fill=\"#686155\"\n              stroke=\"black\"\n            />\n            <rect\n              id=\"Rectangle 62_2\"\n              x=\"643.5\"\n              y=\"277.5\"\n              width=\"3\"\n              height=\"117\"\n              rx=\"0.5\"\n              fill=\"#686155\"\n              stroke=\"black\"\n            />\n            <rect\n              id=\"Rectangle 62_3\"\n              x=\"753.5\"\n              y=\"277.5\"\n              width=\"3\"\n              height=\"117\"\n              rx=\"0.5\"\n              fill=\"#686155\"\n              stroke=\"black\"\n            />\n            <rect\n              id=\"Rectangle 62_4\"\n              x=\"863.5\"\n              y=\"277.5\"\n              width=\"3\"\n              height=\"117\"\n              rx=\"0.5\"\n              fill=\"#686155\"\n              stroke=\"black\"\n            />\n          </g>\n        </g>\n        <path \n          id=\"chamberFill\"\n          transform=\"translate(438 269)\"\n          d=\"M476 129H91.2139C81.7502 129 72.2982 128.334 62.9297 127.006L56.0703 126.034C46.7018 124.706 37.2498 124.038 27.7861 124.038H0V4.7793C4.33286 4.25776 8.46342 2.61488 11.9688 0H476V129Z\" \n          fill=\"#3B8CCF\" \n          fill-opacity=\"0.6\"\n          clip-path=\"url(#chamberClip)\"\n        />\n\n        <path\n          id=\"overflowFill\"\n          d=\"M1056.33 386C1040.3 398.756 1023.51 397.937 1023.48 397.936H1018V398H914V386H1056.33Z\"\n          fill=\"#78AEDD\"\n          clip-path=\"url(#overflowClip)\"\n        />\n        <path\n          id=\"overflowPath\"\n          d=\"M916 397V275C916 274.5 915.5 274 915 274H914\"\n          stroke=\"#78AEDD\"\n          stroke-width={ Math.max(0, 2 * (129 * chamberFill() - 124)) }\n          stroke-dasharray=\"126.7020263671875\"\n          stroke-dashoffset={126.7020263671875 * (1 + pathFill())}\n        />\n        <rect\n          id=\"weir\"\n          x=\"912.5\"\n          y=\"274.5\"\n          width=\"3\"\n          height=\"123\"\n          rx=\"0.5\"\n          fill=\"#878E95\"\n          stroke=\"black\"\n        />\n        <path\n          id=\"outline\"\n          d=\"M1017.5 214.5V214.511H1023.5L1023.51 214.51H1023.52C1023.52 214.509 1023.53 214.509 1023.55 214.509C1023.57 214.508 1023.62 214.506 1023.67 214.505C1023.78 214.502 1023.95 214.5 1024.17 214.501C1024.61 214.502 1025.27 214.517 1026.1 214.568C1027.76 214.672 1030.14 214.924 1032.99 215.521C1038.71 216.717 1046.33 219.291 1053.95 224.806C1069.16 235.818 1084.5 258.646 1084.5 306.011L1084.49 308.213C1084.02 354.085 1068.93 376.356 1053.95 387.178C1046.33 392.683 1038.71 395.248 1032.99 396.437C1030.14 397.03 1027.76 397.281 1026.1 397.382C1025.27 397.432 1024.61 397.445 1024.17 397.446C1023.95 397.447 1023.78 397.444 1023.67 397.441C1023.62 397.44 1023.57 397.439 1023.55 397.438C1023.53 397.437 1023.52 397.437 1023.52 397.437H1023.51L1023.5 397.436H1017.5V397.5H529.214C519.774 397.5 510.345 396.83 501 395.495L494.141 394.516C484.749 393.174 475.273 392.5 465.786 392.5H435.5V273.494C441.255 273.381 446.807 271.318 451.241 267.633L498.399 228.445C508.989 219.645 522.26 214.736 536.008 214.511L536.5 214.503V214.5H1017.5Z\"\n          stroke=\"black\"\n        />\n      </g>\n      <Boils showing={() => chamberFill() > .3 && props.outTemp() > 100}x={475} y={360} w={400} h={bubbleHeight} nbubbles={20} />\n      <g id=\"exterior\" class=\"kettle-exterior\">\n        <path\n          id=\"Rectangle 58\"\n          d=\"M536.5 397.5H529.214C519.774 397.5 510.345 396.831 501 395.496L494.142 394.515C484.75 393.173 475.274 392.5 465.786 392.5H435.5V273.495C441.255 273.381 446.807 271.318 451.241 267.633L498.399 228.446C509.116 219.541 522.577 214.621 536.5 214.505V397.5Z\"\n          fill=\"url(#paint57_linear_6_626)\"\n          stroke=\"black\"\n        />\n        <path\n          id=\"Rectangle 59\"\n          d=\"M1024.17 214.5C1024.61 214.502 1025.27 214.516 1026.1 214.568C1027.76 214.671 1030.14 214.923 1032.99 215.521C1038.71 216.716 1046.33 219.29 1053.95 224.805C1069.16 235.817 1084.5 258.646 1084.5 306.01C1084.5 353.375 1069.17 376.185 1053.95 387.178C1046.33 392.684 1038.71 395.248 1032.99 396.436C1030.14 397.03 1027.76 397.28 1026.1 397.381C1025.27 397.432 1024.62 397.445 1024.17 397.446C1023.95 397.446 1023.78 397.444 1023.67 397.441C1023.62 397.44 1023.57 397.438 1023.55 397.437C1023.53 397.437 1023.52 397.436 1023.52 397.436H1023.51L1023.5 397.435H1017V214.51H1023.51C1023.51 214.51 1023.51 214.509 1023.52 214.509C1023.52 214.509 1023.53 214.509 1023.55 214.508C1023.57 214.507 1023.62 214.507 1023.67 214.505C1023.78 214.503 1023.95 214.5 1024.17 214.5Z\"\n          fill=\"url(#paint58_linear_6_626)\"\n          stroke=\"black\"\n        />\n        <g id=\"Rectangle 60\">\n          <mask id=\"path-178-inside-4_6_626\" fill=\"white\">\n            <path d=\"M536 214H1018V398H536V214Z\" />\n          </mask>\n          <path\n            d=\"M536 214H1018V398H536V214Z\"\n            fill=\"url(#paint59_linear_6_626)\"\n          />\n          <path\n            d=\"M536 214V215H1018V214V213H536V214ZM1018 398V397H536V398V399H1018V398Z\"\n            fill=\"black\"\n            mask=\"url(#path-178-inside-4_6_626)\"\n          />\n        </g>\n        <g id=\"Subtract_2\">\n          <mask id=\"path-180-inside-5_6_626\" fill=\"white\">\n            <path\n              d=\"M777 246C810.137 246 837 272.863 837 306C837 339.138 810.137 366 777 366C743.863 366 717 339.138 717 306C717 272.863 743.863 246 777 246ZM777 266C754.909 266 737 283.909 737 306C737 328.092 754.909 346 777 346C799.091 346 817 328.092 817 306C817 283.909 799.091 266 777 266Z\"\n            />\n          </mask>\n          <path\n            d=\"M777 246C810.137 246 837 272.863 837 306C837 339.138 810.137 366 777 366C743.863 366 717 339.138 717 306C717 272.863 743.863 246 777 246ZM777 266C754.909 266 737 283.909 737 306C737 328.092 754.909 346 777 346C799.091 346 817 328.092 817 306C817 283.909 799.091 266 777 266Z\"\n            fill=\"#83878B\"\n          />\n          <path\n            d=\"M777 246V247C809.585 247 836 273.416 836 306H837H838C838 272.311 810.689 245 777 245V246ZM837 306H836C836 338.585 809.585 365 777 365V366V367C810.689 367 838 339.69 838 306H837ZM777 366V365C744.415 365 718 338.585 718 306H717H716C716 339.69 743.311 367 777 367V366ZM717 306H718C718 273.416 744.415 247 777 247V246V245C743.311 245 716 272.311 716 306H717ZM777 266V265C754.356 265 736 283.357 736 306H737H738C738 284.461 755.461 267 777 267V266ZM737 306H736C736 328.644 754.356 347 777 347V346V345C755.461 345 738 327.54 738 306H737ZM777 346V347C799.644 347 818 328.644 818 306H817H816C816 327.54 798.539 345 777 345V346ZM817 306H818C818 283.357 799.644 265 777 265V266V267C798.539 267 816 284.461 816 306H817Z\"\n            fill=\"black\"\n            mask=\"url(#path-180-inside-5_6_626)\"\n          />\n        </g>\n        <g id=\"Repeat group 1_3\">\n          <g id=\"Ellipse 2\">\n            <circle\n              cx=\"757.958\"\n              cy=\"260.17\"\n              r=\"3.5\"\n              transform=\"rotate(-22.5 757.958 260.17)\"\n              fill=\"#C3C5C8\"\n            />\n            <circle\n              cx=\"757.958\"\n              cy=\"260.17\"\n              r=\"3.5\"\n              transform=\"rotate(-22.5 757.958 260.17)\"\n              stroke=\"black\"\n            />\n            <circle\n              cx=\"757.958\"\n              cy=\"260.17\"\n              r=\"3.5\"\n              transform=\"rotate(-22.5 757.958 260.17)\"\n              stroke=\"black\"\n              stroke-opacity=\"0.2\"\n            />\n          </g>\n          <g id=\"Ellipse 2_2\">\n            <circle\n              cx=\"795.844\"\n              cy=\"260.169\"\n              r=\"3.5\"\n              transform=\"rotate(22.5 795.844 260.169)\"\n              fill=\"#C3C5C8\"\n            />\n            <circle\n              cx=\"795.844\"\n              cy=\"260.169\"\n              r=\"3.5\"\n              transform=\"rotate(22.5 795.844 260.169)\"\n              stroke=\"black\"\n            />\n            <circle\n              cx=\"795.844\"\n              cy=\"260.169\"\n              r=\"3.5\"\n              transform=\"rotate(22.5 795.844 260.169)\"\n              stroke=\"black\"\n              stroke-opacity=\"0.2\"\n            />\n          </g>\n          <g id=\"Ellipse 2_3\">\n            <circle\n              cx=\"822.633\"\n              cy=\"286.959\"\n              r=\"3.5\"\n              transform=\"rotate(67.5 822.633 286.959)\"\n              fill=\"#C3C5C8\"\n            />\n            <circle\n              cx=\"822.633\"\n              cy=\"286.959\"\n              r=\"3.5\"\n              transform=\"rotate(67.5 822.633 286.959)\"\n              stroke=\"black\"\n            />\n            <circle\n              cx=\"822.633\"\n              cy=\"286.959\"\n              r=\"3.5\"\n              transform=\"rotate(67.5 822.633 286.959)\"\n              stroke=\"black\"\n              stroke-opacity=\"0.2\"\n            />\n          </g>\n          <g id=\"Ellipse 2_4\">\n            <circle\n              cx=\"822.633\"\n              cy=\"324.844\"\n              r=\"3.5\"\n              transform=\"rotate(112.5 822.633 324.844)\"\n              fill=\"#C3C5C8\"\n            />\n            <circle\n              cx=\"822.633\"\n              cy=\"324.844\"\n              r=\"3.5\"\n              transform=\"rotate(112.5 822.633 324.844)\"\n              stroke=\"black\"\n            />\n            <circle\n              cx=\"822.633\"\n              cy=\"324.844\"\n              r=\"3.5\"\n              transform=\"rotate(112.5 822.633 324.844)\"\n              stroke=\"black\"\n              stroke-opacity=\"0.2\"\n            />\n          </g>\n          <g id=\"Ellipse 2_5\">\n            <circle\n              cx=\"795.844\"\n              cy=\"351.634\"\n              r=\"3.5\"\n              transform=\"rotate(157.5 795.844 351.634)\"\n              fill=\"#C3C5C8\"\n            />\n            <circle\n              cx=\"795.844\"\n              cy=\"351.634\"\n              r=\"3.5\"\n              transform=\"rotate(157.5 795.844 351.634)\"\n              stroke=\"black\"\n            />\n            <circle\n              cx=\"795.844\"\n              cy=\"351.634\"\n              r=\"3.5\"\n              transform=\"rotate(157.5 795.844 351.634)\"\n              stroke=\"black\"\n              stroke-opacity=\"0.2\"\n            />\n          </g>\n          <g id=\"Ellipse 2_6\">\n            <circle\n              cx=\"757.958\"\n              cy=\"351.634\"\n              r=\"3.5\"\n              transform=\"rotate(-157.5 757.958 351.634)\"\n              fill=\"#C3C5C8\"\n            />\n            <circle\n              cx=\"757.958\"\n              cy=\"351.634\"\n              r=\"3.5\"\n              transform=\"rotate(-157.5 757.958 351.634)\"\n              stroke=\"black\"\n            />\n            <circle\n              cx=\"757.958\"\n              cy=\"351.634\"\n              r=\"3.5\"\n              transform=\"rotate(-157.5 757.958 351.634)\"\n              stroke=\"black\"\n              stroke-opacity=\"0.2\"\n            />\n          </g>\n          <g id=\"Ellipse 2_7\">\n            <circle\n              cx=\"731.169\"\n              cy=\"324.844\"\n              r=\"3.5\"\n              transform=\"rotate(-112.5 731.169 324.844)\"\n              fill=\"#C3C5C8\"\n            />\n            <circle\n              cx=\"731.169\"\n              cy=\"324.844\"\n              r=\"3.5\"\n              transform=\"rotate(-112.5 731.169 324.844)\"\n              stroke=\"black\"\n            />\n            <circle\n              cx=\"731.169\"\n              cy=\"324.844\"\n              r=\"3.5\"\n              transform=\"rotate(-112.5 731.169 324.844)\"\n              stroke=\"black\"\n              stroke-opacity=\"0.2\"\n            />\n          </g>\n          <g id=\"Ellipse 2_8\">\n            <circle\n              cx=\"731.169\"\n              cy=\"286.959\"\n              r=\"3.5\"\n              transform=\"rotate(-67.5 731.169 286.959)\"\n              fill=\"#C3C5C8\"\n            />\n            <circle\n              cx=\"731.169\"\n              cy=\"286.959\"\n              r=\"3.5\"\n              transform=\"rotate(-67.5 731.169 286.959)\"\n              stroke=\"black\"\n            />\n            <circle\n              cx=\"731.169\"\n              cy=\"286.959\"\n              r=\"3.5\"\n              transform=\"rotate(-67.5 731.169 286.959)\"\n              stroke=\"black\"\n              stroke-opacity=\"0.2\"\n            />\n          </g>\n        </g>\n        <circle id=\"Ellipse 3\" cx=\"777\" cy=\"306\" r=\"40\" fill=\"#161515\" />\n      </g>\n      <g id=\"base\">\n        <rect\n          id=\"Rectangle 70\"\n          x=\"367.5\"\n          y=\"261.5\"\n          width=\"27\"\n          height=\"14\"\n          rx=\"2.5\"\n          fill=\"url(#paint60_linear_6_626)\"\n          stroke=\"black\"\n        />\n        <rect\n          id=\"Rectangle 71\"\n          x=\"367.5\"\n          y=\"390.5\"\n          width=\"27\"\n          height=\"14\"\n          rx=\"2.5\"\n          fill=\"url(#paint61_linear_6_626)\"\n          stroke=\"black\"\n        />\n        <rect\n          id=\"Rectangle 53\"\n          x=\"341.5\"\n          y=\"273.5\"\n          width=\"79\"\n          height=\"119\"\n          fill=\"url(#paint62_linear_6_626)\"\n          stroke=\"black\"\n        />\n        <g id=\"Group 1\">\n          <g id=\"Repeat group 1_4\">\n            <rect\n              id=\"Rectangle 56\"\n              x=\"414.5\"\n              y=\"268.5\"\n              width=\"27\"\n              height=\"9\"\n              rx=\"2.5\"\n              fill=\"url(#paint63_linear_6_626)\"\n              stroke=\"black\"\n            />\n            <rect\n              id=\"Rectangle 56_2\"\n              x=\"414.5\"\n              y=\"288.5\"\n              width=\"27\"\n              height=\"9\"\n              rx=\"2.5\"\n              fill=\"url(#paint64_linear_6_626)\"\n              stroke=\"black\"\n            />\n            <rect\n              id=\"Rectangle 56_3\"\n              x=\"414.5\"\n              y=\"308.5\"\n              width=\"27\"\n              height=\"9\"\n              rx=\"2.5\"\n              fill=\"url(#paint65_linear_6_626)\"\n              stroke=\"black\"\n            />\n            <rect\n              id=\"Rectangle 56_4\"\n              x=\"414.5\"\n              y=\"328.5\"\n              width=\"27\"\n              height=\"9\"\n              rx=\"2.5\"\n              fill=\"url(#paint66_linear_6_626)\"\n              stroke=\"black\"\n            />\n            <rect\n              id=\"Rectangle 56_5\"\n              x=\"414.5\"\n              y=\"348.5\"\n              width=\"27\"\n              height=\"9\"\n              rx=\"2.5\"\n              fill=\"url(#paint67_linear_6_626)\"\n              stroke=\"black\"\n            />\n            <rect\n              id=\"Rectangle 56_6\"\n              x=\"414.5\"\n              y=\"368.5\"\n              width=\"27\"\n              height=\"9\"\n              rx=\"2.5\"\n              fill=\"url(#paint68_linear_6_626)\"\n              stroke=\"black\"\n            />\n            <rect\n              id=\"Rectangle 56_7\"\n              x=\"414.5\"\n              y=\"388.5\"\n              width=\"27\"\n              height=\"9\"\n              rx=\"2.5\"\n              fill=\"url(#paint69_linear_6_626)\"\n              stroke=\"black\"\n            />\n          </g>\n          <rect\n            id=\"Rectangle 54\"\n            x=\"418.5\"\n            y=\"263.5\"\n            width=\"19\"\n            height=\"139\"\n            rx=\"1.5\"\n            fill=\"url(#paint70_linear_6_626)\"\n            stroke=\"black\"\n          />\n        </g>\n        <g id=\"Group 2\">\n          <g id=\"Repeat group 2_2\">\n            <rect\n              id=\"Rectangle 56_8\"\n              x=\"324.5\"\n              y=\"268.5\"\n              width=\"23\"\n              height=\"9\"\n              rx=\"2.5\"\n              fill=\"url(#paint71_linear_6_626)\"\n              stroke=\"black\"\n            />\n            <rect\n              id=\"Rectangle 56_9\"\n              x=\"324.5\"\n              y=\"288.5\"\n              width=\"23\"\n              height=\"9\"\n              rx=\"2.5\"\n              fill=\"url(#paint72_linear_6_626)\"\n              stroke=\"black\"\n            />\n            <rect\n              id=\"Rectangle 56_10\"\n              x=\"324.5\"\n              y=\"308.5\"\n              width=\"23\"\n              height=\"9\"\n              rx=\"2.5\"\n              fill=\"url(#paint73_linear_6_626)\"\n              stroke=\"black\"\n            />\n            <rect\n              id=\"Rectangle 56_11\"\n              x=\"324.5\"\n              y=\"328.5\"\n              width=\"23\"\n              height=\"9\"\n              rx=\"2.5\"\n              fill=\"url(#paint74_linear_6_626)\"\n              stroke=\"black\"\n            />\n            <rect\n              id=\"Rectangle 56_12\"\n              x=\"324.5\"\n              y=\"348.5\"\n              width=\"23\"\n              height=\"9\"\n              rx=\"2.5\"\n              fill=\"url(#paint75_linear_6_626)\"\n              stroke=\"black\"\n            />\n            <rect\n              id=\"Rectangle 56_13\"\n              x=\"324.5\"\n              y=\"368.5\"\n              width=\"23\"\n              height=\"9\"\n              rx=\"2.5\"\n              fill=\"url(#paint76_linear_6_626)\"\n              stroke=\"black\"\n            />\n            <rect\n              id=\"Rectangle 56_14\"\n              x=\"324.5\"\n              y=\"388.5\"\n              width=\"23\"\n              height=\"9\"\n              rx=\"2.5\"\n              fill=\"url(#paint77_linear_6_626)\"\n              stroke=\"black\"\n            />\n          </g>\n          <rect\n            id=\"Rectangle 55\"\n            x=\"328.5\"\n            y=\"263.5\"\n            width=\"15\"\n            height=\"139\"\n            rx=\"1.5\"\n            fill=\"url(#paint78_linear_6_626)\"\n            stroke=\"black\"\n          />\n          <line\n            id=\"Line 4\"\n            x1=\"336\"\n            y1=\"264\"\n            x2=\"336\"\n            y2=\"402\"\n            stroke=\"#363636\"\n            stroke-width=\"2\"\n          />\n        </g>\n        <rect\n          id=\"Rectangle 57_2\"\n          x=\"425.5\"\n          y=\"263.5\"\n          width=\"5\"\n          height=\"139\"\n          fill=\"#43392A\"\n          stroke=\"black\"\n        />\n      </g>\n      <Steam showing={() => false} x={840} y={130} w={6} h={6} />\n    <defs>\n      <clipPath id=\"chamberClip\">\n        <rect\n          x=\"0\"\n          y={129 - 129 * chamberFill()}\n          width=\"479\"\n          height={129 * chamberFill()}\n          fill=\"white\"\n        />\n      </clipPath>\n      <clipPath id=\"overflowClip\">\n        <rect\n          x=\"914\"\n          y={398 - 12 * overflowFill()}\n          width=\"142\"\n          height={12 * overflowFill()}\n          fill=\"white\"\n        />\n      </clipPath>\n    </defs>\n    </g>\n  </>\n)};\n\n<svg width=\"476\" height=\"129\" viewBox=\"0 0 476 129\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M476 129H91.2139C81.7502 129 72.2982 128.334 62.9297 127.006L56.0703 126.034C46.7018 124.706 37.2498 124.038 27.7861 124.038H0V4.7793C4.33286 4.25776 8.46342 2.61488 11.9688 0H476V129Z\" fill=\"#3B8CCF\" fill-opacity=\"0.6\"/>\n</svg>\n\n\nexport default Kettle;","import type { Component } from \"solid-js\";\nimport \"./Display.css\";\n\ninterface DisplayProps {\n  x: number;\n  y: number;\n  val: (() => string | number) | string | number;\n  tofixed?: number;\n  // Future feature: add units (e.g., °C, °F)\n};\n\nexport const Display: Component<DisplayProps> = ({ x, y, val, tofixed }) => {\n  const fn = typeof val === \"function\" ? val : () => val;\n  const dec = (tofixed !== undefined) ? tofixed : 1;\n  const strFn = (typeof fn() === \"number\") ? () => (fn() as number).toFixed(dec) : fn;\n\n  return (\n    <g id=\"display\">\n      <rect\n        x={`${x}`}\n        y={`${y}`}\n        width=\"80\"\n        height=\"33\"\n        rx=\"3.5\"\n        fill=\"#888888\"\n        stroke=\"black\"\n      />\n      <rect\n        id=\"condTempScreen\"\n        x={`${x + 3}`}\n        y={`${y + 3}`}\n        width=\"74\"\n        height=\"27\"\n        rx=\"3.5\"\n        fill=\"#111111\"\n        stroke=\"black\"\n      />\n      <text\n        id=\"condTempVal\"\n        class=\"digital-label\"\n        x={`${x + 38}`}\n        y={`${y + 16.5}`}\n        dominant-baseline=\"middle\"\n        fill=\"#d7ce1bff\"\n        font-family=\"'Digital-7 Mono', monospace\"\n        font-size=\"20\"\n      >\n        { strFn() } °C\n      </text>\n    </g>\n)};\n\nexport default Display;","import { createEffect, createMemo, createSignal, type Accessor, type Component } from \"solid-js\";\nimport { animate, constrain } from \"../../ts/helpers\";\n\nexport interface WaterfallProps {\n  key: string;\n  cx: number;\n  rate: Accessor<number>;\n  rateRange?: [min: number, max: number];\n};\n\nexport const Waterfall: Component<WaterfallProps> = ({ key, cx, rate, rateRange }) => {\n  // Scale of x reacts to the flowrate\n  const [min, max] = (rateRange?.length === 2) ? rateRange : [0, 1262];\n  const range = max - min;\n  const sx = createMemo(() => constrain(rate() - min, 0, range) / range);\n  // createEffect(() => console.log(key, rate()))\n\n  // ClipHeight\n  const [clipHeight, setClipHeight] = createSignal(0);\n\n  // Animation for the water falling\n  const waterfallAni = (dt: number) => {\n    let h = clipHeight();\n    h += dt * 4;\n    setClipHeight(Math.min(h, 1));\n    // Stop the animation when max height is passed\n    return (h < 1 && rate() !== 0);\n  }\n  let flowing = true;\n  animate(waterfallAni);\n\n  // Restart the clip height animation any time the flowrate hits zero\n  createEffect(() => {\n    if (sx() === 0) {\n      flowing = false;\n    }\n    else if (flowing === false) {\n      flowing = true;\n      setClipHeight(0);\n      animate(waterfallAni);\n    }\n  });\n\n  return (\n  <>\n    <path\n      id={key + \"-fall\"}\n      d=\"M20 0C13.3333 0 6.66667 0 0 0C0.666667 2.72916 1.74142 5.45831 2 8.18747C2.01303 8.32498 2.02611 8.46249 2.03924 8.6C2.65716 15.0733 3.37604 21.5465 3.5 28.0198C4.36416 73.1465 5.07674 118.273 5.85154 163.4C5.90076 166.267 5.95022 169.133 6 172C8.66667 172 11.3333 172 14 172C14.0498 169.133 14.0992 166.267 14.1485 163.4C14.9233 118.273 15.6358 73.1465 16.5 28.0198C16.624 21.5465 17.3428 15.0733 17.9608 8.6C17.9739 8.46249 17.987 8.32498 18 8.18747C18.2586 5.45831 19.3333 2.72916 20 0Z\"\n      fill=\"#3B8CCF\"\n      fill-opacity=\"0.6\"\n      transform={`translate(${cx},522) scale(${sx()},1) translate(-10,0)`}\n      // clip-path={`url(#${key}-clip)`}\n      mask={`url(#${key}-mask)`}\n    />\n    <defs>\n      <clipPath id={key + \"-clip\"} clipPathUnits=\"objectBoundingBox\">\n        <rect x=\"0\" y=\"0\" width=\"1\" height={clipHeight()} />\n      </clipPath>\n      <mask maskUnits=\"objectBoundingBox\" id={key + \"-mask\"} >\n        <rect x=\"0\" y=\"0\" width=\"20\" height=\"172\" fill=\"white\"/>\n      </mask>\n    </defs>\n  </>\n)};\n\nexport default Waterfall;\n\n","import { createMemo, type Accessor, type Component } from \"solid-js\";\nimport { constrain } from \"../../ts/helpers\";\n\ninterface GaugeProps {\n  pressure: Accessor<number>; // in psig\n}\n\nexport const maxPressure = 1.2; // bar\n\nexport const Gauge: Component<GaugeProps> = ({ pressure }) => {\n  // Range of pressure: 0 to 1.2 bar\n  // Range of needle angle: -135 to 135 degrees\n  const minAngle = -135; // degrees\n  const maxAngle = 135; // degrees\n\n  // Angle of the needle\n  const needleAngle = createMemo(() => pressure() / maxPressure * (maxAngle - minAngle) + minAngle);\n\n  // Render\n  return (\n<g id=\"gauge\">\n<rect id=\"Rectangle 53_2\" x=\"-0.5\" y=\"-0.5\" width=\"9.03082\" height=\"15.1003\" rx=\"0.5\" transform=\"matrix(0 -1 -1 0 388.05 104)\" fill=\"url(#paint76_linear_6_626)\" stroke=\"black\"/>\n<path id=\"Ellipse 5\" d=\"M381 35.2842C398.509 35.2842 412.701 49.4329 412.701 66.8829C412.701 84.3328 398.509 98.4815 381 98.4815C363.491 98.4813 349.299 84.3327 349.299 66.8829C349.299 49.433 363.491 35.2844 381 35.2842Z\" fill=\"#5B8BF3\" stroke=\"black\"/>\n<path id=\"Ellipse 6\" d=\"M381 37.2904C397.398 37.2906 410.688 50.5414 410.688 66.8832C410.688 83.2249 397.398 96.4747 381 96.475C364.603 96.475 351.312 83.225 351.312 66.8832C351.312 50.5412 364.603 37.2904 381 37.2904Z\" fill=\"#D9D9D9\" stroke=\"black\"/>\n<g id=\"minor\">\n<path id=\"Line 14\" d=\"M385.093 41.1238L384.778 43.1053\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 14_2\" d=\"M389.085 42.0792L388.463 43.9872\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 14_3\" d=\"M392.878 43.6453L391.964 45.4328\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 14_4\" d=\"M396.378 45.7836L395.195 47.4067\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 14_5\" d=\"M402.166 51.5533L400.538 52.7325\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 14_6\" d=\"M404.311 55.0428L402.518 55.9536\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 14_7\" d=\"M405.882 58.8237L403.969 59.4434\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 14_8\" d=\"M406.841 62.803L404.853 63.1168\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 14_9\" d=\"M406.841 70.9627L404.853 70.6489\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 14_10\" d=\"M405.882 74.9421L403.969 74.3223\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 14_11\" d=\"M404.311 78.723L402.518 77.8122\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 14_12\" d=\"M402.166 82.2124L400.538 81.0332\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 14_13\" d=\"M359.834 82.2124L361.462 81.0332\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 14_14\" d=\"M357.689 78.723L359.482 77.8122\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 14_15\" d=\"M356.118 74.9421L358.031 74.3223\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 14_16\" d=\"M355.159 70.9627L357.147 70.6489\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 14_17\" d=\"M355.159 62.803L357.147 63.1168\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 14_18\" d=\"M356.118 58.8237L358.031 59.4434\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 14_19\" d=\"M357.689 55.0427L359.482 55.9535\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 14_20\" d=\"M359.834 51.5533L361.462 52.7325\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 14_21\" d=\"M365.622 45.7836L366.805 47.4067\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 14_22\" d=\"M369.122 43.6453L370.036 45.4328\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 14_23\" d=\"M372.915 42.0792L373.537 43.9872\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 14_24\" d=\"M376.907 41.1238L377.222 43.1053\" stroke=\"black\" stroke-width=\"0.5\"/>\n</g>\n<g id=\"major\">\n<path id=\"Line 15\" d=\"M381 40.8027V44.8151\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 15_2\" d=\"M399.5 48.4414L396.654 51.2786\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 15_3\" d=\"M407.163 66.8829L403.138 66.8829\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 15_4\" d=\"M399.5 85.3243L396.654 82.4871\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 15_5\" d=\"M362.5 85.3243L365.346 82.4871\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 15_6\" d=\"M354.837 66.8829L358.862 66.8829\" stroke=\"black\" stroke-width=\"0.5\"/>\n<path id=\"Line 15_7\" d=\"M362.5 48.4414L365.346 51.2786\" stroke=\"black\" stroke-width=\"0.5\"/>\n</g>\n<path id=\"Ellipse 8\" d=\"M399.5 85.3243C409.717 75.1394 409.717 58.6264 399.5 48.4414C389.283 38.2565 372.717 38.2565 362.5 48.4414C352.283 58.6264 352.283 75.1394 362.5 85.3243\" stroke=\"black\" stroke-width=\"0.5\" stroke-linecap=\"square\"/>\n<path id=\"bar\" d=\"M376.528 90V85.6364H377.031V87.2472H377.074C377.111 87.1903 377.162 87.1179 377.227 87.0298C377.294 86.9403 377.389 86.8608 377.513 86.7912C377.638 86.7202 377.807 86.6847 378.02 86.6847C378.295 86.6847 378.538 86.7536 378.749 86.8913C378.959 87.0291 379.123 87.2244 379.241 87.4773C379.359 87.7301 379.418 88.0284 379.418 88.3722C379.418 88.7188 379.359 89.0192 379.241 89.2734C379.123 89.5263 378.96 89.7223 378.751 89.8615C378.542 89.9993 378.301 90.0682 378.028 90.0682C377.818 90.0682 377.65 90.0334 377.523 89.9638C377.397 89.8928 377.3 89.8125 377.232 89.723C377.163 89.6321 377.111 89.5568 377.074 89.4972H377.014V90H376.528ZM377.023 88.3636C377.023 88.6108 377.059 88.8288 377.131 89.0178C377.204 89.2053 377.31 89.3523 377.449 89.4588C377.588 89.5639 377.759 89.6165 377.96 89.6165C378.17 89.6165 378.346 89.5611 378.487 89.4503C378.629 89.3381 378.735 89.1875 378.806 88.9986C378.879 88.8082 378.915 88.5966 378.915 88.3636C378.915 88.1335 378.879 87.9261 378.808 87.7415C378.739 87.5554 378.633 87.4084 378.491 87.3004C378.35 87.1911 378.173 87.1364 377.96 87.1364C377.756 87.1364 377.584 87.1882 377.445 87.2919C377.305 87.3942 377.2 87.5376 377.129 87.7223C377.058 87.9055 377.023 88.1193 377.023 88.3636ZM381.15 90.0767C380.942 90.0767 380.754 90.0376 380.585 89.9595C380.416 89.88 380.282 89.7656 380.183 89.6165C380.083 89.4659 380.033 89.2841 380.033 89.071C380.033 88.8835 380.07 88.7315 380.144 88.6151C380.218 88.4972 380.317 88.4048 380.44 88.3381C380.564 88.2713 380.7 88.2216 380.849 88.1889C381 88.1548 381.151 88.1278 381.303 88.108C381.502 88.0824 381.663 88.0632 381.787 88.0504C381.912 88.0362 382.003 88.0128 382.06 87.9801C382.118 87.9474 382.147 87.8906 382.147 87.8097V87.7926C382.147 87.5824 382.089 87.419 381.974 87.3026C381.861 87.1861 381.688 87.1278 381.457 87.1278C381.217 87.1278 381.028 87.1804 380.892 87.2855C380.756 87.3906 380.66 87.5028 380.604 87.6222L380.127 87.4517C380.212 87.2528 380.326 87.098 380.468 86.9872C380.612 86.875 380.768 86.7969 380.937 86.7528C381.107 86.7074 381.275 86.6847 381.44 86.6847C381.545 86.6847 381.665 86.6974 381.802 86.723C381.94 86.7472 382.072 86.7976 382.2 86.8743C382.33 86.951 382.437 87.0668 382.522 87.2216C382.607 87.3764 382.65 87.5838 382.65 87.8438V90H382.147V89.5568H382.121C382.087 89.6278 382.031 89.7038 381.951 89.7848C381.871 89.8658 381.766 89.9347 381.634 89.9915C381.501 90.0483 381.34 90.0767 381.15 90.0767ZM381.227 89.625C381.425 89.625 381.593 89.5859 381.729 89.5078C381.867 89.4297 381.971 89.3288 382.04 89.2053C382.112 89.0817 382.147 88.9517 382.147 88.8153V88.3551C382.126 88.3807 382.079 88.4041 382.006 88.4254C381.935 88.4453 381.853 88.4631 381.759 88.4787C381.667 88.4929 381.577 88.5057 381.489 88.517C381.402 88.527 381.332 88.5355 381.278 88.5426C381.147 88.5597 381.025 88.5874 380.911 88.6257C380.799 88.6626 380.708 88.7187 380.638 88.794C380.57 88.8679 380.536 88.9687 380.536 89.0966C380.536 89.2713 380.601 89.4034 380.73 89.4929C380.861 89.581 381.026 89.625 381.227 89.625ZM383.568 90V86.7273H384.053V87.2216H384.088C384.147 87.0597 384.255 86.9283 384.411 86.8274C384.568 86.7266 384.744 86.6761 384.94 86.6761C384.977 86.6761 385.023 86.6768 385.078 86.6783C385.134 86.6797 385.176 86.6818 385.204 86.6847V87.196C385.187 87.1918 385.148 87.1854 385.087 87.1768C385.027 87.1669 384.964 87.1619 384.897 87.1619C384.738 87.1619 384.596 87.1953 384.471 87.2621C384.347 87.3274 384.249 87.4183 384.177 87.5348C384.106 87.6499 384.07 87.7812 384.07 87.929V90H383.568Z\" fill=\"black\"/>\n<path id=\"0.0\" d=\"M367.875 82.0597C367.554 82.0597 367.281 81.9723 367.055 81.7976C366.829 81.6214 366.656 81.3665 366.537 81.0327C366.418 80.6974 366.358 80.2926 366.358 79.8182C366.358 79.3466 366.418 78.9439 366.537 78.6101C366.658 78.2749 366.831 78.0192 367.057 77.843C367.284 77.6655 367.557 77.5767 367.875 77.5767C368.193 77.5767 368.465 77.6655 368.691 77.843C368.918 78.0192 369.092 78.2749 369.211 78.6101C369.332 78.9439 369.392 79.3466 369.392 79.8182C369.392 80.2926 369.332 80.6974 369.213 81.0327C369.094 81.3665 368.921 81.6214 368.695 81.7976C368.469 81.9723 368.196 82.0597 367.875 82.0597ZM367.875 81.5909C368.193 81.5909 368.44 81.4375 368.616 81.1307C368.793 80.8239 368.881 80.3864 368.881 79.8182C368.881 79.4403 368.84 79.1186 368.759 78.853C368.68 78.5874 368.565 78.3849 368.414 78.2457C368.265 78.1065 368.085 78.0369 367.875 78.0369C367.56 78.0369 367.313 78.1925 367.136 78.5036C366.958 78.8132 366.869 79.2514 366.869 79.8182C366.869 80.196 366.909 80.517 366.989 80.7812C367.068 81.0455 367.183 81.2464 367.332 81.3842C367.482 81.522 367.663 81.5909 367.875 81.5909ZM370.424 82.0341C370.319 82.0341 370.229 81.9964 370.154 81.9212C370.078 81.8459 370.041 81.7557 370.041 81.6506C370.041 81.5455 370.078 81.4553 370.154 81.38C370.229 81.3047 370.319 81.267 370.424 81.267C370.529 81.267 370.62 81.3047 370.695 81.38C370.77 81.4553 370.808 81.5455 370.808 81.6506C370.808 81.7202 370.79 81.7841 370.755 81.8423C370.721 81.9006 370.674 81.9474 370.616 81.983C370.559 82.017 370.495 82.0341 370.424 82.0341ZM372.973 82.0597C372.652 82.0597 372.378 81.9723 372.152 81.7976C371.926 81.6214 371.754 81.3665 371.635 81.0327C371.515 80.6974 371.456 80.2926 371.456 79.8182C371.456 79.3466 371.515 78.9439 371.635 78.6101C371.755 78.2749 371.929 78.0192 372.154 77.843C372.382 77.6655 372.654 77.5767 372.973 77.5767C373.291 77.5767 373.563 77.6655 373.789 77.843C374.016 78.0192 374.189 78.2749 374.309 78.6101C374.429 78.9439 374.49 79.3466 374.49 79.8182C374.49 80.2926 374.43 80.6974 374.311 81.0327C374.191 81.3665 374.019 81.6214 373.793 81.7976C373.567 81.9723 373.294 82.0597 372.973 82.0597ZM372.973 81.5909C373.291 81.5909 373.538 81.4375 373.714 81.1307C373.89 80.8239 373.978 80.3864 373.978 79.8182C373.978 79.4403 373.938 79.1186 373.857 78.853C373.777 78.5874 373.662 78.3849 373.512 78.2457C373.363 78.1065 373.183 78.0369 372.973 78.0369C372.657 78.0369 372.411 78.1925 372.233 78.5036C372.056 78.8132 371.967 79.2514 371.967 79.8182C371.967 80.196 372.007 80.517 372.086 80.7812C372.166 81.0455 372.28 81.2464 372.429 81.3842C372.58 81.522 372.761 81.5909 372.973 81.5909Z\" fill=\"black\"/>\n<path id=\"0.2\" d=\"M361.875 69.0597C361.554 69.0597 361.281 68.9723 361.055 68.7976C360.829 68.6214 360.656 68.3665 360.537 68.0327C360.418 67.6974 360.358 67.2926 360.358 66.8182C360.358 66.3466 360.418 65.9439 360.537 65.6101C360.658 65.2749 360.831 65.0192 361.057 64.843C361.284 64.6655 361.557 64.5767 361.875 64.5767C362.193 64.5767 362.465 64.6655 362.691 64.843C362.918 65.0192 363.092 65.2749 363.211 65.6101C363.332 65.9439 363.392 66.3466 363.392 66.8182C363.392 67.2926 363.332 67.6974 363.213 68.0327C363.094 68.3665 362.921 68.6214 362.695 68.7976C362.469 68.9723 362.196 69.0597 361.875 69.0597ZM361.875 68.5909C362.193 68.5909 362.44 68.4375 362.616 68.1307C362.793 67.8239 362.881 67.3864 362.881 66.8182C362.881 66.4403 362.84 66.1186 362.759 65.853C362.68 65.5874 362.565 65.3849 362.414 65.2457C362.265 65.1065 362.085 65.0369 361.875 65.0369C361.56 65.0369 361.313 65.1925 361.136 65.5036C360.958 65.8132 360.869 66.2514 360.869 66.8182C360.869 67.196 360.909 67.517 360.989 67.7812C361.068 68.0455 361.183 68.2464 361.332 68.3842C361.482 68.522 361.663 68.5909 361.875 68.5909ZM364.424 69.0341C364.319 69.0341 364.229 68.9964 364.154 68.9212C364.078 68.8459 364.041 68.7557 364.041 68.6506C364.041 68.5455 364.078 68.4553 364.154 68.38C364.229 68.3047 364.319 68.267 364.424 68.267C364.529 68.267 364.62 68.3047 364.695 68.38C364.77 68.4553 364.808 68.5455 364.808 68.6506C364.808 68.7202 364.79 68.7841 364.755 68.8423C364.721 68.9006 364.674 68.9474 364.616 68.983C364.559 69.017 364.495 69.0341 364.424 69.0341ZM365.702 69V68.6165L367.142 67.0398C367.311 66.8551 367.45 66.6946 367.56 66.5582C367.669 66.4205 367.75 66.2912 367.803 66.1705C367.857 66.0483 367.884 65.9205 367.884 65.7869C367.884 65.6335 367.847 65.5007 367.773 65.3885C367.7 65.2763 367.601 65.1896 367.474 65.1286C367.348 65.0675 367.206 65.0369 367.048 65.0369C366.881 65.0369 366.734 65.0717 366.609 65.1413C366.486 65.2095 366.39 65.3054 366.322 65.429C366.255 65.5526 366.222 65.6974 366.222 65.8636H365.719C365.719 65.608 365.778 65.3835 365.896 65.1903C366.013 64.9972 366.174 64.8466 366.377 64.7386C366.582 64.6307 366.811 64.5767 367.065 64.5767C367.321 64.5767 367.548 64.6307 367.745 64.7386C367.942 64.8466 368.097 64.9922 368.21 65.1754C368.322 65.3587 368.378 65.5625 368.378 65.7869C368.378 65.9474 368.349 66.1044 368.29 66.2578C368.234 66.4098 368.134 66.5795 367.992 66.767C367.852 66.9531 367.656 67.1804 367.406 67.4489L366.426 68.4972V68.5312H368.455V69H365.702Z\" fill=\"black\"/>\n<path id=\"0.4\" d=\"M366.875 56.0597C366.554 56.0597 366.281 55.9723 366.055 55.7976C365.829 55.6214 365.656 55.3665 365.537 55.0327C365.418 54.6974 365.358 54.2926 365.358 53.8182C365.358 53.3466 365.418 52.9439 365.537 52.6101C365.658 52.2749 365.831 52.0192 366.057 51.843C366.284 51.6655 366.557 51.5767 366.875 51.5767C367.193 51.5767 367.465 51.6655 367.691 51.843C367.918 52.0192 368.092 52.2749 368.211 52.6101C368.332 52.9439 368.392 53.3466 368.392 53.8182C368.392 54.2926 368.332 54.6974 368.213 55.0327C368.094 55.3665 367.921 55.6214 367.695 55.7976C367.469 55.9723 367.196 56.0597 366.875 56.0597ZM366.875 55.5909C367.193 55.5909 367.44 55.4375 367.616 55.1307C367.793 54.8239 367.881 54.3864 367.881 53.8182C367.881 53.4403 367.84 53.1186 367.759 52.853C367.68 52.5874 367.565 52.3849 367.414 52.2457C367.265 52.1065 367.085 52.0369 366.875 52.0369C366.56 52.0369 366.313 52.1925 366.136 52.5036C365.958 52.8132 365.869 53.2514 365.869 53.8182C365.869 54.196 365.909 54.517 365.989 54.7812C366.068 55.0455 366.183 55.2464 366.332 55.3842C366.482 55.522 366.663 55.5909 366.875 55.5909ZM369.424 56.0341C369.319 56.0341 369.229 55.9964 369.154 55.9212C369.078 55.8459 369.041 55.7557 369.041 55.6506C369.041 55.5455 369.078 55.4553 369.154 55.38C369.229 55.3047 369.319 55.267 369.424 55.267C369.529 55.267 369.62 55.3047 369.695 55.38C369.77 55.4553 369.808 55.5455 369.808 55.6506C369.808 55.7202 369.79 55.7841 369.755 55.8423C369.721 55.9006 369.674 55.9474 369.616 55.983C369.559 56.017 369.495 56.0341 369.424 56.0341ZM370.599 55.1051V54.6705L372.517 51.6364H372.832V52.3097H372.619L371.17 54.6023V54.6364H373.753V55.1051H370.599ZM372.653 56V54.973V54.7706V51.6364H373.156V56H372.653Z\" fill=\"black\"/>\n<path id=\"0.6\" d=\"M378.875 51.0597C378.554 51.0597 378.281 50.9723 378.055 50.7976C377.829 50.6214 377.656 50.3665 377.537 50.0327C377.418 49.6974 377.358 49.2926 377.358 48.8182C377.358 48.3466 377.418 47.9439 377.537 47.6101C377.658 47.2749 377.831 47.0192 378.057 46.843C378.284 46.6655 378.557 46.5767 378.875 46.5767C379.193 46.5767 379.465 46.6655 379.691 46.843C379.918 47.0192 380.092 47.2749 380.211 47.6101C380.332 47.9439 380.392 48.3466 380.392 48.8182C380.392 49.2926 380.332 49.6974 380.213 50.0327C380.094 50.3665 379.921 50.6214 379.695 50.7976C379.469 50.9723 379.196 51.0597 378.875 51.0597ZM378.875 50.5909C379.193 50.5909 379.44 50.4375 379.616 50.1307C379.793 49.8239 379.881 49.3864 379.881 48.8182C379.881 48.4403 379.84 48.1186 379.759 47.853C379.68 47.5874 379.565 47.3849 379.414 47.2457C379.265 47.1065 379.085 47.0369 378.875 47.0369C378.56 47.0369 378.313 47.1925 378.136 47.5036C377.958 47.8132 377.869 48.2514 377.869 48.8182C377.869 49.196 377.909 49.517 377.989 49.7812C378.068 50.0455 378.183 50.2464 378.332 50.3842C378.482 50.522 378.663 50.5909 378.875 50.5909ZM381.424 51.0341C381.319 51.0341 381.229 50.9964 381.154 50.9212C381.078 50.8459 381.041 50.7557 381.041 50.6506C381.041 50.5455 381.078 50.4553 381.154 50.38C381.229 50.3047 381.319 50.267 381.424 50.267C381.529 50.267 381.62 50.3047 381.695 50.38C381.77 50.4553 381.808 50.5455 381.808 50.6506C381.808 50.7202 381.79 50.7841 381.755 50.8423C381.721 50.9006 381.674 50.9474 381.616 50.983C381.559 51.017 381.495 51.0341 381.424 51.0341ZM383.998 51.0597C383.819 51.0568 383.64 51.0227 383.461 50.9574C383.282 50.892 383.119 50.782 382.971 50.6271C382.824 50.4709 382.705 50.2599 382.615 49.9943C382.526 49.7273 382.481 49.392 382.481 48.9886C382.481 48.6023 382.517 48.2599 382.59 47.9616C382.662 47.6619 382.767 47.4098 382.905 47.2053C383.043 46.9993 383.209 46.843 383.404 46.7365C383.6 46.63 383.821 46.5767 384.066 46.5767C384.311 46.5767 384.528 46.6257 384.718 46.7237C384.91 46.8203 385.066 46.9553 385.187 47.1286C385.308 47.3018 385.386 47.5014 385.422 47.7273H384.902C384.853 47.5312 384.76 47.3686 384.62 47.2393C384.481 47.1101 384.297 47.0455 384.066 47.0455C383.728 47.0455 383.462 47.1925 383.267 47.4865C383.074 47.7805 382.977 48.1932 382.975 48.7244H383.01C383.089 48.6037 383.184 48.5007 383.293 48.4155C383.404 48.3288 383.526 48.2621 383.659 48.2152C383.793 48.1683 383.934 48.1449 384.083 48.1449C384.333 48.1449 384.562 48.2074 384.77 48.3324C384.977 48.456 385.143 48.6271 385.268 48.8459C385.393 49.0632 385.456 49.3125 385.456 49.5938C385.456 49.8636 385.395 50.1108 385.275 50.3352C385.154 50.5582 384.984 50.7358 384.765 50.8679C384.548 50.9986 384.292 51.0625 383.998 51.0597ZM383.998 50.5909C384.177 50.5909 384.338 50.5462 384.48 50.4567C384.623 50.3672 384.736 50.2472 384.819 50.0966C384.902 49.946 384.944 49.7784 384.944 49.5938C384.944 49.4134 384.904 49.2493 384.823 49.1016C384.743 48.9524 384.633 48.8338 384.493 48.7457C384.353 48.6577 384.194 48.6136 384.015 48.6136C383.88 48.6136 383.755 48.6406 383.638 48.6946C383.522 48.7472 383.419 48.8196 383.331 48.9119C383.245 49.0043 383.176 49.1101 383.127 49.2294C383.077 49.3473 383.052 49.4716 383.052 49.6023C383.052 49.7756 383.093 49.9375 383.174 50.0881C383.256 50.2386 383.368 50.3601 383.51 50.4524C383.654 50.5447 383.816 50.5909 383.998 50.5909Z\" fill=\"black\"/>\n<path id=\"0.8\" d=\"M389.875 56.0597C389.554 56.0597 389.281 55.9723 389.055 55.7976C388.829 55.6214 388.656 55.3665 388.537 55.0327C388.418 54.6974 388.358 54.2926 388.358 53.8182C388.358 53.3466 388.418 52.9439 388.537 52.6101C388.658 52.2749 388.831 52.0192 389.057 51.843C389.284 51.6655 389.557 51.5767 389.875 51.5767C390.193 51.5767 390.465 51.6655 390.691 51.843C390.918 52.0192 391.092 52.2749 391.211 52.6101C391.332 52.9439 391.392 53.3466 391.392 53.8182C391.392 54.2926 391.332 54.6974 391.213 55.0327C391.094 55.3665 390.921 55.6214 390.695 55.7976C390.469 55.9723 390.196 56.0597 389.875 56.0597ZM389.875 55.5909C390.193 55.5909 390.44 55.4375 390.616 55.1307C390.793 54.8239 390.881 54.3864 390.881 53.8182C390.881 53.4403 390.84 53.1186 390.759 52.853C390.68 52.5874 390.565 52.3849 390.414 52.2457C390.265 52.1065 390.085 52.0369 389.875 52.0369C389.56 52.0369 389.313 52.1925 389.136 52.5036C388.958 52.8132 388.869 53.2514 388.869 53.8182C388.869 54.196 388.909 54.517 388.989 54.7812C389.068 55.0455 389.183 55.2464 389.332 55.3842C389.482 55.522 389.663 55.5909 389.875 55.5909ZM392.424 56.0341C392.319 56.0341 392.229 55.9964 392.154 55.9212C392.078 55.8459 392.041 55.7557 392.041 55.6506C392.041 55.5455 392.078 55.4553 392.154 55.38C392.229 55.3047 392.319 55.267 392.424 55.267C392.529 55.267 392.62 55.3047 392.695 55.38C392.77 55.4553 392.808 55.5455 392.808 55.6506C392.808 55.7202 392.79 55.7841 392.755 55.8423C392.721 55.9006 392.674 55.9474 392.616 55.983C392.559 56.017 392.495 56.0341 392.424 56.0341ZM394.965 56.0597C394.672 56.0597 394.414 56.0078 394.189 55.9041C393.966 55.799 393.792 55.6548 393.667 55.4716C393.542 55.2869 393.48 55.0767 393.482 54.8409C393.48 54.6562 393.517 54.4858 393.59 54.3295C393.664 54.1719 393.765 54.0405 393.893 53.9354C394.022 53.8288 394.166 53.7614 394.325 53.733V53.7074C394.117 53.6534 393.95 53.5362 393.827 53.3558C393.703 53.174 393.642 52.9673 393.644 52.7358C393.642 52.5142 393.698 52.3161 393.812 52.1413C393.926 51.9666 394.082 51.8288 394.281 51.728C394.481 51.6271 394.709 51.5767 394.965 51.5767C395.218 51.5767 395.443 51.6271 395.642 51.728C395.841 51.8288 395.997 51.9666 396.111 52.1413C396.226 52.3161 396.284 52.5142 396.286 52.7358C396.284 52.9673 396.221 53.174 396.096 53.3558C395.972 53.5362 395.808 53.6534 395.604 53.7074V53.733C395.762 53.7614 395.904 53.8288 396.03 53.9354C396.156 54.0405 396.257 54.1719 396.333 54.3295C396.408 54.4858 396.446 54.6562 396.448 54.8409C396.446 55.0767 396.382 55.2869 396.256 55.4716C396.131 55.6548 395.957 55.799 395.734 55.9041C395.512 56.0078 395.256 56.0597 394.965 56.0597ZM394.965 55.5909C395.162 55.5909 395.333 55.5589 395.476 55.495C395.619 55.4311 395.73 55.3409 395.808 55.2244C395.887 55.108 395.926 54.9716 395.928 54.8153C395.926 54.6506 395.884 54.505 395.8 54.3786C395.716 54.2521 395.602 54.1527 395.457 54.0803C395.313 54.0078 395.149 53.9716 394.965 53.9716C394.779 53.9716 394.612 54.0078 394.466 54.0803C394.321 54.1527 394.207 54.2521 394.123 54.3786C394.041 54.505 394 54.6506 394.002 54.8153C394 54.9716 394.038 55.108 394.115 55.2244C394.193 55.3409 394.304 55.4311 394.449 55.495C394.594 55.5589 394.766 55.5909 394.965 55.5909ZM394.965 53.5199C395.121 53.5199 395.259 53.4886 395.38 53.4261C395.502 53.3636 395.598 53.2763 395.668 53.1641C395.737 53.0518 395.773 52.9205 395.774 52.7699C395.773 52.6222 395.738 52.4936 395.67 52.3842C395.602 52.2734 395.507 52.1882 395.387 52.1286C395.266 52.0675 395.125 52.0369 394.965 52.0369C394.801 52.0369 394.659 52.0675 394.536 52.1286C394.414 52.1882 394.32 52.2734 394.253 52.3842C394.186 52.4936 394.154 52.6222 394.155 52.7699C394.154 52.9205 394.187 53.0518 394.255 53.1641C394.325 53.2763 394.421 53.3636 394.543 53.4261C394.665 53.4886 394.806 53.5199 394.965 53.5199Z\" fill=\"black\"/>\n<path id=\"1.0\" d=\"M396.986 64.6364V69H396.457V65.1903H396.432L395.366 65.8977V65.3608L396.457 64.6364H396.986ZM398.358 69.0341C398.253 69.0341 398.163 68.9964 398.087 68.9212C398.012 68.8459 397.974 68.7557 397.974 68.6506C397.974 68.5455 398.012 68.4553 398.087 68.38C398.163 68.3047 398.253 68.267 398.358 68.267C398.463 68.267 398.553 68.3047 398.629 68.38C398.704 68.4553 398.741 68.5455 398.741 68.6506C398.741 68.7202 398.724 68.7841 398.688 68.8423C398.654 68.9006 398.608 68.9474 398.55 68.983C398.493 69.017 398.429 69.0341 398.358 69.0341ZM400.906 69.0597C400.585 69.0597 400.312 68.9723 400.086 68.7976C399.86 68.6214 399.688 68.3665 399.568 68.0327C399.449 67.6974 399.389 67.2926 399.389 66.8182C399.389 66.3466 399.449 65.9439 399.568 65.6101C399.689 65.2749 399.862 65.0192 400.088 64.843C400.315 64.6655 400.588 64.5767 400.906 64.5767C401.224 64.5767 401.496 64.6655 401.722 64.843C401.95 65.0192 402.123 65.2749 402.242 65.6101C402.363 65.9439 402.423 66.3466 402.423 66.8182C402.423 67.2926 402.364 67.6974 402.244 68.0327C402.125 68.3665 401.952 68.6214 401.727 68.7976C401.501 68.9723 401.227 69.0597 400.906 69.0597ZM400.906 68.5909C401.224 68.5909 401.472 68.4375 401.648 68.1307C401.824 67.8239 401.912 67.3864 401.912 66.8182C401.912 66.4403 401.871 66.1186 401.79 65.853C401.711 65.5874 401.596 65.3849 401.445 65.2457C401.296 65.1065 401.116 65.0369 400.906 65.0369C400.591 65.0369 400.344 65.1925 400.167 65.5036C399.989 65.8132 399.901 66.2514 399.901 66.8182C399.901 67.196 399.94 67.517 400.02 67.7812C400.099 68.0455 400.214 68.2464 400.363 68.3842C400.513 68.522 400.695 68.5909 400.906 68.5909Z\" fill=\"black\"/>\n<path id=\"1.2\" d=\"M389.986 77.6364V82H389.457V78.1903H389.432L388.366 78.8977V78.3608L389.457 77.6364H389.986ZM391.358 82.0341C391.253 82.0341 391.163 81.9964 391.087 81.9212C391.012 81.8459 390.974 81.7557 390.974 81.6506C390.974 81.5455 391.012 81.4553 391.087 81.38C391.163 81.3047 391.253 81.267 391.358 81.267C391.463 81.267 391.553 81.3047 391.629 81.38C391.704 81.4553 391.741 81.5455 391.741 81.6506C391.741 81.7202 391.724 81.7841 391.688 81.8423C391.654 81.9006 391.608 81.9474 391.55 81.983C391.493 82.017 391.429 82.0341 391.358 82.0341ZM392.635 82V81.6165L394.076 80.0398C394.245 79.8551 394.384 79.6946 394.493 79.5582C394.603 79.4205 394.684 79.2912 394.736 79.1705C394.79 79.0483 394.817 78.9205 394.817 78.7869C394.817 78.6335 394.78 78.5007 394.706 78.3885C394.634 78.2763 394.534 78.1896 394.408 78.1286C394.282 78.0675 394.14 78.0369 393.982 78.0369C393.814 78.0369 393.668 78.0717 393.543 78.1413C393.419 78.2095 393.324 78.3054 393.255 78.429C393.189 78.5526 393.155 78.6974 393.155 78.8636H392.652C392.652 78.608 392.711 78.3835 392.829 78.1903C392.947 77.9972 393.108 77.8466 393.311 77.7386C393.515 77.6307 393.745 77.5767 393.999 77.5767C394.255 77.5767 394.481 77.6307 394.679 77.7386C394.876 77.8466 395.031 77.9922 395.143 78.1754C395.255 78.3587 395.311 78.5625 395.311 78.7869C395.311 78.9474 395.282 79.1044 395.224 79.2578C395.167 79.4098 395.068 79.5795 394.926 79.767C394.785 79.9531 394.59 80.1804 394.34 80.4489L393.36 81.4972V81.5312H395.388V82H392.635Z\" fill=\"black\"/>\n\n<path\n  id=\"needle\"\n  class=\"gauge-needle\"\n  transform={`rotate(${constrain(needleAngle(), minAngle, maxAngle)} 381 66.8829)`}\n  d=\"M381 72.9014C381.107 72.3497 381.196 71.798 381.269 71.2463C381.423 70.0723 381.5 68.8983 381.5 67.7244C381.5 63.5573 381.5 59.3902 381.5 55.2231C381.5 50.6336 381.367 46.0442 381.102 41.4548C381.07 40.9031 381.036 40.3514 381 39.7997C380.964 40.3514 380.93 40.9031 380.898 41.4548C380.633 46.0442 380.5 50.6336 380.5 55.2231C380.5 59.3902 380.5 63.5573 380.5 67.7244C380.5 68.8983 380.577 70.0723 380.731 71.2463C380.804 71.798 380.893 72.3497 381 72.9014Z\"\n  fill=\"#E00000\"\n/>\n<path id=\"pGaugeCenter\" d=\"M381 66.1298C381.418 66.1298 381.756 66.4677 381.756 66.8828C381.756 67.2979 381.418 67.6357 381 67.6357C380.581 67.6355 380.244 67.2978 380.244 66.8828C380.244 66.4678 380.581 66.13 381 66.1298Z\" fill=\"#D9D9D9\" stroke=\"black\" stroke-width=\"0.5\"/>\n</g>\n\n\n\n    // <g id=\"gauge\">\n    //   <rect\n    //     id=\"Rectangle 53_2\"\n    //     x=\"-0.5\"\n    //     y=\"-0.5\"\n    //     width=\"9.03082\"\n    //     height=\"15.1003\"\n    //     rx=\"0.5\"\n    //     transform=\"matrix(0 -1 -1 0 388.05 104)\"\n    //     fill=\"url(#paint79_linear_6_626)\"\n    //     stroke=\"black\"\n    //   />\n    //   <path\n    //     id=\"Ellipse 5\"\n    //     d=\"M381 35.2842C398.509 35.2842 412.701 49.4329 412.701 66.8829C412.701 84.3328 398.509 98.4815 381 98.4815C363.491 98.4813 349.299 84.3327 349.299 66.8829C349.299 49.433 363.491 35.2844 381 35.2842Z\"\n    //     fill=\"#5B8BF3\"\n    //     stroke=\"black\"\n    //   />\n    //   <path\n    //     id=\"Ellipse 6\"\n    //     d=\"M381 37.2904C397.398 37.2906 410.688 50.5414 410.688 66.8832C410.688 83.2249 397.398 96.4747 381 96.475C364.603 96.475 351.312 83.225 351.312 66.8832C351.312 50.5412 364.603 37.2904 381 37.2904Z\"\n    //     fill=\"#D9D9D9\"\n    //     stroke=\"black\"\n    //   />\n    //   <g id=\"minor\">\n    //     <path\n    //       id=\"Line 14\"\n    //       d=\"M385.093 41.1238L384.778 43.1053\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 14_2\"\n    //       d=\"M389.085 42.0792L388.463 43.9872\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 14_3\"\n    //       d=\"M392.878 43.6453L391.964 45.4328\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 14_4\"\n    //       d=\"M396.378 45.7836L395.195 47.4067\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 14_5\"\n    //       d=\"M402.166 51.5533L400.538 52.7325\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 14_6\"\n    //       d=\"M404.311 55.0428L402.518 55.9536\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 14_7\"\n    //       d=\"M405.882 58.8237L403.969 59.4434\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 14_8\"\n    //       d=\"M406.841 62.803L404.853 63.1168\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 14_9\"\n    //       d=\"M406.841 70.9627L404.853 70.6489\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 14_10\"\n    //       d=\"M405.882 74.9421L403.969 74.3223\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 14_11\"\n    //       d=\"M404.311 78.723L402.518 77.8122\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 14_12\"\n    //       d=\"M402.166 82.2124L400.538 81.0332\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 14_13\"\n    //       d=\"M359.834 82.2124L361.462 81.0332\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 14_14\"\n    //       d=\"M357.689 78.723L359.482 77.8122\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 14_15\"\n    //       d=\"M356.118 74.9421L358.031 74.3223\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 14_16\"\n    //       d=\"M355.159 70.9627L357.147 70.6489\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 14_17\"\n    //       d=\"M355.159 62.803L357.147 63.1168\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 14_18\"\n    //       d=\"M356.118 58.8237L358.031 59.4434\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 14_19\"\n    //       d=\"M357.689 55.0427L359.482 55.9535\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 14_20\"\n    //       d=\"M359.834 51.5533L361.462 52.7325\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 14_21\"\n    //       d=\"M365.622 45.7836L366.805 47.4067\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 14_22\"\n    //       d=\"M369.122 43.6453L370.036 45.4328\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 14_23\"\n    //       d=\"M372.915 42.0792L373.537 43.9872\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 14_24\"\n    //       d=\"M376.907 41.1238L377.222 43.1053\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //   </g>\n    //   <g id=\"major\">\n    //     <path\n    //       id=\"Line 15\"\n    //       d=\"M381 40.8027V44.8151\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 15_2\"\n    //       d=\"M399.5 48.4414L396.654 51.2786\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 15_3\"\n    //       d=\"M407.163 66.8829L403.138 66.8829\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 15_4\"\n    //       d=\"M399.5 85.3243L396.654 82.4871\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 15_5\"\n    //       d=\"M362.5 85.3243L365.346 82.4871\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 15_6\"\n    //       d=\"M354.837 66.8829L358.862 66.8829\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //     <path\n    //       id=\"Line 15_7\"\n    //       d=\"M362.5 48.4414L365.346 51.2786\"\n    //       stroke=\"black\"\n    //       stroke-width=\"0.5\"\n    //     />\n    //   </g>\n    //   <path\n    //     id=\"Ellipse 8\"\n    //     d=\"M399.5 85.3243C409.717 75.1394 409.717 58.6264 399.5 48.4414C389.283 38.2565 372.717 38.2565 362.5 48.4414C352.283 58.6264 352.283 75.1394 362.5 85.3243\"\n    //     stroke=\"black\"\n    //     stroke-width=\"0.5\"\n    //     stroke-linecap=\"square\"\n    //   />\n    //   <path\n    //     id=\"psig\"\n    //     d=\"M375.423 91.1626V86.6626H375.908V87.1825H375.968C376.005 87.1256 376.056 87.0532 376.121 86.9651C376.188 86.8756 376.283 86.7961 376.407 86.7265C376.532 86.6555 376.701 86.62 376.914 86.62C377.19 86.62 377.433 86.6889 377.643 86.8266C377.853 86.9644 378.017 87.1597 378.135 87.4126C378.253 87.6654 378.312 87.9637 378.312 88.3075C378.312 88.6541 378.253 88.9545 378.135 89.2087C378.017 89.4616 377.854 89.6576 377.645 89.7968C377.436 89.9346 377.195 90.0035 376.923 90.0035C376.712 90.0035 376.544 89.9687 376.418 89.8991C376.291 89.8281 376.194 89.7478 376.126 89.6583C376.058 89.5674 376.005 89.4921 375.968 89.4325H375.925V91.1626H375.423ZM375.917 88.2989C375.917 88.5461 375.953 88.7641 376.026 88.9531C376.098 89.1406 376.204 89.2876 376.343 89.3941C376.482 89.4992 376.653 89.5518 376.854 89.5518C377.065 89.5518 377.24 89.4964 377.381 89.3856C377.523 89.2734 377.629 89.1228 377.7 88.9339C377.773 88.7435 377.809 88.5319 377.809 88.2989C377.809 88.0688 377.773 87.8614 377.702 87.6768C377.633 87.4907 377.527 87.3437 377.385 87.2357C377.244 87.1264 377.068 87.0717 376.854 87.0717C376.65 87.0717 376.478 87.1235 376.339 87.2272C376.2 87.3295 376.095 87.4729 376.023 87.6576C375.952 87.8408 375.917 88.0546 375.917 88.2989ZM381.397 87.3955L380.945 87.5234C380.917 87.4481 380.875 87.3749 380.82 87.3039C380.766 87.2315 380.692 87.1718 380.598 87.1249C380.504 87.0781 380.384 87.0546 380.238 87.0546C380.038 87.0546 379.871 87.1008 379.737 87.1931C379.605 87.284 379.539 87.3998 379.539 87.5404C379.539 87.6654 379.585 87.7641 379.675 87.8366C379.766 87.909 379.908 87.9694 380.102 88.0177L380.587 88.137C380.88 88.208 381.098 88.3167 381.242 88.463C381.385 88.6079 381.457 88.7947 381.457 89.0234C381.457 89.2109 381.403 89.3785 381.295 89.5262C381.188 89.6739 381.039 89.7904 380.847 89.8756C380.656 89.9609 380.433 90.0035 380.178 90.0035C379.845 90.0035 379.568 89.931 379.349 89.7862C379.131 89.6413 378.992 89.4296 378.934 89.1512L379.411 89.0319C379.457 89.208 379.543 89.3401 379.669 89.4282C379.797 89.5163 379.964 89.5603 380.17 89.5603C380.404 89.5603 380.59 89.5106 380.728 89.4112C380.867 89.3103 380.937 89.1896 380.937 89.0489C380.937 88.9353 380.897 88.8401 380.818 88.7634C380.738 88.6853 380.616 88.6271 380.451 88.5887L379.906 88.4609C379.606 88.3898 379.386 88.2798 379.245 88.1306C379.106 87.98 379.036 87.7918 379.036 87.566C379.036 87.3813 379.088 87.218 379.192 87.0759C379.297 86.9339 379.44 86.8224 379.62 86.7414C379.802 86.6604 380.008 86.62 380.238 86.62C380.562 86.62 380.816 86.691 381.001 86.833C381.187 86.9751 381.319 87.1626 381.397 87.3955ZM382.214 89.9353V86.6626H382.716V89.9353H382.214ZM382.469 86.1171C382.371 86.1171 382.287 86.0837 382.216 86.017C382.146 85.9502 382.111 85.87 382.111 85.7762C382.111 85.6825 382.146 85.6022 382.216 85.5354C382.287 85.4687 382.371 85.4353 382.469 85.4353C382.567 85.4353 382.651 85.4687 382.721 85.5354C382.792 85.6022 382.827 85.6825 382.827 85.7762C382.827 85.87 382.792 85.9502 382.721 86.017C382.651 86.0837 382.567 86.1171 382.469 86.1171ZM384.958 91.2308C384.716 91.2308 384.507 91.1995 384.332 91.137C384.157 91.0759 384.012 90.995 383.895 90.8941C383.78 90.7947 383.689 90.6881 383.62 90.5745L384.021 90.2933C384.066 90.3529 384.124 90.4211 384.194 90.4978C384.263 90.5759 384.358 90.6434 384.479 90.7002C384.601 90.7585 384.761 90.7876 384.958 90.7876C385.223 90.7876 385.441 90.7237 385.613 90.5958C385.784 90.468 385.87 90.2677 385.87 89.995V89.3302H385.828C385.791 89.3898 385.738 89.4637 385.67 89.5518C385.603 89.6384 385.507 89.7158 385.38 89.784C385.255 89.8508 385.086 89.8842 384.873 89.8842C384.609 89.8842 384.372 89.8217 384.162 89.6967C383.953 89.5717 383.787 89.3898 383.665 89.1512C383.544 88.9126 383.484 88.6228 383.484 88.2819C383.484 87.9467 383.543 87.6548 383.661 87.4062C383.779 87.1562 383.943 86.963 384.153 86.8266C384.363 86.6889 384.606 86.62 384.882 86.62C385.095 86.62 385.264 86.6555 385.389 86.7265C385.515 86.7961 385.612 86.8756 385.679 86.9651C385.747 87.0532 385.799 87.1256 385.836 87.1825H385.887V86.6626H386.373V90.0291C386.373 90.3103 386.309 90.539 386.182 90.7151C386.055 90.8927 385.885 91.0227 385.67 91.105C385.457 91.1889 385.22 91.2308 384.958 91.2308ZM384.941 89.4325C385.143 89.4325 385.314 89.3863 385.453 89.294C385.592 89.2016 385.698 89.0688 385.77 88.8955C385.843 88.7222 385.879 88.5148 385.879 88.2734C385.879 88.0376 385.843 87.8295 385.772 87.6491C385.701 87.4687 385.596 87.3273 385.457 87.2251C385.318 87.1228 385.146 87.0717 384.941 87.0717C384.728 87.0717 384.551 87.1256 384.409 87.2336C384.268 87.3416 384.162 87.4864 384.091 87.6683C384.022 87.8501 383.987 88.0518 383.987 88.2734C383.987 88.5006 384.022 88.7016 384.093 88.8764C384.166 89.0496 384.272 89.186 384.413 89.2854C384.555 89.3835 384.731 89.4325 384.941 89.4325Z\"\n    //     fill=\"black\"\n    //   />\n    //   <path\n    //     id=\"0_2\"\n    //     d=\"M367.781 81.9703C367.46 81.9703 367.186 81.8829 366.961 81.7082C366.735 81.5321 366.562 81.2771 366.443 80.9433C366.324 80.6081 366.264 80.2033 366.264 79.7288C366.264 79.2572 366.324 78.8545 366.443 78.5207C366.564 78.1855 366.737 77.9298 366.963 77.7537C367.19 77.5761 367.463 77.4873 367.781 77.4873C368.099 77.4873 368.371 77.5761 368.597 77.7537C368.824 77.9298 368.998 78.1855 369.117 78.5207C369.238 78.8545 369.298 79.2572 369.298 79.7288C369.298 80.2033 369.238 80.6081 369.119 80.9433C369 81.2771 368.827 81.5321 368.601 81.7082C368.375 81.8829 368.102 81.9703 367.781 81.9703ZM367.781 81.5016C368.099 81.5016 368.346 81.3481 368.522 81.0413C368.699 80.7345 368.787 80.297 368.787 79.7288C368.787 79.351 368.746 79.0293 368.665 78.7636C368.586 78.498 368.471 78.2956 368.32 78.1564C368.171 78.0172 367.991 77.9476 367.781 77.9476C367.466 77.9476 367.219 78.1031 367.042 78.4142C366.864 78.7239 366.775 79.1621 366.775 79.7288C366.775 80.1067 366.815 80.4277 366.895 80.6919C366.974 80.9561 367.088 81.1571 367.238 81.2949C367.388 81.4327 367.569 81.5016 367.781 81.5016Z\"\n    //     fill=\"black\"\n    //   />\n    //   <path\n    //     id=\"5_2\"\n    //     d=\"M361.684 68.9302C361.434 68.9302 361.209 68.8805 361.008 68.7811C360.808 68.6816 360.647 68.5453 360.527 68.372C360.406 68.1987 360.34 68.0012 360.329 67.7796H360.84C360.86 67.9771 360.949 68.1404 361.108 68.2697C361.269 68.3975 361.461 68.4615 361.684 68.4615C361.863 68.4615 362.022 68.4196 362.161 68.3357C362.302 68.2519 362.412 68.1369 362.491 67.9906C362.572 67.8428 362.613 67.6759 362.613 67.4899C362.613 67.2995 362.571 67.1298 362.487 66.9806C362.405 66.8301 362.291 66.7115 362.146 66.6248C362.001 66.5382 361.836 66.4941 361.65 66.4927C361.516 66.4913 361.379 66.5119 361.238 66.5545C361.098 66.5957 360.982 66.649 360.891 66.7143L360.397 66.6546L360.661 64.5069H362.928V64.9757H361.104L360.951 66.2626H360.976C361.066 66.1916 361.178 66.1326 361.313 66.0857C361.448 66.0389 361.589 66.0154 361.735 66.0154C362.002 66.0154 362.24 66.0794 362.449 66.2072C362.659 66.3336 362.824 66.5069 362.943 66.7271C363.064 66.9472 363.124 67.1987 363.124 67.4813C363.124 67.7597 363.062 68.0083 362.937 68.2271C362.813 68.4444 362.642 68.6163 362.425 68.7427C362.208 68.8677 361.961 68.9302 361.684 68.9302Z\"\n    //     fill=\"black\"\n    //   />\n    //   <path\n    //     id=\"10_2\"\n    //     d=\"M366.886 51.4669V55.8305H366.357V52.0208H366.332L365.266 52.7282V52.1913L366.357 51.4669H366.886ZM369.564 55.8902C369.243 55.8902 368.969 55.8028 368.743 55.6281C368.518 55.452 368.345 55.197 368.226 54.8632C368.106 54.5279 368.047 54.1231 368.047 53.6487C368.047 53.1771 368.106 52.7744 368.226 52.4406C368.346 52.1054 368.52 51.8497 368.746 51.6735C368.973 51.496 369.246 51.4072 369.564 51.4072C369.882 51.4072 370.154 51.496 370.38 51.6735C370.607 51.8497 370.78 52.1054 370.9 52.4406C371.02 52.7744 371.081 53.1771 371.081 53.6487C371.081 54.1231 371.021 54.5279 370.902 54.8632C370.783 55.197 370.61 55.452 370.384 55.6281C370.158 55.8028 369.885 55.8902 369.564 55.8902ZM369.564 55.4214C369.882 55.4214 370.129 55.268 370.305 54.9612C370.481 54.6544 370.569 54.2169 370.569 53.6487C370.569 53.2708 370.529 52.9491 370.448 52.6835C370.368 52.4179 370.253 52.2154 370.103 52.0762C369.954 51.937 369.774 51.8674 369.564 51.8674C369.248 51.8674 369.002 52.023 368.824 52.3341C368.647 52.6437 368.558 53.0819 368.558 53.6487C368.558 54.0265 368.598 54.3476 368.677 54.6118C368.757 54.876 368.871 55.077 369.02 55.2147C369.171 55.3525 369.352 55.4214 369.564 55.4214Z\"\n    //     fill=\"black\"\n    //   />\n    //   <path\n    //     id=\"15_2\"\n    //     d=\"M379.967 46.4514V50.8151H379.439V47.0054H379.413L378.348 47.7128V47.1759L379.439 46.4514H379.967ZM382.586 50.8747C382.336 50.8747 382.11 50.825 381.91 50.7256C381.71 50.6261 381.549 50.4898 381.429 50.3165C381.308 50.1432 381.242 49.9457 381.23 49.7242H381.742C381.762 49.9216 381.851 50.0849 382.01 50.2142C382.171 50.3421 382.363 50.406 382.586 50.406C382.765 50.406 382.924 50.3641 383.063 50.2803C383.204 50.1965 383.314 50.0814 383.393 49.9351C383.474 49.7874 383.515 49.6205 383.515 49.4344C383.515 49.244 383.473 49.0743 383.389 48.9251C383.306 48.7746 383.193 48.656 383.048 48.5693C382.903 48.4827 382.738 48.4386 382.552 48.4372C382.418 48.4358 382.281 48.4564 382.14 48.499C382 48.5402 381.884 48.5935 381.793 48.6588L381.299 48.5992L381.563 46.4514H383.83V46.9202H382.006L381.853 48.2071H381.878C381.968 48.1361 382.08 48.0771 382.215 48.0303C382.35 47.9834 382.49 47.9599 382.637 47.9599C382.904 47.9599 383.142 48.0239 383.351 48.1517C383.561 48.2781 383.726 48.4514 383.845 48.6716C383.966 48.8918 384.026 49.1432 384.026 49.4259C384.026 49.7043 383.963 49.9528 383.838 50.1716C383.715 50.3889 383.544 50.5608 383.327 50.6872C383.11 50.8122 382.863 50.8747 382.586 50.8747Z\"\n    //     fill=\"black\"\n    //   />\n    //   <path\n    //     id=\"20_2\"\n    //     d=\"M389.502 55.8305V55.447L390.942 53.8703C391.111 53.6856 391.25 53.5251 391.36 53.3887C391.469 53.251 391.55 53.1217 391.603 53.001C391.657 52.8788 391.684 52.751 391.684 52.6174C391.684 52.464 391.647 52.3312 391.573 52.219C391.5 52.1068 391.401 52.0201 391.275 51.9591C391.148 51.898 391.006 51.8674 390.848 51.8674C390.681 51.8674 390.534 51.9022 390.409 51.9718C390.286 52.04 390.19 52.1359 390.122 52.2595C390.055 52.3831 390.022 52.5279 390.022 52.6941H389.519C389.519 52.4385 389.578 52.214 389.696 52.0208C389.814 51.8277 389.974 51.6771 390.177 51.5691C390.382 51.4612 390.611 51.4072 390.865 51.4072C391.121 51.4072 391.348 51.4612 391.545 51.5691C391.743 51.6771 391.897 51.8227 392.01 52.0059C392.122 52.1892 392.178 52.393 392.178 52.6174C392.178 52.7779 392.149 52.9349 392.091 53.0883C392.034 53.2403 391.934 53.4101 391.792 53.5976C391.652 53.7836 391.456 54.0109 391.206 54.2794L390.226 55.3277V55.3618H392.255V55.8305H389.502ZM394.558 55.8902C394.237 55.8902 393.963 55.8028 393.738 55.6281C393.512 55.452 393.339 55.197 393.22 54.8632C393.101 54.5279 393.041 54.1231 393.041 53.6487C393.041 53.1771 393.101 52.7744 393.22 52.4406C393.341 52.1054 393.514 51.8497 393.74 51.6735C393.967 51.496 394.24 51.4072 394.558 51.4072C394.876 51.4072 395.148 51.496 395.374 51.6735C395.601 51.8497 395.775 52.1054 395.894 52.4406C396.015 52.7744 396.075 53.1771 396.075 53.6487C396.075 54.1231 396.015 54.5279 395.896 54.8632C395.777 55.197 395.604 55.452 395.378 55.6281C395.152 55.8028 394.879 55.8902 394.558 55.8902ZM394.558 55.4214C394.876 55.4214 395.123 55.268 395.299 54.9612C395.476 54.6544 395.564 54.2169 395.564 53.6487C395.564 53.2708 395.523 52.9491 395.442 52.6835C395.363 52.4179 395.248 52.2154 395.097 52.0762C394.948 51.937 394.768 51.8674 394.558 51.8674C394.243 51.8674 393.996 52.023 393.819 52.3341C393.641 52.6437 393.552 53.0819 393.552 53.6487C393.552 54.0265 393.592 54.3476 393.672 54.6118C393.751 54.876 393.865 55.077 394.015 55.2147C394.165 55.3525 394.346 55.4214 394.558 55.4214Z\"\n    //     fill=\"black\"\n    //   />\n    //   <path\n    //     id=\"25\"\n    //     d=\"M395.539 68.8705V68.487L396.98 66.9103C397.149 66.7257 397.288 66.5651 397.397 66.4288C397.507 66.291 397.588 66.1617 397.64 66.041C397.694 65.9188 397.721 65.791 397.721 65.6575C397.721 65.5041 397.684 65.3713 397.61 65.259C397.538 65.1468 397.439 65.0602 397.312 64.9991C397.186 64.938 397.044 64.9075 396.886 64.9075C396.718 64.9075 396.572 64.9423 396.447 65.0119C396.324 65.0801 396.228 65.1759 396.159 65.2995C396.093 65.4231 396.059 65.568 396.059 65.7342H395.556C395.556 65.4785 395.615 65.2541 395.733 65.0609C395.851 64.8677 396.012 64.7171 396.215 64.6092C396.419 64.5012 396.649 64.4472 396.903 64.4472C397.159 64.4472 397.385 64.5012 397.583 64.6092C397.78 64.7171 397.935 64.8627 398.047 65.046C398.159 65.2292 398.216 65.433 398.216 65.6575C398.216 65.818 398.186 65.9749 398.128 66.1284C398.071 66.2803 397.972 66.4501 397.83 66.6376C397.689 66.8237 397.494 67.0509 397.244 67.3194L396.264 68.3677V68.4018H398.292V68.8705H395.539ZM400.536 68.9302C400.286 68.9302 400.061 68.8805 399.86 68.7811C399.66 68.6816 399.5 68.5453 399.379 68.372C399.258 68.1987 399.192 68.0012 399.181 67.7796H399.692C399.712 67.9771 399.801 68.1404 399.961 68.2697C400.121 68.3975 400.313 68.4615 400.536 68.4615C400.715 68.4615 400.874 68.4196 401.013 68.3357C401.154 68.2519 401.264 68.1369 401.343 67.9906C401.424 67.8428 401.465 67.6759 401.465 67.4899C401.465 67.2995 401.423 67.1298 401.339 66.9806C401.257 66.8301 401.143 66.7115 400.998 66.6248C400.853 66.5382 400.688 66.4941 400.502 66.4927C400.368 66.4913 400.231 66.5119 400.091 66.5545C399.95 66.5957 399.834 66.649 399.743 66.7143L399.249 66.6546L399.513 64.5069H401.78V64.9757H399.956L399.803 66.2626H399.828C399.918 66.1916 400.03 66.1326 400.165 66.0857C400.3 66.0389 400.441 66.0154 400.587 66.0154C400.854 66.0154 401.092 66.0794 401.301 66.2072C401.511 66.3336 401.676 66.5069 401.795 66.7271C401.916 66.9472 401.976 67.1987 401.976 67.4813C401.976 67.7597 401.914 68.0083 401.789 68.2271C401.665 68.4444 401.495 68.6163 401.277 68.7427C401.06 68.8677 400.813 68.9302 400.536 68.9302Z\"\n    //     fill=\"black\"\n    //   />\n    //   <path\n    //     id=\"30\"\n    //     d=\"M390.976 81.9703C390.695 81.9703 390.444 81.922 390.224 81.8254C390.005 81.7288 389.831 81.5946 389.702 81.4227C389.574 81.2494 389.505 81.0484 389.493 80.8197H390.03C390.042 80.9604 390.09 81.0818 390.175 81.1841C390.26 81.2849 390.372 81.3631 390.51 81.4185C390.647 81.4739 390.8 81.5016 390.968 81.5016C391.155 81.5016 391.321 81.4689 391.466 81.4035C391.611 81.3382 391.725 81.2473 391.807 81.1308C391.89 81.0143 391.931 80.8794 391.931 80.726C391.931 80.5655 391.891 80.4241 391.811 80.302C391.732 80.1784 391.615 80.0818 391.462 80.0122C391.309 79.9426 391.121 79.9078 390.9 79.9078H390.55V79.4391H390.9C391.073 79.4391 391.225 79.4078 391.356 79.3453C391.488 79.2828 391.591 79.1947 391.664 79.0811C391.74 78.9675 391.777 78.8339 391.777 78.6805C391.777 78.5328 391.745 78.4043 391.679 78.2949C391.614 78.1855 391.522 78.1003 391.402 78.0392C391.284 77.9781 391.145 77.9476 390.985 77.9476C390.834 77.9476 390.692 77.9753 390.559 78.0307C390.427 78.0847 390.319 78.1635 390.235 78.2672C390.151 78.3695 390.106 78.493 390.098 78.6379H389.587C389.596 78.4092 389.664 78.2089 389.794 78.0371C389.923 77.8638 390.092 77.7288 390.301 77.6322C390.511 77.5356 390.742 77.4873 390.993 77.4873C391.263 77.4873 391.495 77.542 391.688 77.6514C391.881 77.7594 392.03 77.9021 392.133 78.0797C392.237 78.2572 392.289 78.449 392.289 78.655C392.289 78.9007 392.224 79.1102 392.095 79.2835C391.967 79.4568 391.793 79.5768 391.573 79.6436V79.6777C391.848 79.7231 392.064 79.8403 392.218 80.0293C392.373 80.2168 392.451 80.449 392.451 80.726C392.451 80.9632 392.386 81.1763 392.257 81.3652C392.129 81.5527 391.954 81.7004 391.733 81.8084C391.511 81.9163 391.259 81.9703 390.976 81.9703ZM394.745 81.9703C394.424 81.9703 394.151 81.8829 393.925 81.7082C393.699 81.5321 393.527 81.2771 393.407 80.9433C393.288 80.6081 393.228 80.2033 393.228 79.7288C393.228 79.2572 393.288 78.8545 393.407 78.5207C393.528 78.1855 393.701 77.9298 393.927 77.7537C394.155 77.5761 394.427 77.4873 394.745 77.4873C395.064 77.4873 395.336 77.5761 395.561 77.7537C395.789 77.9298 395.962 78.1855 396.081 78.5207C396.202 78.8545 396.262 79.2572 396.262 79.7288C396.262 80.2033 396.203 80.6081 396.083 80.9433C395.964 81.2771 395.792 81.5321 395.566 81.7082C395.34 81.8829 395.066 81.9703 394.745 81.9703ZM394.745 81.5016C395.064 81.5016 395.311 81.3481 395.487 81.0413C395.663 80.7345 395.751 80.297 395.751 79.7288C395.751 79.351 395.711 79.0293 395.63 78.7636C395.55 78.498 395.435 78.2956 395.284 78.1564C395.135 78.0172 394.956 77.9476 394.745 77.9476C394.43 77.9476 394.184 78.1031 394.006 78.4142C393.829 78.7239 393.74 79.1621 393.74 79.7288C393.74 80.1067 393.78 80.4277 393.859 80.6919C393.939 80.9561 394.053 81.1571 394.202 81.2949C394.353 81.4327 394.534 81.5016 394.745 81.5016Z\"\n    //     fill=\"black\"\n    //   />\n    //   <path\n    //     id=\"needle\"\n    //     class=\"gauge-needle\"\n    //     transform={`rotate(${constrain(needleAngle(), -135, 0)} 381 66.8829)`}\n    //     d=\"M381 72.9014C381.107 72.3497 381.196 71.798 381.269 71.2463C381.423 70.0723 381.5 68.8983 381.5 67.7244C381.5 63.5573 381.5 59.3902 381.5 55.2231C381.5 50.6336 381.367 46.0442 381.102 41.4548C381.07 40.9031 381.036 40.3514 381 39.7997C380.964 40.3514 380.93 40.9031 380.898 41.4548C380.633 46.0442 380.5 50.6336 380.5 55.2231C380.5 59.3902 380.5 63.5573 380.5 67.7244C380.5 68.8983 380.577 70.0723 380.731 71.2463C380.804 71.798 380.893 72.3497 381 72.9014Z\"\n    //     fill=\"#E00000\"\n    //   />\n    //   <circle\n    //     id=\"gauge\"\n    //     cx=\"381\"\n    //     cy=\"66.8829\"\n    //     r=\".5\"\n    //     fill=\"#D9D9D9\"\n    //     stroke=\"black\"\n    //     stroke-width=\"0.4\"\n    //   />\n    // </g>\n)};\n\nexport default Gauge;","import \"./BallValve.css\";\nimport { createSignal, type Component } from \"solid-js\";\n\ninterface BallValveProps {\n  onToggle?: (open: boolean) => void;\n}\n\nexport const BallValve: Component<BallValveProps> = ({ onToggle }) => {\n  // State\n  const [isOpen, setIsOpen] = createSignal(false);\n\n  // Rotation transform\n  const rotation = () => `rotate(${isOpen() ? -90 : 0} 75 278)`;\n\n  // Toggle function\n  const toggleValve = () => {\n    const open = !isOpen();\n    setIsOpen(open);\n    onToggle?.(open);\n  };\n\n  // Render\n  return (\n    <g id=\"ballValve\" transform=\"translate(15, 0)\">\n      <g id=\"body_7\">\n        <rect\n          id=\"Rectangle 48_8\"\n          x=\"60.5\"\n          y=\"266.5\"\n          width=\"29\"\n          height=\"23\"\n          fill=\"url(#paint80_linear_6_626)\"\n          stroke=\"black\"\n        />\n        <rect\n          id=\"Rectangle 49_7\"\n          x=\"87.5\"\n          y=\"263.5\"\n          width=\"14\"\n          height=\"29\"\n          rx=\"0.5\"\n          fill=\"url(#paint81_linear_6_626)\"\n          stroke=\"black\"\n        />\n        <rect\n          id=\"Rectangle 50_8\"\n          x=\"48.5\"\n          y=\"263.5\"\n          width=\"14\"\n          height=\"29\"\n          rx=\"0.5\"\n          fill=\"url(#paint82_linear_6_626)\"\n          stroke=\"black\"\n        />\n      </g>\n      <g class=\"valveHandle drag-exempt\" onclick={toggleValve} transform={rotation()}>\n        <rect\n          id=\"Rectangle 51_8\"\n          x=\"69.5\"\n          y=\"266.5\"\n          width=\"11\"\n          height=\"17\"\n          rx=\"0.5\"\n          fill=\"#D9D9D9\"\n          stroke=\"black\"\n        />\n        <path\n          id=\"steamValveCenter\"\n          d=\"M76.3565 280.348H73.6445L72.2891 278L73.6445 275.652H76.3565L77.7119 278L76.3565 280.348Z\"\n          fill=\"#CECECE\"\n          stroke=\"black\"\n          stroke-width=\"0.5\"\n        />\n        <path\n          id=\"Rectangle 52_5\"\n          d=\"M72 189.5H78C81.0375 189.5 83.5 191.962 83.5 195V267C83.5 267.828 82.8284 268.5 82 268.5H68C67.1716 268.5 66.5 267.828 66.5 267V195C66.5 191.962 68.9624 189.5 72 189.5Z\"\n          fill=\"#EE6300\"\n          stroke=\"black\"\n        />\n      </g>\n    </g>\n)};\n\nexport default BallValve;","import { getAngleFromDown, getSVGCoords } from \"../../ts/helpers\";\nimport \"./GlobeValve.css\";\nimport { createSignal, type Component } from \"solid-js\";\n\ninterface GlobeValveProps {\n  onLiftChange?: (lift: number) => void;\n}\n\nexport const GlobeValve: Component<GlobeValveProps> = ({ onLiftChange }) => {\n  const maxAngle = -720; // Degrees for fully open\n\n  // State\n  let [currentAngle, setCurrentAngle] = createSignal(0); // in pixels, range from 0 (closed) to 20 (fully open)\n  let isDragging = false;\n  let prevTh = 0;\n\n  // Begin drag\n  const beginDrag = (e: MouseEvent) => {\n    e.preventDefault();\n    isDragging = true;\n    const svgMozCoords = getSVGCoords(e);\n    prevTh = getAngleFromDown({x:498, y:629}, {x:svgMozCoords.x, y:svgMozCoords.y});\n    document.addEventListener(\"pointermove\", onDrag);\n    document.addEventListener(\"pointerup\", endDrag);\n  };\n\n  // On drag\n  const onDrag = (e: MouseEvent) => {\n    if (!isDragging) return;\n\n    // Calculate angle change\n    const angle = currentAngle();\n    const svgMozCoords = getSVGCoords(e);\n    const th = getAngleFromDown({x:498, y:629}, {x:svgMozCoords.x, y:svgMozCoords.y});\n    let deltaTh = th - prevTh; // Positive if moving up\n    if (Math.abs(deltaTh) > 180) {\n      // Handle wrap-around\n      if (deltaTh > 0) {\n        // Moving from 359 to 0\n        deltaTh -= 360;\n      } else {\n        // Moving from 0 to 359\n        deltaTh += 360;\n      }\n    }\n\n    // Update angle with clamping\n    let newAngle = angle + deltaTh;\n    newAngle = Math.min(0, Math.max(maxAngle, newAngle)); // Clamp between 0 and 20\n\n    // Update state and callback if changed\n    if (newAngle !== angle) {\n      setCurrentAngle(newAngle);\n      onLiftChange?.(newAngle / maxAngle); // Normalize to [0, 1]\n    }\n    \n    // Update previous angle\n    prevTh = th;\n  };\n\n  // End drag\n  const endDrag = () => {\n    isDragging = false;\n    document.removeEventListener(\"pointermove\", onDrag);\n    document.removeEventListener(\"pointerup\", endDrag);\n  };\n\n  // Render\n  return (\n    <g id=\"globeValve\">\n      <g id=\"body_8\">\n        <rect\n          id=\"Rectangle 48_9\"\n          x=\"509.5\"\n          y=\"614.5\"\n          width=\"29\"\n          height=\"23\"\n          transform=\"rotate(90 509.5 614.5)\"\n          fill=\"url(#paint83_linear_6_626)\"\n          stroke=\"black\"\n        />\n        <rect\n          id=\"Rectangle 49_8\"\n          x=\"512.5\"\n          y=\"641.5\"\n          width=\"14\"\n          height=\"29\"\n          rx=\"0.5\"\n          transform=\"rotate(90 512.5 641.5)\"\n          fill=\"url(#paint84_linear_6_626)\"\n          stroke=\"black\"\n        />\n        <rect\n          id=\"Rectangle 50_9\"\n          x=\"512.5\"\n          y=\"602.5\"\n          width=\"14\"\n          height=\"29\"\n          rx=\"0.5\"\n          transform=\"rotate(90 512.5 602.5)\"\n          fill=\"url(#paint85_linear_6_626)\"\n          stroke=\"black\"\n        />\n      </g>\n      <g id=\"feedValve\" class=\"drag-exempt globeValveHandle\" onpointerdown={beginDrag} transform={`rotate(${currentAngle()} 498 629)`}>\n        <circle cx=\"498\" cy=\"629\" r=\"20\" fill=\"red\" opacity={0} />\n        <path\n          id=\"valve\"\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M514.391 610.729C515.395 610.809 516.192 611.606 516.272 612.61L516.901 620.488C516.936 620.919 517.104 621.327 517.384 621.656L522.51 627.67C523.164 628.437 523.164 629.565 522.51 630.332L517.384 636.346C517.105 636.675 516.936 637.083 516.901 637.514L516.272 645.392C516.192 646.396 515.395 647.193 514.391 647.273L506.513 647.902C506.083 647.936 505.674 648.105 505.346 648.385L499.332 653.511L499.183 653.626C498.424 654.161 497.388 654.123 496.67 653.511L490.655 648.385C490.327 648.105 489.918 647.936 489.488 647.902L481.61 647.273L481.424 647.25C480.57 647.103 479.898 646.431 479.751 645.577L479.729 645.391L479.1 637.513C479.07 637.137 478.937 636.777 478.716 636.473L478.617 636.346L473.49 630.332C472.837 629.565 472.837 628.437 473.49 627.67L478.617 621.656C478.861 621.368 479.022 621.019 479.081 620.648L479.1 620.488L479.729 612.61C479.809 611.606 480.606 610.809 481.61 610.729L489.488 610.1C489.864 610.07 490.224 609.937 490.528 609.717L490.655 609.617L496.669 604.491C497.436 603.837 498.565 603.837 499.331 604.491L505.346 609.617C505.633 609.862 505.982 610.022 506.353 610.082L506.513 610.1L514.391 610.729ZM483.148 636.818C483.154 636.861 483.161 636.903 483.166 636.946L483.19 637.188L483.519 641.306L487.546 637.279C487.094 636.709 486.695 636.112 486.349 635.493L483.148 636.818ZM491.508 640.651C490.889 640.306 490.292 639.907 489.722 639.455L485.696 643.482L489.814 643.812L490.055 643.835C490.098 643.84 490.14 643.846 490.183 643.852L491.508 640.651ZM479.06 630.539L481.74 633.685C481.82 633.779 481.897 633.876 481.971 633.975L485.173 632.647C484.977 631.955 484.84 631.25 484.758 630.539L479.06 630.539ZM496.462 642.242C495.751 642.16 495.046 642.024 494.353 641.828L493.027 645.03C493.125 645.104 493.222 645.181 493.316 645.262L496.462 647.941L496.462 642.242ZM481.97 624.026C481.944 624.061 481.919 624.096 481.893 624.13L481.74 624.317L479.058 627.462L484.758 627.462C484.841 626.751 484.976 626.045 485.173 625.353L481.97 624.026ZM501.648 641.828C500.955 642.024 500.25 642.162 499.539 642.244L499.54 647.941L502.685 645.262C502.779 645.181 502.876 645.104 502.974 645.03L501.648 641.828ZM498.795 631.971C498.274 632.109 497.727 632.109 497.206 631.971L491.917 637.261C495.523 639.924 500.478 639.924 504.084 637.261L498.795 631.971ZM489.741 622.917C487.078 626.523 487.078 631.478 489.741 635.084L495.03 629.795C494.892 629.275 494.892 628.727 495.03 628.207L489.741 622.917ZM483.189 620.814C483.18 620.937 483.165 621.06 483.148 621.182L486.349 622.508C486.695 621.888 487.094 621.291 487.546 620.722L483.518 616.694L483.189 620.814ZM506.279 639.455C505.709 639.907 505.112 640.306 504.493 640.651L505.819 643.853C505.941 643.836 506.064 643.822 506.187 643.812L510.306 643.483L506.279 639.455ZM490.182 614.147C490.06 614.165 489.937 614.18 489.814 614.19L485.694 614.518L489.722 618.547C490.292 618.095 490.889 617.694 491.509 617.348L490.182 614.147ZM500.971 628.206C501.11 628.727 501.109 629.275 500.97 629.795L506.26 635.085C508.923 631.478 508.924 626.523 506.261 622.916L500.971 628.206ZM504.084 620.741C500.478 618.078 495.523 618.078 491.917 620.741L497.206 626.031C497.727 625.892 498.275 625.892 498.795 626.03L504.084 620.741ZM509.652 635.493C509.306 636.112 508.907 636.709 508.455 637.278L512.482 641.305L512.811 637.188C512.821 637.064 512.836 636.941 512.853 636.819L509.652 635.493ZM493.316 612.74C493.222 612.82 493.124 612.897 493.026 612.971L494.353 616.172C495.046 615.976 495.751 615.839 496.461 615.757L496.461 610.058L493.316 612.74ZM511.244 630.539C511.162 631.249 511.024 631.955 510.828 632.647L514.03 633.974C514.105 633.876 514.181 633.779 514.261 633.685L516.941 630.539L511.244 630.539ZM502.974 612.97C502.876 612.896 502.779 612.82 502.685 612.74L499.54 610.058L499.539 615.758C500.249 615.84 500.955 615.976 501.648 616.173L502.974 612.97ZM510.828 625.353C511.024 626.046 511.16 626.751 511.243 627.462L516.942 627.461L514.261 624.317C514.181 624.222 514.105 624.125 514.03 624.026L510.828 625.353ZM506.187 614.19C506.064 614.18 505.941 614.165 505.819 614.147L504.493 617.349C505.112 617.695 505.71 618.094 506.279 618.546L510.307 614.519L506.187 614.19ZM508.455 620.722C508.907 621.292 509.307 621.889 509.652 622.508L512.853 621.182C512.836 621.06 512.821 620.937 512.811 620.814L512.483 616.695L508.455 620.722Z\"\n          fill=\"#FF3B3B\"\n          stroke=\"black\"\n          stroke-linejoin=\"round\"\n        />\n        <path\n          id=\"feedValveCenter\"\n          d=\"M496.518 629.855V628.146L498 627.289L499.483 628.146V629.855L498 630.712L496.518 629.855Z\"\n          fill=\"#CECECE\"\n          stroke=\"black\"\n          stroke-width=\"0.5\"\n        />\n      </g>\n    </g>\n)};\n\nexport default GlobeValve;","import { createEffect, createSignal, onMount, type Accessor, type Component, type Setter } from \"solid-js\";\nimport \"./Beaker.css\"\nimport { constrain, getSVGCoords } from \"../../ts/helpers\";\nimport { Portal } from \"solid-js/web\";\nimport { createMemo } from \"solid-js\";\n\ntype SignalT = [get: Accessor<number>, set: Setter<number>];\n\n// Struct to keep the state for the beaker\nexport type RectState = {\n  idx: number;\n  x: number;\n  y: number;\n  value: number;\n  blocking: number | null; // stacking order\n};\n\ninterface BeakerProps {\n  idx: number;\n  initialX: number;\n  initialY: number;\n  value: number;\n  blocking: number | null;\n  update: (idx: number, patch: Partial<RectState>) => void;\n  block: (which: number, value: SignalT | null) => void;\n  isBlocked: () => Array<SignalT | null>;\n  valueSignal?: SignalT;\n};\n\nconst minY = 550;\n\nexport const Beaker: Component<BeakerProps> = (props) => {\n  // local position signals to make dragging snappy\n  const [x, setX] = createSignal(props.initialX);\n  const [y, setY] = createSignal(props.initialY);\n  const [modalDisplay, setModalDisplay] = createSignal(false);\n  const [overflow, setOverflow] = createSignal(false);\n  // If a stable valueSignal was provided by the parent, use it. Otherwise create a local one.\n  const local = props.valueSignal ?? createSignal(props.value);\n  const [val, setVal] = local;\n\n  let [blocked, setBlocked] = createSignal<number | null> (props.blocking);\n\n  // Anytime the volume is set, check if it was overflowed\n  let overflowTimer: number | null = null;\n  createEffect(() => {\n    if (val() > 1151 && blocked() !== null) {\n      // Overflowing\n      setOverflow(true);\n      setVal(1149);\n    }\n    if (overflow()) {\n      // Set/reset a timer to cancel the overflowing\n      if (overflowTimer !== null) clearTimeout(overflowTimer);\n      overflowTimer = setTimeout(() => { setOverflow(false); overflowTimer = null; }, 100);\n    }\n  });\n\n  // Coordinate logic wrapper so we can place on scale, etc\n  const setCoords = (x: number, y: number) => {\n    // Ensure the beaker is always on the table\n    x = constrain(x, 0, 1043);\n    y = constrain(y, minY, 655);\n    const b = blocked();\n\n    // Left drain\n    if (x > 30 && x < 200 && y < 610) {\n        // If left drain is blocked, do nothing\n        if (props.isBlocked()[0] !== null) return;\n\n        // Set position\n        x = 112;\n        y = 576;\n        // Set blocking\n        setBlocked(0);\n        props.block(0, [val, setVal]);\n    }\n    // Scale\n    else if (x > 443 && x < 713) {\n      // See if something is on the first beaker slot\n      if ((props.isBlocked()[1] === null && b !== 2) || b === 1) {\n        // Set position\n        x = 568;\n        y = 540;\n        // Set blocking\n        if (b !== 1) setBlocked(1);\n        props.block(1, [val, setVal]);\n      }\n      // First slot is blocked; second must be full\n      else {\n        // Set position\n        x = 598;\n        y = 555;\n        // Set blocking\n        setBlocked(2);\n        props.block(2, [val, setVal]);\n      }\n    }\n    // Right drain\n    else if (x > 840 && x < 1010 && y < 610) {\n        // If right drain is blocked, do \n        if (props.isBlocked()[3] !== null) return;\n\n        // Set position\n        x = 922;\n        y = 576;\n        // Set blocking\n        setBlocked(3);\n        props.block(3, [val, setVal]);\n    }\n    // None\n    else if (b !== null) {\n      // console.log(`Unblocking trigger`)\n      props.block(b, null);\n      setBlocked(null);\n    }\n\n    // Update the x and y coordinates\n    setX(x);\n    setY(y);\n  }\n\n  // Drag events\n  const start = (e: MouseEvent) => {\n    e.preventDefault();\n    const coords = getSVGCoords(e);\n    let mozX = x() - coords.x;\n    let mozY = y() - coords.y;\n    \n    const onMove = (ev: MouseEvent) => {\n      const coords = getSVGCoords(ev);\n      const dx = coords.x - x();\n      const dy = coords.y - y();\n\n      const newX = x() + dx + mozX;\n      const newY = y() + dy + mozY;\n      setCoords(newX, newY);\n      props.update(props.idx, { x: x(), y: y(), blocking: blocked() });\n    };\n\n    const end = () => {\n      // Remove event listeners\n      window.removeEventListener(\"pointermove\", onMove);\n      window.removeEventListener(\"pointerup\", end);\n      if (blocked() === null) setModalDisplay(true);\n    };\n\n    window.addEventListener(\"pointermove\", onMove);\n    window.addEventListener(\"pointerup\", end);\n  };\n\n  onMount(() => {\n    setCoords(props.initialX, props.initialY);\n  });\n\n  let ref!: SVGGElement;\n\n  return (<>\n    <g class=\"beaker drag-exempt-slippery\" transform={`translate(${x()}, ${y()})`} onPointerDown={start}>\n      <BeakerFill vol={val} />\n      <g id=\"beakerBody\" ref={ref}>\n      <g id=\"Rectangle 3\">\n      <mask id=\"path-2-inside-1_4_7\" fill=\"white\">\n      <path d=\"M1 2H88V116C88 119.314 85.3137 122 82 122H7C3.68629 122 1 119.314 1 116V2Z\"/>\n      </mask>\n      <path d=\"M1 2H88H1ZM92 116C92 121.523 87.5229 126 82 126H7C1.47715 126 -3 121.523 -3 116H5C5 117.105 5.89543 118 7 118H82C83.1046 118 84 117.105 84 116H92ZM7 126C1.47715 126 -3 121.523 -3 116V2H5V116C5 117.105 5.89543 118 7 118V126ZM92 2V116C92 121.523 87.5229 126 82 126V118C83.1046 118 84 117.105 84 116V2H92Z\" fill=\"#D5D5D5\" mask=\"url(#path-2-inside-1_4_7)\"/>\n      </g>\n      <path id=\"Rectangle 1\" d=\"M87.5 2.5V116C87.5 119.038 85.0376 121.5 82 121.5H7C3.96243 121.5 1.5 119.038 1.5 116V2.5H87.5Z\" fill=\"url(#paint0_linear_4_7)\" fill-opacity=\"0.2\" stroke=\"black\"/>\n      <rect id=\"Rectangle 2\" x=\"0.5\" y=\"0.5\" width=\"89\" height=\"3\" rx=\"1.5\" fill=\"#D5D5D5\" stroke=\"black\"/>\n      </g>\n      <g id=\"ticks\">\n      <path d=\"M44.9858 15.6364V20H44.4574V16.1903H44.4318L43.3665 16.8977V16.3608L44.4574 15.6364H44.9858Z\" fill=\"black\"/>\n      <path d=\"M47.6641 20.0597C47.343 20.0597 47.0696 19.9723 46.8438 19.7976C46.6179 19.6215 46.4453 19.3665 46.326 19.0327C46.2067 18.6974 46.147 18.2926 46.147 17.8182C46.147 17.3466 46.2067 16.9439 46.326 16.6101C46.4467 16.2749 46.62 16.0192 46.8459 15.843C47.0732 15.6655 47.3459 15.5767 47.6641 15.5767C47.9822 15.5767 48.2543 15.6655 48.4801 15.843C48.7074 16.0192 48.8807 16.2749 49 16.6101C49.1207 16.9439 49.1811 17.3466 49.1811 17.8182C49.1811 18.2926 49.1214 18.6974 49.0021 19.0327C48.8828 19.3665 48.7102 19.6215 48.4844 19.7976C48.2585 19.9723 47.9851 20.0597 47.6641 20.0597ZM47.6641 19.5909C47.9822 19.5909 48.2294 19.4375 48.4055 19.1307C48.5817 18.8239 48.6697 18.3864 48.6697 17.8182C48.6697 17.4403 48.6293 17.1186 48.5483 16.853C48.4688 16.5874 48.3537 16.3849 48.2031 16.2457C48.054 16.1065 47.8743 16.0369 47.6641 16.0369C47.3487 16.0369 47.1023 16.1925 46.9247 16.5036C46.7472 16.8132 46.6584 17.2514 46.6584 17.8182C46.6584 18.196 46.6982 18.517 46.7777 18.7813C46.8572 19.0455 46.9716 19.2465 47.1207 19.3842C47.2713 19.522 47.4524 19.5909 47.6641 19.5909Z\" fill=\"black\"/>\n      <path d=\"M51.4141 20.0597C51.093 20.0597 50.8196 19.9723 50.5938 19.7976C50.3679 19.6215 50.1953 19.3665 50.076 19.0327C49.9567 18.6974 49.897 18.2926 49.897 17.8182C49.897 17.3466 49.9567 16.9439 50.076 16.6101C50.1967 16.2749 50.37 16.0192 50.5959 15.843C50.8232 15.6655 51.0959 15.5767 51.4141 15.5767C51.7322 15.5767 52.0043 15.6655 52.2301 15.843C52.4574 16.0192 52.6307 16.2749 52.75 16.6101C52.8707 16.9439 52.9311 17.3466 52.9311 17.8182C52.9311 18.2926 52.8714 18.6974 52.7521 19.0327C52.6328 19.3665 52.4602 19.6215 52.2344 19.7976C52.0085 19.9723 51.7351 20.0597 51.4141 20.0597ZM51.4141 19.5909C51.7322 19.5909 51.9794 19.4375 52.1555 19.1307C52.3317 18.8239 52.4197 18.3864 52.4197 17.8182C52.4197 17.4403 52.3793 17.1186 52.2983 16.853C52.2188 16.5874 52.1037 16.3849 51.9531 16.2457C51.804 16.1065 51.6243 16.0369 51.4141 16.0369C51.0987 16.0369 50.8523 16.1925 50.6747 16.5036C50.4972 16.8132 50.4084 17.2514 50.4084 17.8182C50.4084 18.196 50.4482 18.517 50.5277 18.7813C50.6072 19.0455 50.7216 19.2465 50.8707 19.3842C51.0213 19.522 51.2024 19.5909 51.4141 19.5909Z\" fill=\"black\"/>\n      <path d=\"M55.1641 20.0597C54.843 20.0597 54.5696 19.9723 54.3438 19.7976C54.1179 19.6215 53.9453 19.3665 53.826 19.0327C53.7067 18.6974 53.647 18.2926 53.647 17.8182C53.647 17.3466 53.7067 16.9439 53.826 16.6101C53.9467 16.2749 54.12 16.0192 54.3459 15.843C54.5732 15.6655 54.8459 15.5767 55.1641 15.5767C55.4822 15.5767 55.7543 15.6655 55.9801 15.843C56.2074 16.0192 56.3807 16.2749 56.5 16.6101C56.6207 16.9439 56.6811 17.3466 56.6811 17.8182C56.6811 18.2926 56.6214 18.6974 56.5021 19.0327C56.3828 19.3665 56.2102 19.6215 55.9844 19.7976C55.7585 19.9723 55.4851 20.0597 55.1641 20.0597ZM55.1641 19.5909C55.4822 19.5909 55.7294 19.4375 55.9055 19.1307C56.0817 18.8239 56.1697 18.3864 56.1697 17.8182C56.1697 17.4403 56.1293 17.1186 56.0483 16.853C55.9688 16.5874 55.8537 16.3849 55.7031 16.2457C55.554 16.1065 55.3743 16.0369 55.1641 16.0369C54.8487 16.0369 54.6023 16.1925 54.4247 16.5036C54.2472 16.8132 54.1584 17.2514 54.1584 17.8182C54.1584 18.196 54.1982 18.517 54.2777 18.7813C54.3572 19.0455 54.4716 19.2465 54.6207 19.3842C54.7713 19.522 54.9524 19.5909 55.1641 19.5909Z\" fill=\"black\"/>\n      <path d=\"M59.1868 20V16.7273H59.6726V17.2386H59.7152C59.7834 17.0639 59.8935 16.9283 60.0455 16.8317C60.1974 16.7337 60.38 16.6847 60.593 16.6847C60.8089 16.6847 60.9886 16.7337 61.1321 16.8317C61.277 16.9283 61.3899 17.0639 61.4709 17.2386H61.505C61.5888 17.0696 61.7145 16.9354 61.8821 16.8359C62.0497 16.7351 62.2507 16.6847 62.4851 16.6847C62.7777 16.6847 63.017 16.7763 63.2031 16.9595C63.3892 17.1413 63.4822 17.4247 63.4822 17.8097V20H62.9794V17.8097C62.9794 17.5682 62.9134 17.3956 62.7812 17.2919C62.6491 17.1882 62.4936 17.1364 62.3146 17.1364C62.0845 17.1364 61.9063 17.206 61.7798 17.3452C61.6534 17.483 61.5902 17.6577 61.5902 17.8693V20H61.0788V17.7585C61.0788 17.5724 61.0185 17.4226 60.8977 17.309C60.777 17.1939 60.6214 17.1364 60.4311 17.1364C60.3004 17.1364 60.1783 17.1712 60.0646 17.2408C59.9524 17.3104 59.8615 17.407 59.7919 17.5305C59.7237 17.6527 59.6896 17.794 59.6896 17.9545V20H59.1868Z\" fill=\"black\"/>\n      <path d=\"M64.4698 20V15.6364H64.9982V19.5313H67.0266V20H64.4698Z\" fill=\"black\"/>\n      <path d=\"M46.8494 40.0597C46.5568 40.0597 46.2983 40.0078 46.0739 39.9041C45.8509 39.799 45.6768 39.6548 45.5518 39.4716C45.4268 39.2869 45.3651 39.0767 45.3665 38.8409C45.3651 38.6563 45.4013 38.4858 45.4751 38.3295C45.549 38.1719 45.6499 38.0405 45.7777 37.9354C45.907 37.8288 46.0511 37.7614 46.2102 37.733V37.7074C46.0014 37.6534 45.8352 37.5362 45.7116 37.3558C45.5881 37.174 45.527 36.9673 45.5284 36.7358C45.527 36.5142 45.5831 36.3161 45.6967 36.1413C45.8104 35.9666 45.9666 35.8288 46.1655 35.728C46.3658 35.6271 46.5938 35.5767 46.8494 35.5767C47.1023 35.5767 47.3281 35.6271 47.527 35.728C47.7259 35.8288 47.8821 35.9666 47.9957 36.1413C48.1108 36.3161 48.169 36.5142 48.1705 36.7358C48.169 36.9673 48.1058 37.174 47.9808 37.3558C47.8572 37.5362 47.6932 37.6534 47.4886 37.7074V37.733C47.6463 37.7614 47.7884 37.8288 47.9148 37.9354C48.0412 38.0405 48.142 38.1719 48.2173 38.3295C48.2926 38.4858 48.331 38.6563 48.3324 38.8409C48.331 39.0767 48.267 39.2869 48.1406 39.4716C48.0156 39.6548 47.8416 39.799 47.6186 39.9041C47.397 40.0078 47.1406 40.0597 46.8494 40.0597ZM46.8494 39.5909C47.0469 39.5909 47.2173 39.5589 47.3608 39.495C47.5043 39.4311 47.6151 39.3409 47.6932 39.2244C47.7713 39.108 47.8111 38.9716 47.8125 38.8153C47.8111 38.6506 47.7685 38.505 47.6847 38.3786C47.6009 38.2521 47.4865 38.1527 47.3416 38.0803C47.1982 38.0078 47.0341 37.9716 46.8494 37.9716C46.6634 37.9716 46.4972 38.0078 46.3509 38.0803C46.206 38.1527 46.0916 38.2521 46.0078 38.3786C45.9254 38.505 45.8849 38.6506 45.8864 38.8153C45.8849 38.9716 45.9226 39.108 45.9993 39.2244C46.0774 39.3409 46.1889 39.4311 46.3338 39.495C46.4787 39.5589 46.6506 39.5909 46.8494 39.5909ZM46.8494 37.5199C47.0057 37.5199 47.1442 37.4886 47.2649 37.4261C47.3871 37.3636 47.483 37.2763 47.5526 37.1641C47.6222 37.0518 47.6577 36.9205 47.6591 36.7699C47.6577 36.6222 47.6229 36.4936 47.5547 36.3842C47.4865 36.2734 47.392 36.1882 47.2713 36.1286C47.1506 36.0675 47.0099 36.0369 46.8494 36.0369C46.6861 36.0369 46.5433 36.0675 46.4212 36.1286C46.299 36.1882 46.2045 36.2734 46.1378 36.3842C46.071 36.4936 46.0384 36.6222 46.0398 36.7699C46.0384 36.9205 46.0717 37.0518 46.1399 37.1641C46.2095 37.2763 46.3054 37.3636 46.4276 37.4261C46.5497 37.4886 46.6903 37.5199 46.8494 37.5199Z\" fill=\"black\"/>\n      <path d=\"M50.5723 40.0597C50.2512 40.0597 49.9778 39.9723 49.752 39.7976C49.5261 39.6215 49.3535 39.3665 49.2342 39.0327C49.1149 38.6974 49.0552 38.2926 49.0552 37.8182C49.0552 37.3466 49.1149 36.9439 49.2342 36.6101C49.3549 36.2749 49.5282 36.0192 49.7541 35.843C49.9814 35.6655 50.2541 35.5767 50.5723 35.5767C50.8904 35.5767 51.1625 35.6655 51.3883 35.843C51.6156 36.0192 51.7889 36.2749 51.9082 36.6101C52.0289 36.9439 52.0893 37.3466 52.0893 37.8182C52.0893 38.2926 52.0297 38.6974 51.9103 39.0327C51.791 39.3665 51.6184 39.6215 51.3926 39.7976C51.1667 39.9723 50.8933 40.0597 50.5723 40.0597ZM50.5723 39.5909C50.8904 39.5909 51.1376 39.4375 51.3137 39.1307C51.4899 38.8239 51.5779 38.3864 51.5779 37.8182C51.5779 37.4403 51.5375 37.1186 51.4565 36.853C51.377 36.5874 51.2619 36.3849 51.1113 36.2457C50.9622 36.1065 50.7825 36.0369 50.5723 36.0369C50.2569 36.0369 50.0105 36.1925 49.8329 36.5036C49.6554 36.8132 49.5666 37.2514 49.5666 37.8182C49.5666 38.196 49.6064 38.517 49.6859 38.7813C49.7654 39.0455 49.8798 39.2465 50.0289 39.3842C50.1795 39.522 50.3606 39.5909 50.5723 39.5909Z\" fill=\"black\"/>\n      <path d=\"M54.3223 40.0597C54.0012 40.0597 53.7278 39.9723 53.502 39.7976C53.2761 39.6215 53.1035 39.3665 52.9842 39.0327C52.8649 38.6974 52.8052 38.2926 52.8052 37.8182C52.8052 37.3466 52.8649 36.9439 52.9842 36.6101C53.1049 36.2749 53.2782 36.0192 53.5041 35.843C53.7314 35.6655 54.0041 35.5767 54.3223 35.5767C54.6404 35.5767 54.9125 35.6655 55.1383 35.843C55.3656 36.0192 55.5389 36.2749 55.6582 36.6101C55.7789 36.9439 55.8393 37.3466 55.8393 37.8182C55.8393 38.2926 55.7797 38.6974 55.6603 39.0327C55.541 39.3665 55.3684 39.6215 55.1426 39.7976C54.9167 39.9723 54.6433 40.0597 54.3223 40.0597ZM54.3223 39.5909C54.6404 39.5909 54.8876 39.4375 55.0637 39.1307C55.2399 38.8239 55.3279 38.3864 55.3279 37.8182C55.3279 37.4403 55.2875 37.1186 55.2065 36.853C55.127 36.5874 55.0119 36.3849 54.8613 36.2457C54.7122 36.1065 54.5325 36.0369 54.3223 36.0369C54.0069 36.0369 53.7605 36.1925 53.5829 36.5036C53.4054 36.8132 53.3166 37.2514 53.3166 37.8182C53.3166 38.196 53.3564 38.517 53.4359 38.7813C53.5154 39.0455 53.6298 39.2465 53.7789 39.3842C53.9295 39.522 54.1106 39.5909 54.3223 39.5909Z\" fill=\"black\"/>\n      <path d=\"M46.9006 60.0597C46.7216 60.0568 46.5426 60.0227 46.3636 59.9574C46.1847 59.892 46.0213 59.782 45.8736 59.6271C45.7259 59.4709 45.6072 59.2599 45.5178 58.9943C45.4283 58.7273 45.3835 58.392 45.3835 57.9886C45.3835 57.6023 45.4197 57.2599 45.4922 56.9617C45.5646 56.6619 45.6697 56.4098 45.8075 56.2053C45.9453 55.9993 46.1115 55.843 46.3061 55.7365C46.5021 55.63 46.723 55.5767 46.9688 55.5767C47.2131 55.5767 47.4304 55.6257 47.6207 55.7237C47.8125 55.8203 47.9688 55.9553 48.0895 56.1286C48.2102 56.3018 48.2884 56.5014 48.3239 56.7273H47.804C47.7557 56.5313 47.6619 56.3686 47.5227 56.2393C47.3835 56.1101 47.1989 56.0455 46.9688 56.0455C46.6307 56.0455 46.3643 56.1925 46.1697 56.4865C45.9766 56.7805 45.8793 57.1932 45.8778 57.7244H45.9119C45.9915 57.6037 46.0859 57.5007 46.1953 57.4155C46.3061 57.3288 46.4283 57.2621 46.5618 57.2152C46.6953 57.1683 46.8366 57.1449 46.9858 57.1449C47.2358 57.1449 47.4645 57.2074 47.6719 57.3324C47.8793 57.456 48.0455 57.6271 48.1705 57.8459C48.2955 58.0632 48.358 58.3125 48.358 58.5938C48.358 58.8636 48.2976 59.1108 48.1768 59.3352C48.0561 59.5582 47.8864 59.7358 47.6676 59.8679C47.4503 59.9986 47.1946 60.0625 46.9006 60.0597ZM46.9006 59.5909C47.0795 59.5909 47.2401 59.5462 47.3821 59.4567C47.5256 59.3672 47.6385 59.2472 47.7209 59.0966C47.8047 58.946 47.8466 58.7784 47.8466 58.5938C47.8466 58.4134 47.8061 58.2493 47.7251 58.1016C47.6456 57.9524 47.5355 57.8338 47.3949 57.7457C47.2557 57.6577 47.0966 57.6136 46.9176 57.6136C46.7827 57.6136 46.657 57.6406 46.5405 57.6946C46.424 57.7472 46.3217 57.8196 46.2337 57.9119C46.147 58.0043 46.0788 58.1101 46.0291 58.2294C45.9794 58.3473 45.9545 58.4716 45.9545 58.6023C45.9545 58.7756 45.995 58.9375 46.076 59.0881C46.1584 59.2386 46.2706 59.3601 46.4126 59.4524C46.5561 59.5447 46.7188 59.5909 46.9006 59.5909Z\" fill=\"black\"/>\n      <path d=\"M50.6191 60.0597C50.2981 60.0597 50.0247 59.9723 49.7988 59.7976C49.573 59.6215 49.4004 59.3665 49.2811 59.0327C49.1618 58.6974 49.1021 58.2926 49.1021 57.8182C49.1021 57.3466 49.1618 56.9439 49.2811 56.6101C49.4018 56.2749 49.5751 56.0192 49.801 55.843C50.0282 55.6655 50.301 55.5767 50.6191 55.5767C50.9373 55.5767 51.2093 55.6655 51.4352 55.843C51.6625 56.0192 51.8358 56.2749 51.9551 56.6101C52.0758 56.9439 52.1362 57.3466 52.1362 57.8182C52.1362 58.2926 52.0765 58.6974 51.9572 59.0327C51.8379 59.3665 51.6653 59.6215 51.4395 59.7976C51.2136 59.9723 50.9402 60.0597 50.6191 60.0597ZM50.6191 59.5909C50.9373 59.5909 51.1845 59.4375 51.3606 59.1307C51.5368 58.8239 51.6248 58.3864 51.6248 57.8182C51.6248 57.4403 51.5843 57.1186 51.5034 56.853C51.4238 56.5874 51.3088 56.3849 51.1582 56.2457C51.0091 56.1065 50.8294 56.0369 50.6191 56.0369C50.3038 56.0369 50.0574 56.1925 49.8798 56.5036C49.7022 56.8132 49.6135 57.2514 49.6135 57.8182C49.6135 58.196 49.6532 58.517 49.7328 58.7812C49.8123 59.0455 49.9267 59.2465 50.0758 59.3842C50.2264 59.522 50.4075 59.5909 50.6191 59.5909Z\" fill=\"black\"/>\n      <path d=\"M54.3691 60.0597C54.0481 60.0597 53.7747 59.9723 53.5488 59.7976C53.323 59.6215 53.1504 59.3665 53.0311 59.0327C52.9118 58.6974 52.8521 58.2926 52.8521 57.8182C52.8521 57.3466 52.9118 56.9439 53.0311 56.6101C53.1518 56.2749 53.3251 56.0192 53.551 55.843C53.7782 55.6655 54.051 55.5767 54.3691 55.5767C54.6873 55.5767 54.9593 55.6655 55.1852 55.843C55.4125 56.0192 55.5858 56.2749 55.7051 56.6101C55.8258 56.9439 55.8862 57.3466 55.8862 57.8182C55.8862 58.2926 55.8265 58.6974 55.7072 59.0327C55.5879 59.3665 55.4153 59.6215 55.1895 59.7976C54.9636 59.9723 54.6902 60.0597 54.3691 60.0597ZM54.3691 59.5909C54.6873 59.5909 54.9345 59.4375 55.1106 59.1307C55.2868 58.8239 55.3748 58.3864 55.3748 57.8182C55.3748 57.4403 55.3343 57.1186 55.2534 56.853C55.1738 56.5874 55.0588 56.3849 54.9082 56.2457C54.7591 56.1065 54.5794 56.0369 54.3691 56.0369C54.0538 56.0369 53.8074 56.1925 53.6298 56.5036C53.4522 56.8132 53.3635 57.2514 53.3635 57.8182C53.3635 58.196 53.4032 58.517 53.4828 58.7812C53.5623 59.0455 53.6767 59.2465 53.8258 59.3842C53.9764 59.522 54.1575 59.5909 54.3691 59.5909Z\" fill=\"black\"/>\n      <path d=\"M45.3494 79.1051V78.6705L47.267 75.6364H47.5824V76.3097H47.3693L45.9205 78.6023V78.6364H48.5028V79.1051H45.3494ZM47.4034 80V75.6364H47.9063V80H47.4034Z\" fill=\"black\"/>\n      <path d=\"M50.7246 80.0597C50.4036 80.0597 50.1301 79.9723 49.9043 79.7976C49.6784 79.6214 49.5059 79.3665 49.3865 79.0327C49.2672 78.6974 49.2076 78.2926 49.2076 77.8182C49.2076 77.3466 49.2672 76.9439 49.3865 76.6101C49.5073 76.2749 49.6806 76.0192 49.9064 75.843C50.1337 75.6655 50.4064 75.5767 50.7246 75.5767C51.0428 75.5767 51.3148 75.6655 51.5407 75.843C51.7679 76.0192 51.9412 76.2749 52.0605 76.6101C52.1813 76.9439 52.2417 77.3466 52.2417 77.8182C52.2417 78.2926 52.182 78.6974 52.0627 79.0327C51.9434 79.3665 51.7708 79.6214 51.5449 79.7976C51.3191 79.9723 51.0456 80.0597 50.7246 80.0597ZM50.7246 79.5909C51.0428 79.5909 51.29 79.4375 51.4661 79.1307C51.6422 78.8239 51.7303 78.3864 51.7303 77.8182C51.7303 77.4403 51.6898 77.1186 51.6088 76.853C51.5293 76.5874 51.4142 76.3849 51.2637 76.2457C51.1145 76.1065 50.9348 76.0369 50.7246 76.0369C50.4093 76.0369 50.1628 76.1925 49.9853 76.5036C49.8077 76.8132 49.7189 77.2514 49.7189 77.8182C49.7189 78.196 49.7587 78.517 49.8382 78.7812C49.9178 79.0455 50.0321 79.2465 50.1813 79.3842C50.3319 79.522 50.513 79.5909 50.7246 79.5909Z\" fill=\"black\"/>\n      <path d=\"M54.4746 80.0597C54.1536 80.0597 53.8802 79.9723 53.6543 79.7976C53.4284 79.6214 53.2559 79.3665 53.1365 79.0327C53.0172 78.6974 52.9576 78.2926 52.9576 77.8182C52.9576 77.3466 53.0172 76.9439 53.1365 76.6101C53.2573 76.2749 53.4306 76.0192 53.6564 75.843C53.8837 75.6655 54.1564 75.5767 54.4746 75.5767C54.7928 75.5767 55.0648 75.6655 55.2907 75.843C55.5179 76.0192 55.6912 76.2749 55.8105 76.6101C55.9313 76.9439 55.9917 77.3466 55.9917 77.8182C55.9917 78.2926 55.932 78.6974 55.8127 79.0327C55.6934 79.3665 55.5208 79.6214 55.2949 79.7976C55.0691 79.9723 54.7956 80.0597 54.4746 80.0597ZM54.4746 79.5909C54.7928 79.5909 55.04 79.4375 55.2161 79.1307C55.3922 78.8239 55.4803 78.3864 55.4803 77.8182C55.4803 77.4403 55.4398 77.1186 55.3588 76.853C55.2793 76.5874 55.1642 76.3849 55.0137 76.2457C54.8645 76.1065 54.6848 76.0369 54.4746 76.0369C54.1593 76.0369 53.9128 76.1925 53.7353 76.5036C53.5577 76.8132 53.4689 77.2514 53.4689 77.8182C53.4689 78.196 53.5087 78.517 53.5882 78.7812C53.6678 79.0455 53.7821 79.2465 53.9313 79.3842C54.0819 79.522 54.263 79.5909 54.4746 79.5909Z\" fill=\"black\"/>\n      <path d=\"M45.4517 100V99.6165L46.892 98.0398C47.0611 97.8551 47.2003 97.6946 47.3097 97.5582C47.419 97.4205 47.5 97.2912 47.5526 97.1705C47.6065 97.0483 47.6335 96.9205 47.6335 96.7869C47.6335 96.6335 47.5966 96.5007 47.5227 96.3885C47.4503 96.2763 47.3509 96.1896 47.2244 96.1286C47.098 96.0675 46.956 96.0369 46.7983 96.0369C46.6307 96.0369 46.4844 96.0717 46.3594 96.1413C46.2358 96.2095 46.1399 96.3054 46.0717 96.429C46.005 96.5526 45.9716 96.6974 45.9716 96.8636H45.4688C45.4688 96.608 45.5277 96.3835 45.6456 96.1903C45.7635 95.9972 45.924 95.8466 46.1271 95.7386C46.3317 95.6307 46.5611 95.5767 46.8153 95.5767C47.071 95.5767 47.2976 95.6307 47.495 95.7386C47.6925 95.8466 47.8473 95.9922 47.9595 96.1754C48.0717 96.3587 48.1278 96.5625 48.1278 96.7869C48.1278 96.9474 48.0987 97.1044 48.0405 97.2578C47.9837 97.4098 47.8842 97.5795 47.7422 97.767C47.6016 97.9531 47.4063 98.1804 47.1563 98.4489L46.1761 99.4972V99.5312H48.2045V100H45.4517Z\" fill=\"black\"/>\n      <path d=\"M50.5078 100.06C50.1868 100.06 49.9134 99.9723 49.6875 99.7976C49.4616 99.6214 49.2891 99.3665 49.1697 99.0327C49.0504 98.6974 48.9908 98.2926 48.9908 97.8182C48.9908 97.3466 49.0504 96.9439 49.1697 96.6101C49.2905 96.2749 49.4638 96.0192 49.6896 95.843C49.9169 95.6655 50.1896 95.5767 50.5078 95.5767C50.826 95.5767 51.098 95.6655 51.3239 95.843C51.5511 96.0192 51.7244 96.2749 51.8438 96.6101C51.9645 96.9439 52.0249 97.3466 52.0249 97.8182C52.0249 98.2926 51.9652 98.6974 51.8459 99.0327C51.7266 99.3665 51.554 99.6214 51.3281 99.7976C51.1023 99.9723 50.8288 100.06 50.5078 100.06ZM50.5078 99.5909C50.826 99.5909 51.0732 99.4375 51.2493 99.1307C51.4254 98.8239 51.5135 98.3864 51.5135 97.8182C51.5135 97.4403 51.473 97.1186 51.392 96.853C51.3125 96.5874 51.1974 96.3849 51.0469 96.2457C50.8977 96.1065 50.718 96.0369 50.5078 96.0369C50.1925 96.0369 49.946 96.1925 49.7685 96.5036C49.5909 96.8132 49.5021 97.2514 49.5021 97.8182C49.5021 98.196 49.5419 98.517 49.6214 98.7812C49.701 99.0455 49.8153 99.2464 49.9645 99.3842C50.1151 99.522 50.2962 99.5909 50.5078 99.5909Z\" fill=\"black\"/>\n      <path d=\"M54.2578 100.06C53.9368 100.06 53.6634 99.9723 53.4375 99.7976C53.2116 99.6214 53.0391 99.3665 52.9197 99.0327C52.8004 98.6974 52.7408 98.2926 52.7408 97.8182C52.7408 97.3466 52.8004 96.9439 52.9197 96.6101C53.0405 96.2749 53.2138 96.0192 53.4396 95.843C53.6669 95.6655 53.9396 95.5767 54.2578 95.5767C54.576 95.5767 54.848 95.6655 55.0739 95.843C55.3011 96.0192 55.4744 96.2749 55.5938 96.6101C55.7145 96.9439 55.7749 97.3466 55.7749 97.8182C55.7749 98.2926 55.7152 98.6974 55.5959 99.0327C55.4766 99.3665 55.304 99.6214 55.0781 99.7976C54.8523 99.9723 54.5788 100.06 54.2578 100.06ZM54.2578 99.5909C54.576 99.5909 54.8232 99.4375 54.9993 99.1307C55.1754 98.8239 55.2635 98.3864 55.2635 97.8182C55.2635 97.4403 55.223 97.1186 55.142 96.853C55.0625 96.5874 54.9474 96.3849 54.7969 96.2457C54.6477 96.1065 54.468 96.0369 54.2578 96.0369C53.9425 96.0369 53.696 96.1925 53.5185 96.5036C53.3409 96.8132 53.2521 97.2514 53.2521 97.8182C53.2521 98.196 53.2919 98.517 53.3714 98.7812C53.451 99.0455 53.5653 99.2464 53.7145 99.3842C53.8651 99.522 54.0462 99.5909 54.2578 99.5909Z\" fill=\"black\"/>\n      <path d=\"M32 20.25H22M32 22.25H22M32 24.25H22M32 26.25H22M32 30.25H22M32 32.25H22M32 34.25H22M32 36.25H22M32 40.25H22M32 42.25H22M32 44.25H22M32 46.25H22M32 50.25H22M32 52.25H22M32 54.25H22M32 56.25H22M32 60.25H22M32 62.25H22M32 64.25H22M32 66.25H22M32 70.25H22M32 72.25H22M32 74.25H22M32 76.25H22M32 80.25H22M32 82.25H22M32 84.25H22M32 86.25H22M32 90.25H22M32 92.25H22M32 94.25H22M32 96.25H22M42 18.25H22M37 28.25H22M42 38.25H22M37 48.25H22M42 58.25H22M37 68.25H22M42 78.25H22M37 88.25H22M42 98.25H22M22.25 18V98\" stroke=\"black\" stroke-width=\"0.5\"/>\n      </g>\n      <g class={overflow() ? \"\" : \"hidden\"} transform=\"translate(4,-1)\">\n        <path d=\"M21 1C20.3333 2.9358 19.2586 4.87182 19 6.80762C18.987 6.90494 18.974 7.00228 18.9609 7.09961C18.343 11.6911 17.624 16.2835 17.5 20.875C16.6358 52.8833 15.9232 84.8921 15.1484 116.9C15.0992 118.934 15.0498 120.967 15 123H7C6.95023 120.967 6.90078 118.934 6.85156 116.9C6.07677 84.8921 5.36416 52.8833 4.5 20.875C4.37604 16.2835 3.65699 11.6911 3.03906 7.09961C3.02596 7.00228 3.013 6.90494 3 6.80762C2.74142 4.87182 1.66667 2.9358 1 1H21Z\" fill=\"#78AEDD\"/>\n        <path d=\"M71 1C70.6667 2.9358 70.1293 4.87182 70 6.80762C69.9935 6.90495 69.987 7.00228 69.9805 7.09961C69.6715 11.6911 69.312 16.2835 69.25 20.875C68.8179 52.8833 68.4616 84.8921 68.0742 116.9C68.0496 118.934 68.0249 120.967 68 123H64C63.9751 120.967 63.9504 118.934 63.9258 116.9C63.5384 84.8921 63.1821 52.8833 62.75 20.875C62.688 16.2835 62.3285 11.6911 62.0195 7.09961C62.013 7.00228 62.0065 6.90495 62 6.80762C61.8707 4.87182 61.3333 2.9358 61 1H71Z\" fill=\"#78AEDD\"/>\n        <path d=\"M80 1C79.8 2.9358 79.478 4.87182 79.4004 6.80762C79.3965 6.90495 79.3926 7.00228 79.3887 7.09961C79.2033 11.6911 78.9874 16.2835 78.9502 20.875C78.6909 52.8833 78.4766 84.8921 78.2441 116.9C78.2294 118.934 78.2151 120.967 78.2002 123H75.7998C75.7849 120.967 75.7706 118.934 75.7559 116.9C75.5234 84.8921 75.3091 52.8833 75.0498 20.875C75.0126 16.2835 74.7967 11.6911 74.6113 7.09961C74.6074 7.00228 74.6035 6.90495 74.5996 6.80762C74.522 4.87182 74.2 2.9358 74 1H80Z\" fill=\"#78AEDD\"/>\n        <path d=\"M21 1C20.3333 2.9358 19.2586 4.87182 19 6.80762C18.987 6.90494 18.974 7.00228 18.9609 7.09961C18.343 11.6911 17.624 16.2835 17.5 20.875C16.6358 52.8833 15.9232 84.8921 15.1484 116.9C15.0992 118.934 15.0498 120.967 15 123H7C6.95023 120.967 6.90078 118.934 6.85156 116.9C6.07677 84.8921 5.36416 52.8833 4.5 20.875C4.37604 16.2835 3.65699 11.6911 3.03906 7.09961C3.02596 7.00228 3.013 6.90494 3 6.80762C2.74142 4.87182 1.66667 2.9358 1 1H21Z\" stroke=\"black\"/>\n        <path d=\"M71 1C70.6667 2.9358 70.1293 4.87182 70 6.80762C69.9935 6.90495 69.987 7.00228 69.9805 7.09961C69.6715 11.6911 69.312 16.2835 69.25 20.875C68.8179 52.8833 68.4616 84.8921 68.0742 116.9C68.0496 118.934 68.0249 120.967 68 123H64C63.9751 120.967 63.9504 118.934 63.9258 116.9C63.5384 84.8921 63.1821 52.8833 62.75 20.875C62.688 16.2835 62.3285 11.6911 62.0195 7.09961C62.013 7.00228 62.0065 6.90495 62 6.80762C61.8707 4.87182 61.3333 2.9358 61 1H71Z\" stroke=\"black\"/>\n        <path d=\"M80 1C79.8 2.9358 79.478 4.87182 79.4004 6.80762C79.3965 6.90495 79.3926 7.00228 79.3887 7.09961C79.2033 11.6911 78.9874 16.2835 78.9502 20.875C78.6909 52.8833 78.4766 84.8921 78.2441 116.9C78.2294 118.934 78.2151 120.967 78.2002 123H75.7998C75.7849 120.967 75.7706 118.934 75.7559 116.9C75.5234 84.8921 75.3091 52.8833 75.0498 20.875C75.0126 16.2835 74.7967 11.6911 74.6113 7.09961C74.6074 7.00228 74.6035 6.90495 74.5996 6.80762C74.522 4.87182 74.2 2.9358 74 1H80Z\" stroke=\"black\"/>\n      </g>\n    </g>\n    <Portal mount={document.getElementById(\"cond-mask\")!} isSVG={true}>\n      <rect x={0} y={172 - val() / 10} width=\"20\" height={(blocked() === 0) ? val() / 10 : 0} fill=\"black\" />\n    </Portal>\n    <Portal mount={document.getElementById(\"conc-mask\")!} isSVG={true}>\n      <rect x={0} y={172 - val() / 10} width=\"20\" height={(blocked() === 3) ? val() / 10 : 0} fill=\"black\" />\n    </Portal>\n    <BeakerEmptyModal beakerRef={ref} display={modalDisplay} onDisplayChange={setModalDisplay} onEmptyClick={() => setVal(0)} />\n  </>);\n};\n\nconst BeakerFill: Component<{ vol: Accessor<number> }> = ({ vol }) => {\n  return (<>\n    <rect id=\"inBeakerFill\" x=\"5\" y={18 + 100 - vol() / 10} width=\"79\" height={vol() / 10} fill=\"#3B8CCF\" fill-opacity=\"0.6\"/>\n  </>);\n}\n\nconst BeakerEmptyModal: Component<{ beakerRef: SVGGElement, display: Accessor<boolean>, onDisplayChange: (x: boolean) => void, onEmptyClick: () => void }> = ({ beakerRef, display, onDisplayChange, onEmptyClick }) => {\n\n  const window_coords = createMemo(() => {\n    if (!display() || !beakerRef) return {x:0,y:0};\n    const bds = beakerRef.getBoundingClientRect();\n    return { x: bds.x + bds.width/2 - 85, y: bds.y + bds.height + 2 };\n  })\n\n  // Turn own show off\n  let ref!: HTMLDivElement;\n  const clickOut = (e: MouseEvent) => {\n    if (ref.contains(e.target as Node) ) return;\n    document.removeEventListener(\"click\", clickOut);\n    onDisplayChange(false);\n  }\n\n  createEffect(() => {\n    if (display()) {\n      document.addEventListener(\"pointerdown\", clickOut);\n    }\n  });\n\n  return (<>\n  <Portal mount={document.querySelector(\"body\")!}>\n    {display() && (\n      <div ref={ref}\n        style={{\n          \"position\": \"absolute\",\n          \"left\": `${window_coords().x}px`,\n          \"top\": `${window_coords().y}px`,\n          \"width\": \"max-content\",\n          \"background\": \"white\",\n          \"border\": \"1px solid #ccc\",\n          \"border-radius\": \"6px\",\n          \"box-shadow\": \"0 2px 8px rgba(0,0,0,0.15)\",\n          \"padding\": \"10px\",\n          \"text-align\": \"center\",\n          \"z-index\": 1000,\n        }}\n      >\n        <button\n          style={{\n            \"padding\": \"4px 12px\",\n            \"border-radius\": \"4px\",\n            \"border\": \"1px solid #da3737ff\",\n            \"background\": \"#da3737ff\",\n            \"color\": \"white\",\n            \"cursor\": \"pointer\",\n          }}\n          onClick={onEmptyClick}\n        >\n          <i class=\"fa-solid fa-arrows-rotate\" />&nbsp;\n          empty beaker\n        </button>\n      </div>\n    )}\n  </Portal>\n  </>);\n}","import { createMemo, createSignal, type Accessor, type Component, type Setter } from \"solid-js\";\nimport \"./Scale.css\"\n\ntype SignalT = [get: Accessor<number>, set: Setter<number>];\n\nconst EMPTY_BEAKER_WEIGHT = 538.1; // g\n\nexport interface ScaleProps {\n  blockSignal: Accessor<Array<SignalT | null>>;\n  blockIds: number[];\n}\n\nexport const Scale: Component<ScaleProps> = ({ blockSignal, blockIds }) => {\n  const [tare, setTare] = createSignal(0);\n\n  // compute the sum of each overlapping rect's value\n  const weight = createMemo(() => {\n    const all = blockSignal();\n    // select entries whose index is in blockIds\n  const blocks = all.filter((_, idx) => blockIds.includes(idx));\n    // type guard to filter out nulls\n    const signals: SignalT[] = blocks.filter((block): block is SignalT => block !== null);\n\n    const sum = signals.reduce((acc, s) => acc + s[0]() + EMPTY_BEAKER_WEIGHT, 0);\n    return sum;\n  });\n\n  return (\n    <g> \n      <text\n        class=\"scale-label\"\n        x={`${631}`}\n        y={`${720}`}\n        fill=\"#d7ce1bff\"\n        font-family=\"'Digital-7 Mono', monospace\"\n        font-size=\"26\"\n      >\n        {`${(weight() - tare()).toFixed(1)}`}\n      </text>\n      <text\n        class=\"scale-label\"\n        x={`${651}`}\n        y={`${722}`}\n        fill=\"#d7ce1bff\"\n        font-family=\"'Digital-7 Mono', monospace\"\n        font-size=\"18\"\n      >\n        g\n      </text>\n      <g class=\"button\" onclick={() => setTare(weight())}>\n        <rect\n          id=\"upBtnbase\"\n          x=\"670.5\"\n          y=\"702.5\"\n          width=\"35\"\n          height=\"35\"\n          rx=\"5.5\"\n          fill=\"#D51F1F\"\n          stroke=\"black\"\n        />\n        <path\n          id=\"0_3\"\n          d=\"M688 733.44C685.52 733.44 683.613 732.333 682.28 730.12C680.947 727.907 680.28 724.76 680.28 720.68C680.28 716.733 680.947 713.627 682.28 711.36C683.613 709.067 685.52 707.92 688 707.92C690.48 707.92 692.387 709.067 693.72 711.36C695.053 713.627 695.72 716.733 695.72 720.68C695.72 724.76 695.053 727.907 693.72 730.12C692.387 732.333 690.48 733.44 688 733.44ZM683.16 720.68C683.16 722.387 683.28 723.907 683.52 725.24L692 714.32C691.6 713.067 691.053 712.093 690.36 711.4C689.693 710.707 688.907 710.36 688 710.36C686.48 710.36 685.293 711.293 684.44 713.16C683.587 715.027 683.16 717.533 683.16 720.68ZM688 731C689.52 731 690.707 730.107 691.56 728.32C692.413 726.533 692.84 723.987 692.84 720.68C692.84 719.213 692.747 717.88 692.56 716.68L684.08 727.44C684.907 729.813 686.213 731 688 731Z\"\n          fill=\"#320101\"\n        />\n      </g>\n    </g>\n  );\n};\n","import { createSignal, type Component, For, type Accessor, type Setter, createEffect } from \"solid-js\";\nimport { Beaker, type RectState } from \"./Beaker\";\nimport { Scale } from \"./Scale\";\nimport { animate } from \"../../ts/helpers\";\n\ntype SignalT = [get: Accessor<number>, set: Setter<number>];\n\ninterface BeakerSystemProps {\n  leftFlow: Accessor<number>; // in g/s\n  rightFlow: Accessor<number>; // in g/s\n};\n\nexport const BeakerSystem: Component<BeakerSystemProps> = ({ leftFlow, rightFlow }) => {\n  // central registry of rects\n  const [beakers, setBeakers] = createSignal<RectState[]> ([{\n    idx: 0,\n    x: 300,\n    y: 610,\n    value: 0,\n    blocking: null\n  },\n  {\n    idx: 1,\n    x: 700,\n    y: 610,\n    value: 0,\n    blocking: null\n  }]);\n  \n  // Create stable signals for each beaker's value so any references (eg. stored in isBlocked)\n  // remain valid even if the beaker component is re-created or the beakers array is re-ordered.\n  const valueSignals = new Map<number, [get: Accessor<number>, set: Setter<number>]>();\n  // Ensure signals exist for current beakers\n  beakers().forEach(b => {\n    if (!valueSignals.has(b.idx)) valueSignals.set(b.idx, createSignal(b.value));\n  });\n\n  // Update the beaker list\n  const update = (idx: number, patch: Partial<RectState>) => {\n    setBeakers(prev => {\n      const updated = prev.map(r => r.idx === idx ? { ...r, ...patch } : r);\n      // return a new, sorted array so Solid sees a new reference\n      return [...updated].sort((a, b) => a.y - b.y);\n    });\n  };\n\n  // Block a source\n  const [isBlocked, setIsBlocked] = createSignal<Array<SignalT | null>> ([null, null, null, null]);\n  const block = (which: number, value: SignalT | null) => {\n    // update immutably so Solid's signal setter sees a new reference\n    setIsBlocked(prev => {\n      const arr = [...prev];\n      arr[which] = value;\n      return arr;\n    });\n  }\n\n  // Create an effect for the fillers\n  let playing = false;\n  const play = () => {\n    // Dont play two\n    if (playing) return;\n    playing = true;\n\n    const frame = (dt: number) => {\n      // Check the blocks to see if we should update\n      const blocks = isBlocked();\n      // Left drain\n      if (blocks[0] !== null) {\n        const val = blocks[0][0]();\n        const setter = blocks[0][1];\n        setter(val + leftFlow() * dt);\n      // console.log(\"playing frame\", val)\n      }\n      // Right drain\n      if (blocks[3] !== null) {\n        const val = blocks[3][0]();\n        const setter = blocks[3][1];\n        setter(val + rightFlow() * dt);\n      }\n      return playing;\n    }\n\n    animate(frame);\n  }\n\n  // Play the animation if a beaker is in a filler with nonzero flowrate\n  createEffect(() => {\n    const blocks = isBlocked();\n    const fillers = [blocks[0], blocks[3]];\n    if (fillers[0] !== null && leftFlow() !== 0) play();\n    else if (fillers[1] !== null && rightFlow() !== 0) play();\n    else playing = false;\n  });\n\n  return (<>\n\n      {/* Scale component - a fixed sensor box */}\n      <Scale blockSignal={isBlocked} blockIds={[1,2]} />\n\n      {/* Draggable items */}\n      <For each={beakers()}>\n        {(item) => {\n          // ensure a stable signal exists for this beaker\n          let sig = valueSignals.get(item.idx);\n          if (!sig) {\n            sig = createSignal(item.value);\n            valueSignals.set(item.idx, sig);\n          }\n          return (\n            <Beaker idx={item.idx} initialX={item.x}  initialY={item.y} value={item.value}\n              blocking={item.blocking}\n              update={update} block={block} isBlocked={isBlocked}\n              valueSignal={sig} />\n          )\n        }}</For>\n    </>\n  );\n};\n\nexport default BeakerSystem;\n","import { createSignal, For, type Component, type Setter } from \"solid-js\"\nimport \"./PRegulator.css\";\nimport { maxPressure } from \"../Gauge/Gauge\";\n\ninterface PRegulatorProps {\n    setPressure: Setter<number>;\n}\n\n\nconst PRegLines: Component<{l: () => number}> = ({l}) => {\n    const xMin = 135.5; // At 0 degrees\n    const xMax = 196.5; // At 180 degrees\n    const xAmp = (xMax - xMin) / 2;\n    const cx = 166; // Center x\n    const dTh = 180 / 10; // 10 segments of 18 degrees each\n\n    return (\n        <>\n            <For each={Array.from({length: 10}, (_,i) => (i * dTh + dTh - (300 * l()) % 18))}>\n                {th => {\n                    // Calculate spoke angle\n                    if (th > 180) return null; // Don't render past 180 degrees\n                    const rad = th * Math.PI / 180; // Radians\n\n                    // Calculate line position\n                    const x = cx + xAmp * Math.cos(rad);\n                    return <line x1={x} y1=\"191\" x2={x} y2=\"200\" stroke=\"#111D38\" stroke-width=\"1\" stroke-linecap=\"round\"/>;\n                }}\n            </For>\n        </>\n    );\n}\n\nexport const PRegulator: Component<PRegulatorProps> = ({ setPressure }) => {\n    // lift signal for animation\n    const [l, setL] = createSignal(0);\n\n    const startDrag = (e: MouseEvent) => {\n        e.preventDefault();\n        var startX = e.clientX;\n        \n        const onDrag = (e: MouseEvent) => {\n            const deltaX = e.clientX - startX;\n            startX = e.clientX;\n\n            // Update lift with clamping\n            const newL = Math.min(1, Math.max(0, l() + deltaX * 0.003));\n            setL(newL);\n\n            // Update pressure\n            const newP = maxPressure * newL; // Scale lift to pressure (0-15 psi)\n            setPressure(newP);\n        };\n\n        const endDrag = () => {\n            document.removeEventListener(\"pointermove\", onDrag);\n            document.removeEventListener(\"pointerup\", endDrag);\n        };\n\n        document.addEventListener(\"pointermove\", onDrag);\n        document.addEventListener(\"pointerup\", endDrag);\n    };\n\n    return (\n    <g id=\"pRegHandle\" class=\"preg-valve drag-exempt\" onpointerdown={startDrag}>\n        <rect id=\"pRegHandle_2\" x=\"134\" y=\"189.5\" width=\"64\" height=\"12\" rx=\"6\" fill=\"#5C8DF6\" stroke=\"black\"/>\n        <PRegLines l={l}/>\n    </g>\n)}\n","import { createMemo, createSignal, type Component } from \"solid-js\";\nimport StaticElements from \"./Static/StaticElements\";\nimport StaticDefs from \"./Static/StaticDefs\";\nimport Rotameter from \"./Rotameter/Rotameter\";\nimport Kettle from \"./Kettle/Kettle\";\nimport Display from \"./Display/Display\";\nimport Waterfall from \"./Waterfall/Waterfall\";\nimport Gauge from \"./Gauge/Gauge\";\nimport BallValve from \"./BallValve/BallValve\";\nimport GlobeValve from \"./GlobeValve/GlobeValve\";\nimport BeakerSystem from \"./BeakerSystem/BeakerSystem\";\nimport { PRegulator } from \"./PRegulator/PRegulator\";\nimport { calculateSteamTemperature, FEED_RATE_GAIN } from \"../ts/calcs\";\nimport { animate } from \"../ts/helpers\";\nimport { Steam } from \"./Steam/Steam\";\n\n// Note: The Apparatus component is the main SVG container for the kettle boiler experiment. \n// It includes static elements, interactable components like the rotameter and kettle, displays for temperature readings, waterfalls to represent fluid flow, \n// a pressure gauge, valves, and a beaker system. Each component is modular and can be developed and maintained independently.\n\nexport const Apparatus: Component = () => {\n  // Signals\n  const [ballValveOpen, setBallValveOpen] = createSignal(false); // State for BallValve\n  const [regulatorPressure, setRegulatorPressure] = createSignal(0); // Pressure state for the PRegulator\n  const [steamPressure, setSteamPressure] = createSignal(-1);\n  const [feedRate, setFeedRate] = createSignal(0); // Feed flow rate\n  const [outRate, setOutRate] = createSignal(0); // Kettle outlet\n  const [condRate, setCondRate] = createSignal(0); // Condensate flowrate\n  const [outTemp, setOutTemp] = createSignal(25);\n\n  // Memos\n  // const steamPressure = createMemo(() => ballValveOpen() ? Math.min(regulatorPressure(), 15) : 0); // Steam pressure depends on ball valve state\n  const r = Math.exp(-1/1);\n  animate((dt: number) => {\n    const target = ballValveOpen() ? regulatorPressure() : -1;\n    const current = steamPressure();\n    let next = (current - target) * r ** dt + target;\n    setSteamPressure(Math.min(next, 1));\n    return true;\n  });\n  const steamTemperature = createMemo(() => calculateSteamTemperature(steamPressure())); // Steam temperature based on pressure\n  // createEffect(() => console.log(condRate()))\n\n  // const outTempDisplay = createMemo(() => outRate() > 0.01 ? Math.min(outTemp(), 100.1).toFixed(1) : \"--\");\n  const outTempDisplay = createMemo(() => outTemp().toFixed(1)); // Show internal temp always for debugging\n\nreturn (<svg\n  width=\"1133\"\n  height=\"777\"\n  viewBox=\"0 0 1133 777\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <g id=\"canvas\" clip-path=\"url(#clip0_6_626)\">\n    <rect width=\"1133\" height=\"777\" fill=\"white\" />\n    <Rotameter flowrate={feedRate}/>\n    <StaticElements/>\n\n    {/* Interactables */}\n    <Kettle \n      // Kettle Inputs\n      feedRate={feedRate} \n      steamTemp={steamTemperature} \n      outTemp={outTemp}\n      // Kettle Outputs\n      onOutletChange={setOutRate}\n      onEvaporateChange={() => {}}\n      onSteamOutChange={setCondRate}\n      onOutTempChange={setOutTemp}\n    />\n    <PRegulator setPressure={setRegulatorPressure}/>\n\n    {/* Displays */}\n    {/* Condensate Temperature Display */}\n    <Display x={350.5} y={565.5} val={steamTemperature}/>\n    {/* Feed Temperature Display */}\n    <Display x={576.5} y={428.5} val={\"25.0\"} />\n    {/* Steam Temperature Display */}\n    <Display x={220.5} y={351.5} val={steamTemperature}/>\n    {/* Outlet Temperature Display */}\n    <Display x={820.5} y={479.5} val={outTempDisplay}/>\n\n    {/* Waterfalls */}\n    <Waterfall key=\"cond\" cx={157} rate={condRate} rateRange={[0, 140]} />\n    <Waterfall key=\"conc\" cx={965} rate={outRate}  rateRange={[0,1000]} />\n\n    <Gauge pressure={steamPressure}/>\n    <BallValve onToggle={(open) => setBallValveOpen(open)} />\n    <GlobeValve onLiftChange={(lift) => setFeedRate(lift * FEED_RATE_GAIN)}/>\n    <BeakerSystem leftFlow={condRate} rightFlow={outRate} />\n\n    <Steam showing={() => (regulatorPressure() > 1 && ballValveOpen())} x={230} y={90} w={5} h={7} />\n  </g>\n  <StaticDefs/>\n</svg>);\n}\n\nexport default Apparatus;\n","import { createEffect, onMount, type Component, type Signal } from \"solid-js\";\nimport \"./Modal.css\"\n\ninterface ModalProps {\n    key: string;\n    title: string;\n    BodyHTML: Component;\n    show: Signal<boolean>;\n};\n\nexport const Modal: Component<ModalProps> = ({ key, title, BodyHTML, show }) => {\n    const [getShow, setShow] = show;\n\n    const hideIfClickedOut = (e: MouseEvent) => {\n        if (!ref.contains(e.target as Node)) {\n            console.log(\"setting off\")\n            setShow(false);\n        }\n    }\n\n    let ref!: HTMLDivElement;\n    // Hide when clicked \n    // On mount to make sure ref is defined\n    onMount(() => {\n        // Create effect to make sure show is subscribed\n        createEffect(() => {    \n            // If showing, attach an event listener to leave\n            var showing = getShow();\n            if (showing) {\n                document.addEventListener(\"click\", hideIfClickedOut);\n            }\n            else {\n                document.removeEventListener(\"click\", hideIfClickedOut);\n            }\n        })\n    });\n\n    return (\n    <div id={`${key}-modal`} class=\"modal\" style={`display: ${getShow() ? \"block\" : \"none\"};`}>\n        <div ref={ref} class=\"modal-content\">\n            <span class=\"close-btn\" onclick={() => setShow(false)}>&times;</span>\n            <div class=\"modal-header\">\n                <h2> { title } </h2>\n            </div>\n            <div class=\"modal-body\">\n                <BodyHTML />\n            </div>\n        </div>\n    </div>\n    );\n}","import type { Component } from \"solid-js\";\nimport { createSignal, onMount } from \"solid-js\";\nimport \"./Hamburger.css\";\nimport { Modal } from \"../Modal/Modal\";\ninterface WorksheetProps {\n    path: string;\n    downloadName: string;\n    Directions: Component;\n    About: Component;\n}\n\nexport const HamburgerMenu: Component<WorksheetProps> = ({ path, downloadName, Directions, About }) => {\n    const [showMenu, setShowMenu] = createSignal(false);\n    const [showDirections, setShowDirections] = createSignal(false);\n    const [showAbout, setShowAbout] = createSignal(false);\n\n    // Click outside to close\n    let ref!: HTMLDivElement;\n\n    // Add a listener for when the user clicks outside\n    onMount(() => {\n        document.addEventListener(\"click\", (e) => {\n            if (!ref.contains(e.target as Node)) {\n                setShowMenu(false);\n            }\n        });\n    });\n\n    return (<>\n        <div class=\"hamburger-menu\" ref={ref}>\n            <div class=\"menu-btn\" onclick={() => setShowMenu(!showMenu())}>\n                <i class=\"fas fa-bars\"></i>\n            </div>\n            <div class={`menu-content ${showMenu() ? \"show\" : \"\"}`}>\n                <div class={\"menu-item\"} data-modal=\"directions\" onClick={() => {setShowDirections(true); setShowMenu(false)}}>\n                    <i class=\"fas fa-book\"></i>\n                    <span>Directions</span>\n                </div>\n                <a id=\"worksheet-download\" download={downloadName} href={path}>\n                    <div class=\"menu-item\" data-modal=\"details\">\n                        <i class=\"fas fa-download\"></i>\n                        <span>Worksheet</span>\n                    </div>\n                </a>\n                <div class=\"menu-item\" data-modal=\"about\" onClick={() => {setShowAbout(true); setShowMenu(false)}}>\n                    <i class=\"fas fa-info-circle\"></i>\n                    <span>About</span>\n                </div>\n            </div>\n        </div>\n        <Modal key=\"directions\" title=\"Directions\" BodyHTML={Directions} show={[showDirections, setShowDirections]} />\n        <Modal key=\"about\" title=\"About\" BodyHTML={About} show={[showAbout, setShowAbout]} />\n        </>);\n}\n","export default \"__VITE_ASSET__BFcPlRqk__\"","import type { Component } from \"solid-js\";\n\nexport const DirectionsText: Component = () => {\n    return <>\n    <p>\n        This virtual experiment simulates a kettle boiler and its heat exchange capabilities.\n\n        Use the flow-control valve (red) to adjust the feed flowrate, which can be read from the rotameter above it.\n\n        To fill the inner tubes with steam, click the steam shutoff valve to open it (parallel with the pipe), then drag the pressure regulator handle to adjust the pressure.\n\n        Tare the empty beakers for accuracy using the button on the scale.\n        Then, click and drag the beakers under the flowing streams to catch water, and drag them to the scale to weigh.\n        To empty a beaker, drag it onto the table and click on it, and then click on the \"empty beaker\" button.\n        Use a stopwatch during catch and weigh to record stream flowrates. \n\n        Scroll to zoom and drag the screen to pan.\n    </p>\n</>;\n}\n\nexport const AboutText: Component = () => {\n    return <p>\n        This digital experiment was created in the Department of Chemical and Biological Engineering at University of Colorado Boulder \n        for <a href=\"learncheme.com\">LearnChemE.com</a> by Drew Smith under the direction of Professor David B. Thiessen and Professor John L. Falconer. It was \n        prepared with financial support from the National Science Foundation (DUE 2336987 and 2336988) and is based on a Kettle Boiler \n        laboratory module and accompanying worksheet protocol developed with separate support under NSF 1821578 led by Washington State \n        University.  Address any questions or comments to LearnChemE@gmail.com.\n    </p>\n}\n","import { onMount } from 'solid-js';\nimport './App.css'\nimport { Apparatus } from './components/Apparatus';\nimport { HamburgerMenu } from './components/Hamburger/Hamburger';\nimport worksheet from './media/Kettle-Boiler-Worksheet.pdf'\nimport { enableWindowResize, initSvgDrag, initSvgZoom } from './ts/helpers';\nimport { AboutText, DirectionsText } from './components/Modal/modals';\n\nfunction App() {\n\n  onMount(() => {\n    // Initialize SVG zooming\n    initSvgZoom();\n    // Initialize SVG dragging with exempt element IDs\n    initSvgDrag();\n    // Add the resizing handler\n    enableWindowResize();\n  });\n\n  return (\n    <>\n      <HamburgerMenu path={worksheet} downloadName='Kettle-Boiler-Worksheet.pdf' Directions={DirectionsText} About={AboutText} />\n      <Apparatus />\n      <button type='button' class='btn btn-danger' onclick={() => location.reload()}>reset</button>\n    </>\n  )\n}\n\nexport default App;\n","/* @refresh reload */\nimport { render } from 'solid-js/web'\nimport './index.css'\nimport App from './App.tsx'\n\nconst root = document.getElementById('root')\n\nrender(() => <App />, root!)\n"],"names":["IS_DEV","equalFn","a","b","$TRACK","signalOptions","runEffects","runQueue","STALE","PENDING","UNOWNED","Owner","Transition","ExternalSourceConfig","Listener","Updates","Effects","ExecCount","createRoot","fn","detachedOwner","listener","owner","unowned","current","root","updateFn","untrack","cleanNode","runUpdates","createSignal","value","options","s","setter","writeSignal","readSignal","createRenderEffect","c","createComputation","updateComputation","createEffect","runUserEffects","createMemo","onMount","onCleanup","getOwner","runWithOwner","o","prev","prevListener","err","handleError","transPending","setTransPending","updates","lookUpstream","sSlot","node","isComp","i","TransitionRunning","markDownstream","time","runComputation","nextValue","init","pure","state","runTop","ancestors","wait","res","completeUpdates","e","queue","userLength","ignore","source","index","obs","n","castError","FALLBACK","dispose","d","mapArray","list","mapFn","items","mapped","disposers","len","indexes","newItems","newLen","j","newIndices","newIndicesNext","temp","tempdisposers","tempIndexes","start","end","newEnd","item","disposer","mapper","set","createComponent","Comp","props","For","fallback","memo","reconcileArrays","parentNode","bLength","aEnd","bEnd","aStart","bStart","after","map","sequence","t","$$EVENTS","render","code","element","insert","template","html","isImportNode","isSVG","isMathML","create","delegateEvents","eventNames","document","l","name","eventHandler","setAttribute","className","addEventListener","handler","delegate","style","nodeStyle","v","setStyleProperty","use","arg","parent","accessor","marker","initial","insertExpression","key","oriTarget","oriCurrentTarget","retarget","handleNode","data","walkUpTree","path","unwrapArray","multi","cleanChildren","array","currentArray","normalizeIncomingArray","appendNodes","normalized","unwrap","dynamic","replacement","inserted","el","isParent","SVG_NAMESPACE","createElement","tagName","is","Portal","useShadow","mount","content","clean","setClean","cleanup","container","renderRoot","StaticElements","_tmpl$","StaticDefs","Rotameter","flowrate","pixelsPerFlowrate","pixels","_el$","_el$2","firstChild","_$effect","_$setAttribute","constrain","x","min","max","getAngleFromDown","A","B","dx","dy","mag","viewState","getDistance","touches","initSvgZoom","svg","viewBox","zoom","scale","pt","y","width","height","amountZoomed","xPropW","yPropH","width2","height2","x2","y2","startDist","dist","initSvgDrag","exemptIDs","exemptElements","isDragging","prevX","prevY","exempt","viewX","viewY","viewWidth","viewHeight","enableWindowResize","asp","resize","windowWidth","windowHeight","getSVGCoords","evt","animate","then","prevtime","frame","dt","FEED_RATE_GAIN","calculateSteamTemperature","barg","P","C","dHvap","Tc","chamberVolume","chamberCapac_kg","chamberHeatCapac","Cp","rho","animateChamberMassBalance","fills","overflowRate","fill","chamberFill","flow","feedRate","fillIn","MAX_OVERFLOW_RATE","OVERFLOW_PIXELS_MAX","fillOut","evapOut","internalEvaporateRate","newFill","Math","setChamberFill","filling","pathFill","setPathFill","overflowFill","flowIn","flowOut","setOverflowFill","onOutletChange","controller","I","kp","ki","kd","animateChamberEnergyBalance","fillFrac","fillMass","outTemp","heat_rate","steamTemp","mdot_in","nrg_in","totCapac","cons","evap","proportional","Tboil","deriv","console","log","dTdt","cond","onOutTempChange","onEvaporateChange","onSteamOutChange","randNormal","mean","stdev","u","random","z","sqrt","cos","PI","Boils","showing","w","h","nbubbles","bubbles","get","gr","sr","bubble","cx","cy","r","aniScale","interpolant","timeScale","push","playing","lingering","next","_$insert","_$createComponent","each","children","_tmpl$2","_p$","_v$","_v$2","_v$3","_v$4","_v$5","undefined","Steam","_el$3","_tmpl$3","Kettle","setInternalEvaporateRate","setTimeout","querySelectorAll","forEach","classList","add","bubbleHeight","_el$4","nextSibling","_el$5","_el$6","_el$7","_el$8","_el$9","_el$0","_el$1","_el$10","_el$11","_el$12","_el$13","_el$14","_el$15","_el$16","_v$6","Display","val","tofixed","dec","strFn","toFixed","Waterfall","rate","rateRange","length","range","sx","clipHeight","setClipHeight","waterfallAni","flowing","maxPressure","Gauge","pressure","needleAngle","maxAngle","minAngle","BallValve","onToggle","isOpen","setIsOpen","rotation","toggleValve","open","$$click","_$delegateEvents","GlobeValve","onLiftChange","currentAngle","setCurrentAngle","prevTh","beginDrag","preventDefault","svgMozCoords","onDrag","endDrag","angle","th","deltaTh","abs","newAngle","removeEventListener","$$pointerdown","minY","Beaker","setX","initialX","setY","initialY","modalDisplay","setModalDisplay","overflow","setOverflow","local","valueSignal","setVal","blocked","setBlocked","blocking","overflowTimer","clearTimeout","setCoords","isBlocked","block","coords","mozX","mozY","onMove","ev","newX","newY","update","idx","window","ref","BeakerFill","vol","_ref$","_$use","getElementById","BeakerEmptyModal","beakerRef","display","onDisplayChange","onEmptyClick","_v$7","_v$8","window_coords","bds","getBoundingClientRect","clickOut","contains","target","querySelector","_$memo","_tmpl$4","_ref$2","_$addEventListener","_v$9","_v$0","_$setStyleProperty","EMPTY_BEAKER_WEIGHT","Scale","blockSignal","blockIds","tare","setTare","weight","filter","_","includes","reduce","acc","BeakerSystem","leftFlow","rightFlow","beakers","setBeakers","valueSignals","Map","has","patch","sort","setIsBlocked","which","arr","play","blocks","fillers","sig","PRegLines","Array","from","dTh","rad","xAmp","PRegulator","setPressure","setL","startDrag","startX","clientX","deltaX","newL","newP","Apparatus","ballValveOpen","setBallValveOpen","regulatorPressure","setRegulatorPressure","steamPressure","setSteamPressure","setFeedRate","outRate","setOutRate","condRate","setCondRate","setOutTemp","exp","steamTemperature","outTempDisplay","lift","Modal","title","BodyHTML","show","getShow","setShow","hideIfClickedOut","_$p","_$style","HamburgerMenu","downloadName","Directions","About","showMenu","setShowMenu","showDirections","setShowDirections","showAbout","setShowAbout","_$className","worksheet","DirectionsText","AboutText","App","location","reload"],"mappings":"ssBAiJA,MAAMA,GAAS,GACTC,GAAU,CAACC,EAAGC,IAAMD,IAAMC,EAG1BC,GAAS,OAAO,aAAa,EAE7BC,GAAgB,CACpB,OAAQJ,EACV,EAEA,IAAIK,GAAaC,GACjB,MAAMC,EAAQ,EACRC,GAAU,EACVC,GAAU,CACd,MAAO,KACP,SAAU,KACV,QAAS,KACT,MAAO,IACT,EAEA,IAAIC,EAAQ,KACZ,IAAIC,GAAa,KAEbC,GAAuB,KACvBC,EAAW,KACXC,EAAU,KACVC,EAAU,KACVC,GAAY,EAChB,SAASC,EAAWC,EAAIC,EAAe,CACrC,MAAMC,EAAWP,EACfQ,EAAQX,EACRY,EAAUJ,EAAG,SAAW,EACxBK,EAAUJ,IAAkB,OAAYE,EAAQF,EAChDK,EAAOF,EAAUb,GAAU,CACzB,MAAO,KACP,SAAU,KACV,QAASc,EAAUA,EAAQ,QAAU,KACrC,MAAOA,CACb,EACIE,EAAWH,EAAUJ,EAAK,IAAMA,EAAG,IAAMQ,EAAQ,IAAMC,EAAUH,CAAI,CAAC,CAAC,EACzEd,EAAQc,EACRX,EAAW,KACX,GAAI,CACF,OAAOe,EAAWH,EAAU,EAAI,CAClC,QAAC,CACCZ,EAAWO,EACXV,EAAQW,CACV,CACF,CACA,SAASQ,EAAaC,EAAOC,EAAS,CACpCA,EAAUA,EAAU,OAAO,OAAO,CAAA,EAAI3B,GAAe2B,CAAO,EAAI3B,GAChE,MAAM4B,EAAI,CACR,MAAAF,EACA,UAAW,KACX,cAAe,KACf,WAAYC,EAAQ,QAAU,MAClC,EACQE,EAASH,IACT,OAAOA,GAAU,aAC6EA,EAAQA,EAAME,EAAE,KAAK,GAEhHE,GAAYF,EAAGF,CAAK,GAE7B,MAAO,CAACK,GAAW,KAAKH,CAAC,EAAGC,CAAM,CACpC,CAKA,SAASG,EAAmBlB,EAAIY,EAAOC,EAAS,CAC9C,MAAMM,EAAIC,GAAkBpB,EAAIY,EAAO,GAAOvB,CAAK,EACqBgC,EAAkBF,CAAC,CAC7F,CACA,SAASG,EAAatB,EAAIY,EAAOC,EAAS,CACxC1B,GAAaoC,GACR,MAACJ,EAAIC,GAAkBpB,EAAIY,EAAO,GAAOvB,CAAK,GAG/C,CAACwB,GAAW,CAACA,EAAQ,UAAQM,EAAE,KAAO,IAC1CtB,EAAUA,EAAQ,KAAKsB,CAAC,EAAIE,EAAkBF,CAAC,CACjD,CAeA,SAASK,EAAWxB,EAAIY,EAAOC,EAAS,CACtCA,EAAUA,EAAU,OAAO,OAAO,CAAA,EAAI3B,GAAe2B,CAAO,EAAI3B,GAChE,MAAMiC,EAAIC,GAAkBpB,EAAIY,EAAO,GAAM,CAAC,EAC9C,OAAAO,EAAE,UAAY,KACdA,EAAE,cAAgB,KAClBA,EAAE,WAAaN,EAAQ,QAAU,OAI1BQ,EAAkBF,CAAC,EACnBF,GAAW,KAAKE,CAAC,CAC1B,CAkMA,SAASX,EAAQR,EAAI,CACnB,GAA6BL,IAAa,KAAM,OAAOK,EAAE,EACzD,MAAME,EAAWP,EACjBA,EAAW,KACX,GAAI,CAEF,OAAOK,EAAE,CACX,QAAC,CACCL,EAAWO,CACb,CACF,CAoBA,SAASuB,EAAQzB,EAAI,CACnBsB,EAAa,IAAMd,EAAQR,CAAE,CAAC,CAChC,CACA,SAAS0B,GAAU1B,EAAI,CACrB,OAAIR,IAAU,OAAgBA,EAAM,WAAa,KAAMA,EAAM,SAAW,CAACQ,CAAE,EAAOR,EAAM,SAAS,KAAKQ,CAAE,GACjGA,CACT,CAoBA,SAAS2B,IAAW,CAClB,OAAOnC,CACT,CACA,SAASoC,GAAaC,EAAG7B,EAAI,CAC3B,MAAM8B,EAAOtC,EACPuC,EAAepC,EACrBH,EAAQqC,EACRlC,EAAW,KACX,GAAI,CACF,OAAOe,EAAWV,EAAI,EAAI,CAC5B,OAASgC,EAAK,CACZC,GAAYD,CAAG,CACjB,QAAC,CACCxC,EAAQsC,EACRnC,EAAWoC,CACb,CACF,CAgCA,KAAM,CAACG,GAAcC,EAAe,EAAiBxB,EAAa,EAAK,EA4DvE,SAASM,IAAa,CAEpB,GAAI,KAAK,SAA8C,KAAK,MAC1D,GAAuC,KAAK,QAAW5B,EAAOgC,EAAkB,IAAI,MAAO,CACzF,MAAMe,EAAUxC,EAChBA,EAAU,KACVc,EAAW,IAAM2B,GAAa,IAAI,EAAG,EAAK,EAC1CzC,EAAUwC,CACZ,CAEF,GAAIzC,EAAU,CACZ,MAAM2C,EAAQ,KAAK,UAAY,KAAK,UAAU,OAAS,EAClD3C,EAAS,SAIZA,EAAS,QAAQ,KAAK,IAAI,EAC1BA,EAAS,YAAY,KAAK2C,CAAK,IAJ/B3C,EAAS,QAAU,CAAC,IAAI,EACxBA,EAAS,YAAc,CAAC2C,CAAK,GAK1B,KAAK,WAIR,KAAK,UAAU,KAAK3C,CAAQ,EAC5B,KAAK,cAAc,KAAKA,EAAS,QAAQ,OAAS,CAAC,IAJnD,KAAK,UAAY,CAACA,CAAQ,EAC1B,KAAK,cAAgB,CAACA,EAAS,QAAQ,OAAS,CAAC,EAKrD,CAEA,OAAO,KAAK,KACd,CACA,SAASqB,GAAYuB,EAAM3B,EAAO4B,EAAQ,CACxC,IAAInC,EAA2FkC,EAAK,MACpG,OAAI,CAACA,EAAK,YAAc,CAACA,EAAK,WAAWlC,EAASO,CAAK,KAQ9C2B,EAAK,MAAQ3B,EAChB2B,EAAK,WAAaA,EAAK,UAAU,QACnC7B,EAAW,IAAM,CACf,QAAS+B,EAAI,EAAGA,EAAIF,EAAK,UAAU,OAAQE,GAAK,EAAG,CACjD,MAAMZ,EAAIU,EAAK,UAAUE,CAAC,EACpBC,EAAoBjD,IAAcA,GAAW,QAC/CiD,GAAqBjD,GAAW,SAAS,IAAIoC,CAAC,GAC9Ca,EAAoB,CAACb,EAAE,OAAS,CAACA,EAAE,SACjCA,EAAE,KAAMjC,EAAQ,KAAKiC,CAAC,EAAOhC,EAAQ,KAAKgC,CAAC,EAC3CA,EAAE,WAAWc,GAAed,CAAC,GAE9Ba,IAAmBb,EAAE,MAAQxC,EACpC,CACA,GAAIO,EAAQ,OAAS,IACnB,MAAAA,EAAU,CAAA,EAEJ,IAAI,KAEd,EAAG,EAAK,GAGLgB,CACT,CACA,SAASS,EAAkBkB,EAAM,CAC/B,GAAI,CAACA,EAAK,GAAI,OACd9B,EAAU8B,CAAI,EACd,MAAMK,EAAO9C,GACb+C,GAAeN,EAAuFA,EAAK,MAAOK,CAAI,CAWxH,CACA,SAASC,GAAeN,EAAM3B,EAAOgC,EAAM,CACzC,IAAIE,EACJ,MAAM3C,EAAQX,EACZU,EAAWP,EACbA,EAAWH,EAAQ+C,EACnB,GAAI,CACFO,EAAYP,EAAK,GAAG3B,CAAK,CAC3B,OAASoB,EAAK,CACZ,OAAIO,EAAK,OAMLA,EAAK,MAAQlD,EACbkD,EAAK,OAASA,EAAK,MAAM,QAAQ9B,CAAS,EAC1C8B,EAAK,MAAQ,MAGjBA,EAAK,UAAYK,EAAO,EACjBX,GAAYD,CAAG,CACxB,QAAC,CACCrC,EAAWO,EACXV,EAAQW,CACV,EACI,CAACoC,EAAK,WAAaA,EAAK,WAAaK,KACnCL,EAAK,WAAa,MAAQ,cAAeA,EAC3CvB,GAAYuB,EAAMO,CAAe,EAI5BP,EAAK,MAAQO,EACpBP,EAAK,UAAYK,EAErB,CACA,SAASxB,GAAkBpB,EAAI+C,EAAMC,EAAMC,EAAQ5D,EAAOwB,EAAS,CACjE,MAAMM,EAAI,CACR,GAAAnB,EACA,MAAOiD,EACP,UAAW,KACX,MAAO,KACP,QAAS,KACT,YAAa,KACb,SAAU,KACV,MAAOF,EACP,MAAOvD,EACP,QAASA,EAAQA,EAAM,QAAU,KACjC,KAAAwD,CACJ,EAKE,OAAIxD,IAAU,MAAgBA,IAAUD,KAI/BC,EAAM,MAA8BA,EAAM,MAAM,KAAK2B,CAAC,EAAzC3B,EAAM,MAAQ,CAAC2B,CAAC,GAgB/BA,CACT,CACA,SAAS+B,GAAOX,EAAM,CAEpB,GAAuCA,EAAK,QAAW,EAAG,OAC1D,GAAuCA,EAAK,QAAWjD,GAAS,OAAO+C,GAAaE,CAAI,EACxF,GAAIA,EAAK,UAAY/B,EAAQ+B,EAAK,SAAS,UAAU,EAAG,OAAOA,EAAK,SAAS,QAAQ,KAAKA,CAAI,EAC9F,MAAMY,EAAY,CAACZ,CAAI,EACvB,MAAQA,EAAOA,EAAK,SAAW,CAACA,EAAK,WAAaA,EAAK,UAAYzC,KAE3ByC,EAAK,OAAOY,EAAU,KAAKZ,CAAI,EAEvE,QAASE,EAAIU,EAAU,OAAS,EAAGV,GAAK,EAAGA,IASzC,GARAF,EAAOY,EAAUV,CAAC,EAQqBF,EAAK,QAAWlD,EACrDgC,EAAkBkB,CAAI,UACsBA,EAAK,QAAWjD,GAAS,CACrE,MAAM8C,EAAUxC,EAChBA,EAAU,KACVc,EAAW,IAAM2B,GAAaE,EAAMY,EAAU,CAAC,CAAC,EAAG,EAAK,EACxDvD,EAAUwC,CACZ,CAEJ,CACA,SAAS1B,EAAWV,EAAI+C,EAAM,CAC5B,GAAInD,EAAS,OAAOI,EAAE,EACtB,IAAIoD,EAAO,GACNL,IAAMnD,EAAU,CAAA,GACjBC,EAASuD,EAAO,GAAUvD,EAAU,CAAA,EACxCC,KACA,GAAI,CACF,MAAMuD,EAAMrD,EAAE,EACd,OAAAsD,GAAgBF,CAAI,EACbC,CACT,OAASrB,EAAK,CACPoB,IAAMvD,EAAU,MACrBD,EAAU,KACVqC,GAAYD,CAAG,CACjB,CACF,CACA,SAASsB,GAAgBF,EAAM,CAK7B,GAJIxD,IAC6ER,GAASQ,CAAO,EAC/FA,EAAU,MAERwD,EAAM,OAmCV,MAAMG,EAAI1D,EACVA,EAAU,KACN0D,EAAE,QAAQ7C,EAAW,IAAMvB,GAAWoE,CAAC,EAAG,EAAK,CAErD,CACA,SAASnE,GAASoE,EAAO,CACvB,QAASf,EAAI,EAAGA,EAAIe,EAAM,OAAQf,IAAKS,GAAOM,EAAMf,CAAC,CAAC,CACxD,CAkBA,SAASlB,GAAeiC,EAAO,CAC7B,IAAIf,EACFgB,EAAa,EACf,IAAKhB,EAAI,EAAGA,EAAIe,EAAM,OAAQf,IAAK,CACjC,MAAMc,EAAIC,EAAMf,CAAC,EACZc,EAAE,KAAqBC,EAAMC,GAAY,EAAIF,EAArCL,GAAOK,CAAC,CACvB,CAcA,IAAKd,EAAI,EAAGA,EAAIgB,EAAYhB,IAAKS,GAAOM,EAAMf,CAAC,CAAC,CAClD,CACA,SAASJ,GAAaE,EAAMmB,EAAQ,CAEUnB,EAAK,MAAQ,EACzD,QAASE,EAAI,EAAGA,EAAIF,EAAK,QAAQ,OAAQE,GAAK,EAAG,CAC/C,MAAMkB,EAASpB,EAAK,QAAQE,CAAC,EAC7B,GAAIkB,EAAO,QAAS,CAClB,MAAMV,EAA4CU,EAAO,MACrDV,IAAU5D,EACRsE,IAAWD,IAAW,CAACC,EAAO,WAAaA,EAAO,UAAY7D,KAAYoD,GAAOS,CAAM,EAClFV,IAAU3D,IAAS+C,GAAasB,EAAQD,CAAM,CAC3D,CACF,CACF,CACA,SAASf,GAAeJ,EAAM,CAE5B,QAASE,EAAI,EAAGA,EAAIF,EAAK,UAAU,OAAQE,GAAK,EAAG,CACjD,MAAMZ,EAAIU,EAAK,UAAUE,CAAC,EACWZ,EAAE,QACUA,EAAE,MAAQvC,GACrDuC,EAAE,KAAMjC,EAAQ,KAAKiC,CAAC,EAAOhC,EAAQ,KAAKgC,CAAC,EAC/CA,EAAE,WAAac,GAAed,CAAC,EAEnC,CACF,CACA,SAASpB,EAAU8B,EAAM,CACvB,IAAIE,EACJ,GAAIF,EAAK,QACP,KAAOA,EAAK,QAAQ,QAAQ,CAC1B,MAAMoB,EAASpB,EAAK,QAAQ,IAAG,EAC7BqB,EAAQrB,EAAK,YAAY,IAAG,EAC5BsB,EAAMF,EAAO,UACf,GAAIE,GAAOA,EAAI,OAAQ,CACrB,MAAMC,EAAID,EAAI,IAAG,EACf/C,EAAI6C,EAAO,cAAc,IAAG,EAC1BC,EAAQC,EAAI,SACdC,EAAE,YAAYhD,CAAC,EAAI8C,EACnBC,EAAID,CAAK,EAAIE,EACbH,EAAO,cAAcC,CAAK,EAAI9C,EAElC,CACF,CAEF,GAAIyB,EAAK,OAAQ,CACf,IAAKE,EAAIF,EAAK,OAAO,OAAS,EAAGE,GAAK,EAAGA,IAAKhC,EAAU8B,EAAK,OAAOE,CAAC,CAAC,EACtE,OAAOF,EAAK,MACd,CAGO,GAAIA,EAAK,MAAO,CACrB,IAAKE,EAAIF,EAAK,MAAM,OAAS,EAAGE,GAAK,EAAGA,IAAKhC,EAAU8B,EAAK,MAAME,CAAC,CAAC,EACpEF,EAAK,MAAQ,IACf,CACA,GAAIA,EAAK,SAAU,CACjB,IAAKE,EAAIF,EAAK,SAAS,OAAS,EAAGE,GAAK,EAAGA,IAAKF,EAAK,SAASE,CAAC,EAAC,EAChEF,EAAK,SAAW,IAClB,CAC2DA,EAAK,MAAQ,CAC1E,CAUA,SAASwB,GAAU/B,EAAK,CACtB,OAAIA,aAAe,MAAcA,EAC1B,IAAI,MAAM,OAAOA,GAAQ,SAAWA,EAAM,gBAAiB,CAChE,MAAOA,CACX,CAAG,CACH,CAQA,SAASC,GAAYD,EAAK7B,EAAQX,EAAO,CAG7B,MADIuE,GAAU/B,CAAG,CAQ7B,CAgGA,MAAMgC,GAAW,OAAO,UAAU,EAClC,SAASC,GAAQC,EAAG,CAClB,QAASzB,EAAI,EAAGA,EAAIyB,EAAE,OAAQzB,IAAKyB,EAAEzB,CAAC,EAAC,CACzC,CACA,SAAS0B,GAASC,EAAMC,EAAOxD,EAAU,CAAA,EAAI,CAC3C,IAAIyD,EAAQ,CAAA,EACVC,EAAS,CAAA,EACTC,EAAY,CAAA,EACZC,EAAM,EACNC,EAAUL,EAAM,OAAS,EAAI,CAAA,EAAK,KACpC,OAAA3C,GAAU,IAAMuC,GAAQO,CAAS,CAAC,EAC3B,IAAM,CACX,IAAIG,EAAWP,EAAI,GAAM,CAAA,EACvBQ,EAASD,EAAS,OAClBlC,EACAoC,EACF,OAAAF,EAAS1F,EAAM,EACRuB,EAAQ,IAAM,CACnB,IAAIsE,EAAYC,EAAgBC,EAAMC,EAAeC,EAAaC,EAAOC,EAAKC,EAAQC,EACtF,GAAIV,IAAW,EACTH,IAAQ,IACVR,GAAQO,CAAS,EACjBA,EAAY,CAAA,EACZF,EAAQ,CAAA,EACRC,EAAS,CAAA,EACTE,EAAM,EACNC,IAAYA,EAAU,KAEpB7D,EAAQ,WACVyD,EAAQ,CAACN,EAAQ,EACjBO,EAAO,CAAC,EAAIxE,EAAWwF,IACrBf,EAAU,CAAC,EAAIe,EACR1E,EAAQ,SAAQ,EACxB,EACD4D,EAAM,WAGDA,IAAQ,EAAG,CAElB,IADAF,EAAS,IAAI,MAAMK,CAAM,EACpBC,EAAI,EAAGA,EAAID,EAAQC,IACtBP,EAAMO,CAAC,EAAIF,EAASE,CAAC,EACrBN,EAAOM,CAAC,EAAI9E,EAAWyF,CAAM,EAE/Bf,EAAMG,CACR,KAAO,CAIL,IAHAI,EAAO,IAAI,MAAMJ,CAAM,EACvBK,EAAgB,IAAI,MAAML,CAAM,EAChCF,IAAYQ,EAAc,IAAI,MAAMN,CAAM,GACrCO,EAAQ,EAAGC,EAAM,KAAK,IAAIX,EAAKG,CAAM,EAAGO,EAAQC,GAAOd,EAAMa,CAAK,IAAMR,EAASQ,CAAK,EAAGA,IAAQ,CACtG,IAAKC,EAAMX,EAAM,EAAGY,EAAST,EAAS,EAAGQ,GAAOD,GAASE,GAAUF,GAASb,EAAMc,CAAG,IAAMT,EAASU,CAAM,EAAGD,IAAOC,IAClHL,EAAKK,CAAM,EAAId,EAAOa,CAAG,EACzBH,EAAcI,CAAM,EAAIb,EAAUY,CAAG,EACrCV,IAAYQ,EAAYG,CAAM,EAAIX,EAAQU,CAAG,GAI/C,IAFAN,EAAa,IAAI,IACjBC,EAAiB,IAAI,MAAMM,EAAS,CAAC,EAChCR,EAAIQ,EAAQR,GAAKM,EAAON,IAC3BS,EAAOX,EAASE,CAAC,EACjBpC,EAAIqC,EAAW,IAAIQ,CAAI,EACvBP,EAAeF,CAAC,EAAIpC,IAAM,OAAY,GAAKA,EAC3CqC,EAAW,IAAIQ,EAAMT,CAAC,EAExB,IAAKpC,EAAI0C,EAAO1C,GAAK2C,EAAK3C,IACxB6C,EAAOhB,EAAM7B,CAAC,EACdoC,EAAIC,EAAW,IAAIQ,CAAI,EACnBT,IAAM,QAAaA,IAAM,IAC3BG,EAAKH,CAAC,EAAIN,EAAO9B,CAAC,EAClBwC,EAAcJ,CAAC,EAAIL,EAAU/B,CAAC,EAC9BiC,IAAYQ,EAAYL,CAAC,EAAIH,EAAQjC,CAAC,GACtCoC,EAAIE,EAAeF,CAAC,EACpBC,EAAW,IAAIQ,EAAMT,CAAC,GACjBL,EAAU/B,CAAC,EAAC,EAErB,IAAKoC,EAAIM,EAAON,EAAID,EAAQC,IACtBA,KAAKG,GACPT,EAAOM,CAAC,EAAIG,EAAKH,CAAC,EAClBL,EAAUK,CAAC,EAAII,EAAcJ,CAAC,EAC1BH,IACFA,EAAQG,CAAC,EAAIK,EAAYL,CAAC,EAC1BH,EAAQG,CAAC,EAAEA,CAAC,IAETN,EAAOM,CAAC,EAAI9E,EAAWyF,CAAM,EAEtCjB,EAASA,EAAO,MAAM,EAAGE,EAAMG,CAAM,EACrCN,EAAQK,EAAS,MAAM,CAAC,CAC1B,CACA,OAAOJ,CACT,CAAC,EACD,SAASiB,EAAOD,EAAU,CAExB,GADAf,EAAUK,CAAC,EAAIU,EACXb,EAAS,CACX,KAAM,CAAC5D,EAAG2E,CAAG,EAAI9E,EAAakE,CAAC,EAC/B,OAAAH,EAAQG,CAAC,EAAIY,EACNpB,EAAMM,EAASE,CAAC,EAAG/D,CAAC,CAC7B,CACA,OAAOuD,EAAMM,EAASE,CAAC,CAAC,CAC1B,CACF,CACF,CAmEA,SAASa,EAAgBC,EAAMC,EAAO,CAUpC,OAAOpF,EAAQ,IAAMmF,EAAKC,GAAS,CAAA,CAAE,CAAC,CACxC,CA8LA,SAASC,GAAID,EAAO,CAClB,MAAME,EAAW,aAAcF,GAAS,CACtC,SAAU,IAAMA,EAAM,QAC1B,EACE,OAAOpE,EAAW2C,GAAS,IAAMyB,EAAM,KAAMA,EAAM,SAAUE,GAAY,MAAS,CAAC,CACrF,CCxyCA,MAAMC,GAAO/F,GAAMwB,EAAW,IAAMxB,EAAE,CAAE,EAExC,SAASgG,GAAgBC,EAAYlH,EAAGC,EAAG,CACzC,IAAIkH,EAAUlH,EAAE,OACdmH,EAAOpH,EAAE,OACTqH,EAAOF,EACPG,EAAS,EACTC,EAAS,EACTC,EAAQxH,EAAEoH,EAAO,CAAC,EAAE,YACpBK,EAAM,KACR,KAAOH,EAASF,GAAQG,EAASF,GAAM,CACrC,GAAIrH,EAAEsH,CAAM,IAAMrH,EAAEsH,CAAM,EAAG,CAC3BD,IACAC,IACA,QACF,CACA,KAAOvH,EAAEoH,EAAO,CAAC,IAAMnH,EAAEoH,EAAO,CAAC,GAC/BD,IACAC,IAEF,GAAID,IAASE,EAAQ,CACnB,MAAM9D,EAAO6D,EAAOF,EAAUI,EAAStH,EAAEsH,EAAS,CAAC,EAAE,YAActH,EAAEoH,EAAOE,CAAM,EAAIC,EACtF,KAAOD,EAASF,GAAMH,EAAW,aAAajH,EAAEsH,GAAQ,EAAG/D,CAAI,CACjE,SAAW6D,IAASE,EAClB,KAAOD,EAASF,IACV,CAACK,GAAO,CAACA,EAAI,IAAIzH,EAAEsH,CAAM,CAAC,IAAGtH,EAAEsH,CAAM,EAAE,OAAM,EACjDA,YAEOtH,EAAEsH,CAAM,IAAMrH,EAAEoH,EAAO,CAAC,GAAKpH,EAAEsH,CAAM,IAAMvH,EAAEoH,EAAO,CAAC,EAAG,CACjE,MAAM5D,EAAOxD,EAAE,EAAEoH,CAAI,EAAE,YACvBF,EAAW,aAAajH,EAAEsH,GAAQ,EAAGvH,EAAEsH,GAAQ,EAAE,WAAW,EAC5DJ,EAAW,aAAajH,EAAE,EAAEoH,CAAI,EAAG7D,CAAI,EACvCxD,EAAEoH,CAAI,EAAInH,EAAEoH,CAAI,CAClB,KAAO,CACL,GAAI,CAACI,EAAK,CACRA,EAAM,IAAI,IACV,IAAI/D,EAAI6D,EACR,KAAO7D,EAAI2D,GAAMI,EAAI,IAAIxH,EAAEyD,CAAC,EAAGA,GAAG,CACpC,CACA,MAAMmB,EAAQ4C,EAAI,IAAIzH,EAAEsH,CAAM,CAAC,EAC/B,GAAIzC,GAAS,KACX,GAAI0C,EAAS1C,GAASA,EAAQwC,EAAM,CAClC,IAAI3D,EAAI4D,EACNI,EAAW,EACXC,EACF,KAAO,EAAEjE,EAAI0D,GAAQ1D,EAAI2D,GAClB,GAAAM,EAAIF,EAAI,IAAIzH,EAAE0D,CAAC,CAAC,IAAM,MAAQiE,IAAM9C,EAAQ6C,IACjDA,IAEF,GAAIA,EAAW7C,EAAQ0C,EAAQ,CAC7B,MAAM/D,EAAOxD,EAAEsH,CAAM,EACrB,KAAOC,EAAS1C,GAAOqC,EAAW,aAAajH,EAAEsH,GAAQ,EAAG/D,CAAI,CAClE,MAAO0D,EAAW,aAAajH,EAAEsH,GAAQ,EAAGvH,EAAEsH,GAAQ,CAAC,CACzD,MAAOA,SACFtH,EAAEsH,GAAQ,EAAE,OAAM,CAC3B,CACF,CACF,CAEA,MAAMM,GAAW,gBACjB,SAASC,GAAOC,EAAMC,EAAS/D,EAAMlC,EAAU,CAAA,EAAI,CACjD,IAAI0E,EACJ,OAAAxF,EAAWkE,GAAW,CACpBsB,EAAWtB,EACX6C,IAAY,SAAWD,EAAI,EAAKE,EAAOD,EAASD,EAAI,EAAIC,EAAQ,WAAa,KAAO,OAAW/D,CAAI,CACrG,EAAGlC,EAAQ,KAAK,EACT,IAAM,CACX0E,EAAQ,EACRuB,EAAQ,YAAc,EACxB,CACF,CACA,SAASE,EAASC,EAAMC,EAAcC,EAAOC,EAAU,CACrD,IAAI7E,EACJ,MAAM8E,EAAS,IAAM,CACnB,MAAMX,EAAIU,EAAW,SAAS,gBAAgB,qCAAsC,UAAU,EAAI,SAAS,cAAc,UAAU,EACnI,OAAAV,EAAE,UAAYO,EACPE,EAAQT,EAAE,QAAQ,WAAW,WAAaU,EAAWV,EAAE,WAAaA,EAAE,QAAQ,UACvF,EACM1G,EAAKkH,EAAe,IAAM1G,EAAQ,IAAM,SAAS,WAAW+B,IAASA,EAAO8E,EAAM,GAAK,EAAI,CAAC,EAAI,KAAO9E,IAASA,EAAO8E,EAAM,IAAK,UAAU,EAAI,EACtJ,OAAArH,EAAG,UAAYA,EACRA,CACT,CACA,SAASsH,EAAeC,EAAYC,EAAW,OAAO,SAAU,CAC9D,MAAM,EAAIA,EAASb,EAAQ,IAAMa,EAASb,EAAQ,EAAI,IAAI,KAC1D,QAAS,EAAI,EAAGc,EAAIF,EAAW,OAAQ,EAAIE,EAAG,IAAK,CACjD,MAAMC,EAAOH,EAAW,CAAC,EACpB,EAAE,IAAIG,CAAI,IACb,EAAE,IAAIA,CAAI,EACVF,EAAS,iBAAiBE,EAAMC,EAAY,EAEhD,CACF,CAWA,SAASC,EAAarF,EAAMmF,EAAM9G,EAAO,CAEnCA,GAAS,KAAM2B,EAAK,gBAAgBmF,CAAI,EAAOnF,EAAK,aAAamF,EAAM9G,CAAK,CAClF,CASA,SAASiH,GAAUtF,EAAM3B,EAAO,CAE1BA,GAAS,KAAM2B,EAAK,gBAAgB,OAAO,EAAOA,EAAK,UAAY3B,CACzE,CACA,SAASkH,GAAiBvF,EAAMmF,EAAMK,EAASC,EAAU,CAEjD,MAAM,QAAQD,CAAO,GACvBxF,EAAK,KAAKmF,CAAI,EAAE,EAAIK,EAAQ,CAAC,EAC7BxF,EAAK,KAAKmF,CAAI,MAAM,EAAIK,EAAQ,CAAC,GAC5BxF,EAAK,KAAKmF,CAAI,EAAE,EAAIK,CAK/B,CAoBA,SAASE,GAAM1F,EAAM3B,EAAOkB,EAAM,CAChC,GAAI,CAAClB,EAAO,OAAOkB,EAAO8F,EAAarF,EAAM,OAAO,EAAI3B,EACxD,MAAMsH,EAAY3F,EAAK,MACvB,GAAI,OAAO3B,GAAU,SAAU,OAAOsH,EAAU,QAAUtH,EAC1D,OAAOkB,GAAS,WAAaoG,EAAU,QAAUpG,EAAO,QACxDA,IAASA,EAAO,IAChBlB,IAAUA,EAAQ,IAClB,IAAIuH,EAAGrH,EACP,IAAKA,KAAKgB,EACRlB,EAAME,CAAC,GAAK,MAAQoH,EAAU,eAAepH,CAAC,EAC9C,OAAOgB,EAAKhB,CAAC,EAEf,IAAKA,KAAKF,EACRuH,EAAIvH,EAAME,CAAC,EACPqH,IAAMrG,EAAKhB,CAAC,IACdoH,EAAU,YAAYpH,EAAGqH,CAAC,EAC1BrG,EAAKhB,CAAC,EAAIqH,GAGd,OAAOrG,CACT,CACA,SAASsG,GAAiB7F,EAAMmF,EAAM9G,EAAO,CAC3CA,GAAS,KAAO2B,EAAK,MAAM,YAAYmF,EAAM9G,CAAK,EAAI2B,EAAK,MAAM,eAAemF,CAAI,CACtF,CAoBA,SAASW,GAAIrI,EAAI8G,EAASwB,EAAK,CAC7B,OAAO9H,EAAQ,IAAMR,EAAG8G,EAASwB,CAAG,CAAC,CACvC,CACA,SAASvB,EAAOwB,EAAQC,EAAUC,EAAQC,EAAS,CAEjD,GADID,IAAW,QAAa,CAACC,IAASA,EAAU,CAAA,GAC5C,OAAOF,GAAa,WAAY,OAAOG,GAAiBJ,EAAQC,EAAUE,EAASD,CAAM,EAC7FvH,EAAmBb,GAAWsI,GAAiBJ,EAAQC,EAAQ,EAAInI,EAASoI,CAAM,EAAGC,CAAO,CAC9F,CAkJA,SAASf,GAAapE,EAAG,CAIvB,IAAIhB,EAAOgB,EAAE,OACb,MAAMqF,EAAM,KAAKrF,EAAE,IAAI,GACjBsF,EAAYtF,EAAE,OACduF,EAAmBvF,EAAE,cACrBwF,EAAWnI,GAAS,OAAO,eAAe2C,EAAG,SAAU,CAC3D,aAAc,GACd,MAAA3C,CACJ,CAAG,EACKoI,EAAa,IAAM,CACvB,MAAMjB,EAAUxF,EAAKqG,CAAG,EACxB,GAAIb,GAAW,CAACxF,EAAK,SAAU,CAC7B,MAAM0G,EAAO1G,EAAK,GAAGqG,CAAG,MAAM,EAE9B,GADAK,IAAS,OAAYlB,EAAQ,KAAKxF,EAAM0G,EAAM1F,CAAC,EAAIwE,EAAQ,KAAKxF,EAAMgB,CAAC,EACnEA,EAAE,aAAc,MACtB,CACA,OAAAhB,EAAK,MAAQ,OAAOA,EAAK,MAAS,UAAY,CAACA,EAAK,KAAK,QAAUA,EAAK,SAASgB,EAAE,MAAM,GAAKwF,EAASxG,EAAK,IAAI,EACzG,EACT,EACM2G,EAAa,IAAM,CACvB,KAAOF,EAAU,IAAOzG,EAAOA,EAAK,QAAUA,EAAK,YAAcA,EAAK,OAAM,CAC9E,EAQA,GAPA,OAAO,eAAegB,EAAG,gBAAiB,CACxC,aAAc,GACd,KAAM,CACJ,OAAOhB,GAAQ,QACjB,CACJ,CAAG,EAEGgB,EAAE,aAAc,CAClB,MAAM4F,EAAO5F,EAAE,aAAY,EAC3BwF,EAASI,EAAK,CAAC,CAAC,EAChB,QAAS1G,EAAI,EAAGA,EAAI0G,EAAK,OAAS,IAChC5G,EAAO4G,EAAK1G,CAAC,EACT,EAACuG,EAAU,GAFoBvG,IAAK,CAGxC,GAAIF,EAAK,OAAQ,CACfA,EAAOA,EAAK,OACZ2G,EAAU,EACV,KACF,CACA,GAAI3G,EAAK,aAAeuG,EACtB,KAEJ,CACF,MACKI,EAAU,EACfH,EAASF,CAAS,CACpB,CACA,SAASF,GAAiBJ,EAAQ3H,EAAOP,EAASoI,EAAQW,EAAa,CAWrE,KAAO,OAAO/I,GAAY,YAAYA,EAAUA,EAAO,EACvD,GAAIO,IAAUP,EAAS,OAAOA,EAC9B,MAAMqG,EAAI,OAAO9F,EACfyI,EAAQZ,IAAW,OAErB,GADAF,EAASc,GAAShJ,EAAQ,CAAC,GAAKA,EAAQ,CAAC,EAAE,YAAckI,EACrD7B,IAAM,UAAYA,IAAM,SAAU,CAEpC,GAAIA,IAAM,WACR9F,EAAQA,EAAM,SAAQ,EAClBA,IAAUP,GAAS,OAAOA,EAEhC,GAAIgJ,EAAO,CACT,IAAI9G,EAAOlC,EAAQ,CAAC,EAChBkC,GAAQA,EAAK,WAAa,EAC5BA,EAAK,OAAS3B,IAAU2B,EAAK,KAAO3B,GAC/B2B,EAAO,SAAS,eAAe3B,CAAK,EAC3CP,EAAUiJ,EAAcf,EAAQlI,EAASoI,EAAQlG,CAAI,CACvD,MACMlC,IAAY,IAAM,OAAOA,GAAY,SACvCA,EAAUkI,EAAO,WAAW,KAAO3H,EAC9BP,EAAUkI,EAAO,YAAc3H,CAE1C,SAAWA,GAAS,MAAQ8F,IAAM,UAEhCrG,EAAUiJ,EAAcf,EAAQlI,EAASoI,CAAM,MAC1C,IAAI/B,IAAM,WACf,OAAAxF,EAAmB,IAAM,CACvB,IAAIiH,EAAIvH,EAAK,EACb,KAAO,OAAOuH,GAAM,YAAYA,EAAIA,EAAC,EACrC9H,EAAUsI,GAAiBJ,EAAQJ,EAAG9H,EAASoI,CAAM,CACvD,CAAC,EACM,IAAMpI,EACR,GAAI,MAAM,QAAQO,CAAK,EAAG,CAC/B,MAAM2I,EAAQ,CAAA,EACRC,EAAenJ,GAAW,MAAM,QAAQA,CAAO,EACrD,GAAIoJ,GAAuBF,EAAO3I,EAAOP,EAAS+I,CAAW,EAC3D,OAAAlI,EAAmB,IAAMb,EAAUsI,GAAiBJ,EAAQgB,EAAOlJ,EAASoI,EAAQ,EAAI,CAAC,EAClF,IAAMpI,EAWf,GAAIkJ,EAAM,SAAW,GAEnB,GADAlJ,EAAUiJ,EAAcf,EAAQlI,EAASoI,CAAM,EAC3CY,EAAO,OAAOhJ,OACTmJ,EACLnJ,EAAQ,SAAW,EACrBqJ,GAAYnB,EAAQgB,EAAOd,CAAM,EAC5BzC,GAAgBuC,EAAQlI,EAASkJ,CAAK,GAE7ClJ,GAAWiJ,EAAcf,CAAM,EAC/BmB,GAAYnB,EAAQgB,CAAK,GAE3BlJ,EAAUkJ,CACZ,SAAW3I,EAAM,SAAU,CAEzB,GAAI,MAAM,QAAQP,CAAO,EAAG,CAC1B,GAAIgJ,EAAO,OAAOhJ,EAAUiJ,EAAcf,EAAQlI,EAASoI,EAAQ7H,CAAK,EACxE0I,EAAcf,EAAQlI,EAAS,KAAMO,CAAK,CAC5C,MAAWP,GAAW,MAAQA,IAAY,IAAM,CAACkI,EAAO,WACtDA,EAAO,YAAY3H,CAAK,EACnB2H,EAAO,aAAa3H,EAAO2H,EAAO,UAAU,EACnDlI,EAAUO,CACZ,EACA,OAAOP,CACT,CACA,SAASoJ,GAAuBE,EAAYJ,EAAOlJ,EAASuJ,EAAQ,CAClE,IAAIC,EAAU,GACd,QAASpH,EAAI,EAAGgC,EAAM8E,EAAM,OAAQ9G,EAAIgC,EAAKhC,IAAK,CAChD,IAAI6C,EAAOiE,EAAM9G,CAAC,EAChBX,EAAOzB,GAAWA,EAAQsJ,EAAW,MAAM,EAC3CjD,EACF,GAAI,EAAApB,GAAQ,MAAQA,IAAS,IAAQA,IAAS,IAAc,IAAKoB,EAAI,OAAOpB,IAAU,UAAYA,EAAK,SACrGqE,EAAW,KAAKrE,CAAI,UACX,MAAM,QAAQA,CAAI,EAC3BuE,EAAUJ,GAAuBE,EAAYrE,EAAMxD,CAAI,GAAK+H,UACnDnD,IAAM,WACf,GAAIkD,EAAQ,CACV,KAAO,OAAOtE,GAAS,YAAYA,EAAOA,EAAI,EAC9CuE,EAAUJ,GAAuBE,EAAY,MAAM,QAAQrE,CAAI,EAAIA,EAAO,CAACA,CAAI,EAAG,MAAM,QAAQxD,CAAI,EAAIA,EAAO,CAACA,CAAI,CAAC,GAAK+H,CAC5H,MACEF,EAAW,KAAKrE,CAAI,EACpBuE,EAAU,OAEP,CACL,MAAMjJ,EAAQ,OAAO0E,CAAI,EACrBxD,GAAQA,EAAK,WAAa,GAAKA,EAAK,OAASlB,EAAO+I,EAAW,KAAK7H,CAAI,EAAO6H,EAAW,KAAK,SAAS,eAAe/I,CAAK,CAAC,CACnI,CACF,CACA,OAAOiJ,CACT,CACA,SAASH,GAAYnB,EAAQgB,EAAOd,EAAS,KAAM,CACjD,QAAS,EAAI,EAAGhE,EAAM8E,EAAM,OAAQ,EAAI9E,EAAK,IAAK8D,EAAO,aAAagB,EAAM,CAAC,EAAGd,CAAM,CACxF,CACA,SAASa,EAAcf,EAAQlI,EAASoI,EAAQqB,EAAa,CAC3D,GAAIrB,IAAW,OAAW,OAAOF,EAAO,YAAc,GACtD,MAAMhG,EAAOuH,GAAe,SAAS,eAAe,EAAE,EACtD,GAAIzJ,EAAQ,OAAQ,CAClB,IAAI0J,EAAW,GACf,QAAStH,EAAIpC,EAAQ,OAAS,EAAGoC,GAAK,EAAGA,IAAK,CAC5C,MAAMuH,EAAK3J,EAAQoC,CAAC,EACpB,GAAIF,IAASyH,EAAI,CACf,MAAMC,EAAWD,EAAG,aAAezB,EAC/B,CAACwB,GAAY,CAACtH,EAAGwH,EAAW1B,EAAO,aAAahG,EAAMyH,CAAE,EAAIzB,EAAO,aAAahG,EAAMkG,CAAM,EAAOwB,GAAYD,EAAG,OAAM,CAC9H,MAAOD,EAAW,EACpB,CACF,MAAOxB,EAAO,aAAahG,EAAMkG,CAAM,EACvC,MAAO,CAAClG,CAAI,CACd,CAiDA,MAAM2H,GAAgB,6BACtB,SAASC,GAAcC,EAASjD,EAAQ,GAAOkD,EAAK,OAAW,CAC7D,OAAOlD,EAAQ,SAAS,gBAAgB+C,GAAeE,CAAO,EAAI,SAAS,cAAcA,EAAS,CAChG,GAAAC,CACJ,CAAG,CACH,CAKA,SAASC,GAAO1E,EAAO,CACrB,KAAM,CACF,UAAA2E,CACN,EAAQ3E,EACJ6C,EAAS,SAAS,eAAe,EAAE,EACnC+B,EAAQ,IAAM5E,EAAM,OAAS,SAAS,KACtCzF,EAAQwB,GAAQ,EAClB,IAAI8I,EAEJ,OAAAnJ,EAAa,IAAM,CAEjBmJ,IAAYA,EAAU7I,GAAazB,EAAO,IAAMqB,EAAW,IAAMoE,EAAM,QAAQ,CAAC,GAChF,MAAMoE,EAAKQ,EAAK,EAChB,GAAIR,aAAc,gBAAiB,CACjC,KAAM,CAACU,EAAOC,CAAQ,EAAIhK,EAAa,EAAK,EACtCiK,EAAU,IAAMD,EAAS,EAAI,EACnC5K,EAAWkE,GAAW8C,EAAOiD,EAAI,IAAOU,EAAK,EAAiBzG,EAAO,EAAnBwG,EAAO,EAAgB,IAAI,CAAC,EAC9E/I,GAAUkJ,CAAO,CACnB,KAAO,CACL,MAAMC,EAAYV,GAAcvE,EAAM,MAAQ,IAAM,MAAOA,EAAM,KAAK,EACpEkF,EAAaP,GAAaM,EAAU,aAAeA,EAAU,aAAa,CACxE,KAAM,MAChB,CAAS,EAAIA,EACP,OAAO,eAAeA,EAAW,SAAU,CACzC,KAAM,CACJ,OAAOpC,EAAO,UAChB,EACA,aAAc,EACtB,CAAO,EACD1B,EAAO+D,EAAYL,CAAO,EAC1BT,EAAG,YAAYa,CAAS,EACxBjF,EAAM,KAAOA,EAAM,IAAIiF,CAAS,EAChCnJ,GAAU,IAAMsI,EAAG,YAAYa,CAAS,CAAC,CAC3C,CACF,EAAG,OAAW,CACZ,OAAQ,EACZ,CAAG,EACMpC,CACT,u65PC3uBA,MAAMsC,GAA4BA,IAC9BC,GAAAA,g2pBCDJ,MAAMC,GAAwBA,IAC9BD,GAAAA,szuJCIA,MAAME,GAAuCA,CAAC,CAAEC,SAAAA,CAAS,IAAM,CAG7D,MAAMC,EAAoBC,mBAG1B,OAAA,IAAA,CAAA,IAAAC,EAAAN,GAAAA,EAAAO,EAAAD,EAAAE,WAAAC,OAAAA,EAAA,IAAAC,EAAAH,EAAA,YASiB,gBAAgB,CAACJ,EAAAA,EAAaC,CAAiB,GAAG,CAAA,EAAAE,CAAA,GAAA,CA+HpE,ECvFM,SAASK,EAAUC,EAAWC,EAAaC,EAAa,CAC3D,OAAIF,EAAIC,IAAKD,EAAIC,GACbD,EAAIE,IAAKF,EAAIE,GACVF,CACX,CAQO,SAASG,GAAiBC,EAA6BC,EAA6B,CACvF,IAAIC,EAAKD,EAAE,EAAID,EAAE,EACbG,EAAKF,EAAE,EAAID,EAAE,EACbI,EAAM,KAAK,KAAKF,EAAGA,EAAKC,EAAGA,CAAE,EACjC,MAAO,CAAC,KAAK,KAAKD,CAAE,EAAI,KAAK,KAAKC,EAAKC,CAAG,EAAI,IAAM,KAAK,EAC7D,CA0FA,IAAIC,EAEJ,SAASC,GAAYC,EAAoB,CACvC,MAAML,EAAKK,EAAQ,CAAC,EAAE,QAAUA,EAAQ,CAAC,EAAE,QACrCJ,EAAKI,EAAQ,CAAC,EAAE,QAAUA,EAAQ,CAAC,EAAE,QAC3C,OAAO,KAAK,KAAKL,EAAGA,EAAKC,EAAGA,CAAE,CAChC,CAEO,SAASK,IAAc,CAE1B,MAAMC,EAAM,SAAS,cAAc,KAAK,EAClCC,EAAUD,EAAI,aAAa,SAAS,EAAG,MAAM,GAAG,EAAE,IAAI,MAAM,EAClEJ,EAAY,CACR,WAAYK,EACZ,WAAYA,CAAA,EAGhB,MAAMC,EAAO,CAACC,EAAeC,IAAiB,CAE1CA,EAAKA,EAAG,gBAAgBJ,EAAI,aAAA,EAAgB,SAAS,EAGrD,GAAI,CAACb,EAAGkB,EAAGC,EAAOC,CAAM,EAAIP,EAC3B,aAAa,SAAS,EACtB,MAAM,GAAG,EACT,IAAI,MAAM,EACX,MAAMQ,EACNF,GAASV,EAAU,WAAW,CAAC,EAAIA,EAAU,WAAW,CAAC,GACzDO,GAAS,KAAK,IAAI,GAAKK,CAAY,EAGnC,GAAI,CAACC,EAAQC,CAAM,EAAI,EAAEN,EAAG,EAAIjB,GAAKmB,GAAQF,EAAG,EAAIC,GAAKE,CAAM,EAG3D,CAACI,EAAQC,CAAO,EAAI,CACxB,KAAK,IAAIhB,EAAU,WAAW,CAAC,EAAGU,EAAQA,EAAQH,CAAK,EACvD,KAAK,IAAIP,EAAU,WAAW,CAAC,EAAGW,EAASA,EAASJ,CAAK,CAAA,EAErDU,EAAK,KAAK,IAAI,EAAGT,EAAG,EAAIK,EAASE,CAAM,EACvCG,EAAK,KAAK,IAAI,EAAGV,EAAG,EAAIM,EAASE,CAAO,EAE5C,CAACD,EAAQC,CAAO,EAAI,CACpB,KAAK,IAAI,GAAI,KAAK,IAAIhB,EAAU,WAAW,CAAC,EAAIiB,EAAIF,CAAM,CAAC,EAC3D,KAAK,IAAI,GAAI,KAAK,IAAIf,EAAU,WAAW,CAAC,EAAIkB,EAAIF,CAAO,CAAC,CAAA,EAI5D,SAAO,MAAMC,CAAE,GACf,OAAO,MAAMC,CAAE,GACf,OAAO,MAAMH,CAAM,GACnB,OAAO,MAAMC,CAAO,IAKpBZ,EAAI,aAAa,UAAW,GAAGa,CAAE,IAAIC,CAAE,IAAIH,CAAM,IAAIC,CAAO,EAAE,CAClE,EAEAZ,EAAI,iBAAiB,QAAUlJ,GAAM,CACjCA,EAAE,eAAA,EAEF,IAAIqJ,EAAQrJ,EAAE,OAAS,IACvBqJ,EAAQ,KAAK,IAAIA,CAAK,EAAI,GAAO,GAAMrJ,EAAE,OAAU,KAAK,IAAIA,EAAE,MAAM,EAAIqJ,EAExE,IAAIC,EAAK,IAAI,SAAStJ,EAAE,QAASA,EAAE,OAAO,EAE1CoJ,EAAKC,EAAOC,CAAE,CAClB,CAAC,EAED,IAAIW,EAA2B,KAC/Bf,EAAI,iBAAiB,aAAelJ,GAAM,CACtC,GAAIA,EAAE,QAAQ,SAAW,EAAG,OAC5BA,EAAE,eAAA,EAEFiK,EADalB,GAAY/I,EAAE,OAAO,CAEtC,CAAC,EAEDkJ,EAAI,iBAAiB,YAAclJ,GAAM,CAErC,GADIA,EAAE,QAAQ,SAAW,GACrBiK,IAAc,KAAM,OACxBjK,EAAE,eAAA,EAEF,MAAMkK,EAAOnB,GAAY/I,EAAE,OAAO,EAC5BqJ,EAAQjB,GAAW6B,EAAYC,EAAO,GAAK,EAAG,IAAK,EAAE,EAE3DD,EAAYC,EAGZ,MAAMZ,EAAK,IAAI,UAAUtJ,EAAE,QAAQ,KAAK,CAAC,EAAG,QAAUA,EAAE,QAAQ,KAAK,CAAC,EAAG,SAAW,GACvDA,EAAE,QAAQ,KAAK,CAAC,EAAG,QAAUA,EAAE,QAAQ,KAAK,CAAC,EAAG,SAAW,CAAA,EAExFoJ,EAAKC,EAAOC,CAAE,CAClB,CAAC,EACDJ,EAAI,iBAAiB,WAAYlJ,GAAK,CAC9BA,EAAE,QAAQ,OAAS,IACnBiK,EAAY,KAEpB,CAAC,CACL,CAEO,SAASE,GAAYC,EAAsB,CAE9C,MAAMC,EAAgC,CAAA,EAMlB,SAAS,iBAAiB,cAAc,EAChD,QAAQ5D,GAAM,CACtB4D,EAAe,KAAK5D,CAA4B,CACpD,CAAC,EAGD,MAAMyC,EAAM,SAAS,cAAc,KAAK,EAExC,IAAIoB,EAAa,GACbC,EAAQ,EACRC,EAAQ,EAGZtB,EAAI,iBAAiB,cAAgBlJ,GAAM,CAEvC,IAAIyK,EAAS,GACO,CAAC,GAAGJ,EAAgB,GAAG,SAAS,iBAAiB,uBAAuB,CAAC,EAC/E,QAAQ5D,GAAM,CACxB,GAAIA,EAAG,SAASzG,EAAE,MAAc,EAAG,CAC/ByK,EAAS,GACT,MACJ,CACJ,CAAC,EACG,CAAAA,IAGJzK,EAAE,eAAA,EACFsK,EAAa,GACbC,EAAQvK,EAAE,QACVwK,EAAQxK,EAAE,QACd,CAAC,EAGDkJ,EAAI,iBAAiB,cAAgBlJ,GAAM,CACvC,GAAIsK,EAAY,CAChB,KAAM,CAACjC,EAAGkB,EAAGC,EAAOC,CAAM,EAAIP,EACzB,aAAa,SAAS,EACtB,MAAM,GAAG,EACT,IAAI,MAAM,EAETP,GAAO4B,EAAQvK,EAAE,SAAWwJ,EAASN,EAAI,YACzCN,GAAO4B,EAAQxK,EAAE,SAAWyJ,EAAUP,EAAI,aAChD,IAAIwB,EAAQ,KAAK,IAAI,EAAGrC,EAAIM,CAAE,EAC1BgC,EAAQ,KAAK,IAAI,EAAGpB,EAAIX,CAAE,EAC1BgC,EAAY,KAAK,IAAI9B,EAAU,WAAW,CAAC,EAAGU,CAAK,EACnDqB,EAAa,KAAK,IAAI/B,EAAU,WAAW,CAAC,EAAGW,CAAM,EACrDiB,EAAQE,GAAa9B,EAAU,WAAW,CAAC,IAC3C4B,EAAQ5B,EAAU,WAAW,CAAC,EAAI8B,GAElCD,EAAQE,GAAc/B,EAAU,WAAW,CAAC,IAC5C6B,EAAQ7B,EAAU,WAAW,CAAC,EAAI+B,GAEtC3B,EAAI,aACA,UACA,GAAGwB,CAAK,IAAIC,CAAK,IAAIC,CAAS,IAAIC,CAAU,EAAA,EAEhDN,EAAQvK,EAAE,QACVwK,EAAQxK,EAAE,OACV,CACJ,CAAC,EAED,SAAS,iBAAiB,YAAa,IAAM,CACzCsK,EAAa,EACjB,CAAC,CACL,CAGO,SAASQ,IAAqB,CACjC,MAAM9K,EAAI,SAAS,cAAc,KAAK,EAChC+K,EAAM/K,EAAE,YAAcA,EAAE,aAExBgL,EAAS,IAAM,CACjB,IAAIC,EAAc,KAAK,IAAI,KAAK,IAAI,OAAO,WAAa,GAAI,IAAI,EAAG,GAAG,EAClEC,EAAe,OAAO,YAAc,IAAM,GAE9CD,EAAc,KAAK,IAAIA,EAAaC,EAAeH,CAAG,EACtDG,EAAeD,EAAcF,EAE7B/K,EAAE,aAAa,QAAS,GAAGiL,CAAW,EAAE,EACxCjL,EAAE,aAAa,SAAU,GAAGkL,CAAY,EAAE,CAC9C,EACA,OAAO,iBAAiB,SAAUF,CAAM,EACxCA,EAAA,CACJ,CAOO,SAASG,GAAaC,EAAyB,CAClD,MAAMlC,EAAM,SAAS,cAAc,KAAK,EACxC,IAAII,EAAKJ,EAAI,eAAA,EACb,OAAAI,EAAG,EAAI8B,EAAI,QACX9B,EAAG,EAAI8B,EAAI,QACJ9B,EAAG,gBAAgBJ,EAAI,aAAA,EAAgB,SAAS,CAC3D,CAOO,SAASmC,EAAQ5O,EAAwC6O,EAAmB,CAC/E,IAAIC,EAA0B,KAE9B,MAAMC,EAASnM,GAAiB,CACxBkM,IAAa,OAAMA,EAAWlM,GAClC,MAAMoM,EAAK,KAAK,KAAKpM,EAAOkM,GAAY,IAAM,EAAE,EAChDA,EAAWlM,EAGK5C,EAAGgP,EAAIpM,CAAI,wBAGQmM,CAAK,EACnCF,IAAA,CACT,EACA,sBAAsBE,CAAK,CAC/B,CC3YO,MAAME,GAAiB,GAOvB,SAASC,GAA0BC,EAAsB,CAE5D,GAAIA,EAAO,EAAG,OAAQ,MAAQ,IAAQA,EAAO,MAG7C,MAAMC,EAAI,EAAID,EAGR,CAACnD,EAAGC,EAAGoD,CAAC,EAAI,CAAC,OAAQ,SAAU,OAAO,EAI5C,OADepD,GAAKD,EAAI,KAAK,MAAMoD,CAAC,GAAMC,EAC3B,MACnB,CAoBO,SAASC,GAAMC,EAAY,CAI9B,MADY,OAAQ,MAAQ,KAAK,KAAO,IAAMA,GAAO,GAAG,GAAM,IAAMA,IAAM,MAAU,IAAMA,EAE9F,CCzCA,MAAMC,GAAgB,GAChBC,GAAkBD,GAAgB,KAClCE,GAAmB,IACnBC,GAAK,OACLC,GAAM,KAgBL,SAASC,GAA0BjK,EAAoBkK,EAAqB,CAI/E,IAAIC,EAAe,EAGnBnB,EAASI,GAAe,CAEpB,MAAMgB,EAAOF,EAAMG,YAAAA,EACbC,EAAOtK,EAAMuK,SAAAA,EAAa,GAE1BnD,EAAS,IAAMgD,EAGfI,EAASF,EAAOV,GAAgBR,EACtCe,EAAgB/C,EAAS,KAAQA,EAAS,KAAOqD,EAAoBC,EAAsB,EAC3F,MAAMC,EAAUR,EAAef,EAAKQ,GAC9BgB,EAAUV,EAAMW,sBAAAA,EAA0BzB,EAAKS,GAErD,IAAIiB,EAAUV,EAAOI,EAASG,EAAUC,EACxCE,OAAAA,EAAUC,KAAK9E,IAAI,EAAG6E,CAAO,EAG7BZ,EAAMc,eAAeF,CAAO,EAErB,EACX,CAAC,EAGD,IAAIG,EAAmB,GACvBjC,EAASI,GAAe,CAMpB,GAJec,EAAMG,YAAAA,EAAgB,IAAM,MAChCY,EAAU,IAGjB,CAACA,EAAS,MAAO,GAGrB,MAAMb,EAAOF,EAAMgB,SAAAA,EAGnB,IAAIJ,EAAUG,EAAUb,EAAOhB,EAAK,EACpC0B,OAAAA,EAAUC,KAAK9E,IAAI,EAAG6E,CAAO,EAG7BZ,EAAMiB,YAAYL,CAAO,EACjBA,IAAY,CACxB,EAEA,IAAM9B,EAASI,GAAe,CAE1B,MAAMgB,EAAOF,EAAMkB,aAAAA,EACbC,EAASlB,EACTmB,EAAUlB,EAGhB,IAAIU,EAAUV,GAAQiB,EAASC,GAAWlC,EAC1C0B,OAAAA,EAAUC,KAAK9E,IAAI,EAAG6E,CAAO,EAI7BZ,EAAMqB,gBAAgBT,CAAO,EAE7B9K,EAAMwL,iBAAiBF,EAAU,GAAI,EAC9B,EACX,CAAC,CAAA,CACL,CAkBA,MAAMG,EAAa,CACfC,EAAG,EACHxP,KAAM,EACNyP,GAAI,EACJC,GAAI,EACJC,GAAI,EACR,EAEO,SAASC,GAA4B9L,EAAoBkK,EAAqB,CAGjFlB,EAASI,GAAe,CACpB,MAAM2C,EAAW7B,EAAMG,YAAAA,EACjB2B,EAAWD,EAAWlC,GACtBF,EAAK3J,EAAMiM,QAAAA,EAIXC,EADK,MACalM,EAAMmM,UAAAA,EAAcxC,GAGtCyC,EAAUpC,GAAMhK,EAAMuK,SAAAA,EAAa,GAInC8B,EAAUL,EAAW,EAAKI,EAAUrC,IAH7B,GAG0CJ,GAAM,EACvD2C,EAAWN,EAAWjC,GAAKD,GAEjC,IAAIyC,EAAO,EAAGC,EAAO,EACrB,GAAIT,EAAW,IAAM,CAMjB,MAAMU,GAHY9C,EAAK+C,KAASJ,EAI5BG,EAAe,EACfhB,EAAWC,GAAKe,EAAerD,EAE/BqC,EAAWC,GAAK,IAGpB,IAAIiB,EAASvD,IAAO,GAAMqD,EAAehB,EAAWvP,MAAQkN,EAAK,EAEjEqC,EAAWvP,KAAOuQ,EAGlBF,EAAOd,EAAWE,GAAKc,EAAehB,EAAWG,GAAKH,EAAWC,EAAID,EAAWI,GAAKc,EAErFJ,EAAOA,EAAO,EAAIA,EAAO,EACzBK,QAAQC,IAAI,SAASN,CAAI,EAAE,EAG3BC,EAAOD,EAAO7C,GAAM,GAAG,EAAI,IACvB8C,EAAO,GAAGI,QAAQC,IAAI,mBAAmBL,CAAI,EAAE,CACvD,CAIA,MAAMM,GADMT,EAASH,EAAYK,GACdD,EACbS,EAAOb,EAAYxC,GAAM1J,EAAMmM,WAAW,EAChDnM,OAAAA,EAAMgN,gBAAgBrD,EAAKmD,EAAO1D,CAAE,EACpCpJ,EAAMiN,oBAAoBT,CAAI,EAC9BxM,EAAMkN,mBAAmBH,CAAI,EAEtB,EACX,CAAC,CAEL,kHCzKA,SAASI,GAAWC,EAAcC,EAAuB,CACrD,IAAIC,EAAI,EAAG/K,EAAI,EACf,KAAO+K,IAAM,GAAGA,EAAIvC,KAAKwC,OAAAA,EACzB,KAAOhL,IAAM,GAAGA,EAAIwI,KAAKwC,OAAAA,EAEzB,MAAMC,EAAIzC,KAAK0C,KAAK,GAAO1C,KAAK8B,IAAIS,CAAC,CAAC,EAAIvC,KAAK2C,IAAI,EAAM3C,KAAK4C,GAAKpL,CAAC,EACpE,OAAO6K,EAAOI,EAAIH,CACtB,CAYO,MAAMO,GAAmHA,CAAC,CAAEC,QAAAA,EAAS7H,EAAAA,EAAGkB,EAAAA,EAAG4G,EAAAA,EAAGC,EAAAA,EAAGC,SAAAA,CAAS,IAAM,CAEnK,MAAMC,EAAyB,CAAA,EAC/B,QAASpR,EAAE,EAAGA,EAAEmR,EAAUnR,IAAK,CAC3B,KAAM,CAACqR,EAAKrO,CAAG,EAAI9E,EAAagQ,KAAKwC,QAAQ,EACvC,CAACY,EAAIC,CAAE,EAAIrT,EAAa,EAAK,EAC7BsT,EAAiB,CACnBC,GAAIvD,KAAKwC,OAAAA,EAAWO,EAAI9H,EACxBuI,GAAIxD,KAAKwC,OAAAA,EAAW,GAAKrG,EACzBsH,EAAGrB,GAAW,EAAG,CAAC,EAClBsB,SAAUtB,GAAW,IAAK,GAAG,EAC7BuB,YAAa,CAAER,IAAAA,EAAKrO,IAAAA,CAAAA,EACpB8O,UAAWxB,GAAW,GAAI,EAAE,EAC5BnM,OAAQ,CAAEkN,IAAIC,EAAItO,IAAIuO,CAAAA,CAAG,EAE7BH,EAAQW,KAAKP,CAAM,CACvB,CAGA,IAAIQ,EAAU,GACdnT,OAAAA,EAAa,IAAM,CACf,GAAImS,IAAW,CAEX,GAAIgB,EAAS,OACbA,EAAU,GAEV7F,EAASI,GAAe,CACpB,IAAI0F,EAAY,GAChB,UAAW1V,KAAK6U,EAAS,CAErB,IAAIc,EAAO3V,EAAEsV,YAAYR,IAAAA,EAAQ9U,EAAEuV,UAAYvF,EAE3C2F,EAAO,IACPA,GAAQ,EACR3V,EAAE4H,OAAOnB,IAAIgO,GAAS,GAE1BzU,EAAEsV,YAAY7O,IAAIkP,CAAI,EACtBD,EAAYA,GAAa1V,EAAE4H,OAAOkN,IAAAA,CACtC,CAEA,OAAOW,GAAWC,CACtB,EAAG,IAAMD,EAAU,EAAK,CAC5B,CACJ,CAAC,GAEH,IAAA,CAAA,IAAAnJ,EAAAN,GAAAA,EAAA4J,OAAAA,EAAAtJ,EAAAuJ,EAEKhP,GAAG,CAACiP,KAAMjB,EAAOkB,aAEb,IAAA,CAAA,IAAAxJ,EAAAyJ,GAAAA,EAAAvJ,OAAAA,EAAAwJ,GAAA,CAAA,IAAAC,EAIWlW,EAAEkV,GAAK,IAAMR,EAAI/C,KAAK2C,IAAI,EAAItU,EAAEsV,YAAYR,IAAAA,EAAQ,IAAM9U,EAAEkV,EAAE,EAACiB,EAC/DnW,EAAEmV,GAAKnV,EAAEsV,YAAYR,IAAAA,EAAQH,EAAAA,EAAGyB,EACjCpW,EAAEoV,EAACiB,EACK,aAAarW,EAAEkV,EAAE,KAAKlV,EAAEmV,EAAE,WAAW,GAAKnV,EAAEqV,SAAW,GAAKrV,EAAEsV,YAAYR,IAAAA,CAAK,eAAe,CAAC9U,EAAEkV,EAAE,KAAK,CAAClV,EAAEmV,EAAE,IAAGmB,EAClHtW,EAAE4H,OAAOkN,IAAAA,EAAQ,GAAK,EAAI9U,EAAEsV,YAAYR,IAAAA,EAAQ,IAAM,EAAI,EAACoB,OAAAA,IAAAD,EAAA1R,GAAAmI,EAAAH,EAAA,KAAA0J,EAAA1R,EAAA2R,CAAA,EAAAC,IAAAF,EAAAvO,GAAAgF,EAAAH,EAAA,KAAA0J,EAAAvO,EAAAyO,CAAA,EAAAC,IAAAH,EAAAlW,GAAA2M,EAAAH,EAAA,IAAA0J,EAAAlW,EAAAqW,CAAA,EAAAC,IAAAJ,EAAApT,GAAA6J,EAAAH,EAAA,YAAA0J,EAAApT,EAAAwT,CAAA,EAAAC,IAAAL,EAAAxS,GAAAiJ,EAAAH,EAAA,UAAA0J,EAAAxS,EAAA6S,CAAA,EAAAL,CAAA,EAAA,CAAA1R,EAAAgS,OAAA7O,EAAA6O,OAAAxW,EAAAwW,OAAA1T,EAAA0T,OAAA9S,EAAA8S,MAAAA,CAAA,EAAAhK,CAAA,GAAA,CAAA,CACtE,CAAA,EAAAD,CAAA,GAAA,CAKhB,idClFA,SAASyH,EAAWC,EAAcC,EAAuB,CACrD,IAAIC,EAAI,EAAG/K,EAAI,EACf,KAAO+K,IAAM,GAAGA,EAAIvC,KAAKwC,OAAAA,EACzB,KAAOhL,IAAM,GAAGA,EAAIwI,KAAKwC,OAAAA,EAEzB,MAAMC,EAAIzC,KAAK0C,KAAK,GAAO1C,KAAK8B,IAAIS,CAAC,CAAC,EAAIvC,KAAK2C,IAAI,EAAM3C,KAAK4C,GAAKpL,CAAC,EACpE,OAAO6K,EAAOI,EAAIH,CACtB,CAYO,MAAMuC,GAA2FA,CAAC,CAAE/B,QAAAA,EAAS7H,EAAAA,EAAGkB,EAAAA,EAAG4G,EAAAA,EAAGC,EAAAA,CAAE,IAAM,CAEjI,MAAME,EAAyB,CAAA,EAC/B,QAASpR,EAAE,EAAGA,EAAE,EAAGA,IAAK,CACpB,KAAM,CAACqR,EAAKrO,CAAG,EAAI9E,EAAagQ,KAAKwC,QAAQ,EACvC,CAACY,EAAIC,CAAE,EAAIrT,EAAa,EAAK,EAC7BsT,EAAiB,CACnBC,GAAInB,EAAWnH,EAAG8H,CAAC,EACnBS,GAAIpB,EAAWjG,EAAG6G,CAAC,EACnBS,EAAGrB,EAAW,GAAI,CAAC,EACnBsB,SAAUtB,EAAW,GAAI,GAAG,EAC5BuB,YAAa,CAAER,IAAAA,EAAKrO,IAAAA,CAAAA,EACpB8O,UAAWxB,EAAW,GAAI,EAAE,EAC5BnM,OAAQ,CAAEkN,IAAIC,EAAItO,IAAIuO,CAAAA,CAAG,EAE7BH,EAAQW,KAAKP,CAAM,CACvB,CAGA,IAAIQ,EAAU,GACdnT,OAAAA,EAAa,IAAM,CACf,GAAImS,IAAW,CAEX,GAAIgB,EAAS,OACbA,EAAU,GAEV7F,EAASI,GAAe,CACpB,IAAI0F,EAAY,GAChB,UAAW1V,KAAK6U,EAAS,CAErB,IAAIc,EAAO3V,EAAEsV,YAAYR,IAAAA,EAAQ9U,EAAEuV,UAAYvF,EAE3C2F,EAAO,IACPA,GAAQ,EACR3V,EAAE4H,OAAOnB,IAAIgO,GAAS,GAE1BzU,EAAEsV,YAAY7O,IAAIkP,CAAI,EACtBD,EAAYA,GAAa1V,EAAE4H,OAAOkN,IAAAA,CACtC,CAEA,OAAOW,GAAWC,CACtB,EAAG,IAAMD,EAAU,EAAK,CAC5B,CACJ,CAAC,EAEH,CAAAzJ,GAAAA,GAAA,IAAA,CAAA,IAAAO,EAAAyJ,GAAAA,EAAAJ,OAAAA,EAAArJ,EAAAsJ,EAcOhP,GAAG,CAACiP,KAAMjB,EAAOkB,aAEb,IAAA,CAAA,IAAAU,EAAAC,GAAAA,EAAAjK,OAAAA,EAAAwJ,GAAA,CAAA,IAAAC,EAEWlW,EAAEkV,GAAEiB,EACJnW,EAAEmV,GAAKnV,EAAEsV,YAAYR,IAAAA,EAAQ,IAAGsB,EACjCpW,EAAEoV,EAACiB,EACK,SAAS,GAAKrW,EAAEqV,SAAW,GAAKrV,EAAEsV,YAAYR,IAAAA,CAAK,IAAGwB,EACxDtW,EAAE4H,OAAOkN,IAAAA,EAAQ,GAAK,EAAI9U,EAAEsV,YAAYR,IAAAA,EAAQ,IAAM,EAAI,EAACoB,OAAAA,IAAAD,EAAA1R,GAAAmI,EAAA+J,EAAA,KAAAR,EAAA1R,EAAA2R,CAAA,EAAAC,IAAAF,EAAAvO,GAAAgF,EAAA+J,EAAA,KAAAR,EAAAvO,EAAAyO,CAAA,EAAAC,IAAAH,EAAAlW,GAAA2M,EAAA+J,EAAA,IAAAR,EAAAlW,EAAAqW,CAAA,EAAAC,IAAAJ,EAAApT,GAAA6J,EAAA+J,EAAA,YAAAR,EAAApT,EAAAwT,CAAA,EAAAC,IAAAL,EAAAxS,GAAAiJ,EAAA+J,EAAA,UAAAR,EAAAxS,EAAA6S,CAAA,EAAAL,CAAA,EAAA,CAAA1R,EAAAgS,OAAA7O,EAAA6O,OAAAxW,EAAAwW,OAAA1T,EAAA0T,OAAA9S,EAAA8S,MAAAA,CAAA,EAAAE,CAAA,GAAA,CAAA,CACtE,CAAA,EAAAlK,CAAA,IAAA,CAMlB,qmbCjFO,MAAMoK,GAAkC/P,GAAU,CAEvD,KAAM,CAACqK,EAAaW,CAAc,EAAIjQ,EAAa,CAAC,EAC9C,CAACmQ,EAAUC,CAAW,EAAIpQ,EAAa,CAAC,EACxC,CAACqQ,EAAcG,CAAe,EAAIxQ,EAAa,CAAC,EAChD,CAAC8P,EAAuBmF,CAAwB,EAAIjV,EAAa,CAAC,EAExEc,EAAQ,IAAM,CAEZoU,WAAW,IAAM,CACfrO,SAASsO,iBAAiB,kBAAkB,EAAEC,WAAc/L,EAAGgM,UAAUC,IAAI,wBAAwB,CAAC,CACxG,EAAG,GAAI,CACT,CAAC,EAOD,MAAMnG,EAAsB,CAAEG,YAAAA,EAAaa,SAAAA,EAAUE,aAAAA,EAAcJ,eAAAA,EAAgBG,YAAAA,EAAaI,gBAAAA,EAAiBV,sBAAAA,EAAuBmF,yBAAAA,CAAAA,EACxI/F,GAA0BjK,EAAOkK,CAAK,EACtC4B,GAA4B9L,EAAOkK,CAAK,EACxC,MAAMoG,EAAe1U,EAAW,IAAM,GAAKyO,GAAa,EAIxD,OAAA,IAAA,CAAA,IAAA3E,EAAAN,KAAAO,EAAAD,EAAAE,WAAAiK,EAAAlK,EAAAC,WAAA2K,EAAAV,EAAAW,YAAAC,EAAAF,EAAAC,YAAAE,EAAAD,EAAAD,YAAAG,EAAAD,EAAAF,YAAAI,EAAAD,EAAAH,YAAAK,EAAAD,EAAAJ,YAAAM,EAAAD,EAAAL,YAAAO,EAAAD,EAAAN,YAAAQ,EAAArL,EAAA6K,YAAAS,EAAAD,EAAAR,YAAAU,EAAAD,EAAAT,YAAAW,EAAAD,EAAAtL,WAAAwL,EAAAD,EAAAvL,WAAAyL,GAAAF,EAAAX,YAAAc,GAAAD,GAAAzL,WAAAoJ,OAAAA,EAAAtJ,EAAAuJ,EA8MKrB,GAAK,CAACC,QAASA,IAAMxD,EAAAA,EAAgB,IAAMrK,EAAMiM,UAAY,IAAIjG,EAAG,IAAKkB,EAAG,IAAK4G,EAAG,IAAKC,EAAGuC,EAActC,SAAU,EAAA,CAAE,EAAAgD,CAAA,EAAAhC,EAAAtJ,EAAAuJ,EAyctHW,GAAK,CAAC/B,QAASA,IAAM,GAAO7H,EAAG,IAAKkB,EAAG,IAAK4G,EAAG,EAAGC,EAAG,CAAA,CAAC,EAAAmD,CAAA,EAAArL,EAAAwJ,GAAA,CAAA,IAAAC,GA7dpCvE,KAAK7E,IAAI,EAAG,GAAK,IAAMmE,EAAAA,EAAgB,IAAI,EAACkF,GAExC,mBAAqB,EAAIrE,EAAAA,GAAWsE,GAgepD,IAAM,IAAMnF,EAAAA,EAAaoF,GAEpB,IAAMpF,EAAAA,EAAaqF,GAOxB,IAAM,GAAKtE,EAAAA,EAAcmG,GAEpB,GAAKnG,EAAAA,EAAckE,OAAAA,KAAAD,EAAA1R,GAAAmI,EAAAiL,EAAA,eAAA1B,EAAA1R,EAAA2R,EAAA,EAAAC,KAAAF,EAAAvO,GAAAgF,EAAAiL,EAAA,oBAAA1B,EAAAvO,EAAAyO,EAAA,EAAAC,KAAAH,EAAAlW,GAAA2M,EAAAsL,EAAA,IAAA/B,EAAAlW,EAAAqW,EAAA,EAAAC,KAAAJ,EAAApT,GAAA6J,EAAAsL,EAAA,SAAA/B,EAAApT,EAAAwT,EAAA,EAAAC,KAAAL,EAAAxS,GAAAiJ,EAAAwL,GAAA,IAAAjC,EAAAxS,EAAA6S,EAAA,EAAA6B,KAAAlC,EAAAnR,GAAA4H,EAAAwL,GAAA,SAAAjC,EAAAnR,EAAAqT,EAAA,EAAAlC,CAAA,EAAA,CAAA1R,EAAAgS,OAAA7O,EAAA6O,OAAAxW,EAAAwW,OAAA1T,EAAA0T,OAAA9S,EAAA8S,OAAAzR,EAAAyR,MAAAA,CAAA,EAAAjK,CAAA,GAAA,CAOpC,EAED0J,GAAAA,+UCrtBO,MAAMoC,GAAmCA,CAAC,CAAExL,EAAAA,EAAGkB,EAAAA,EAAGuK,IAAAA,EAAKC,QAAAA,CAAQ,IAAM,CAC1E,MAAMtX,EAAK,OAAOqX,GAAQ,WAAaA,EAAM,IAAMA,EAC7CE,EAAOD,IAAY/B,OAAa+B,EAAU,EAC1CE,EAAS,OAAOxX,EAAAA,GAAS,SAAY,IAAOA,IAAgByX,QAAQF,CAAG,EAAIvX,EAEjF,OAAA,IAAA,CAAA,IAAAsL,EAAAN,GAAAA,EAAAO,EAAAD,EAAAE,WAAAiK,EAAAlK,EAAA6K,YAAAD,EAAAV,EAAAW,YAAAC,EAAAF,EAAA3K,WAAAE,OAAAA,EAAAH,EAAA,IAGS,GAAGK,CAAC,EAAE,EAAAF,EAAAH,EAAA,IACN,GAAGuB,CAAC,EAAE,EAAApB,EAAA+J,EAAA,IASN,GAAG7J,EAAI,CAAC,EAAE,EAAAF,EAAA+J,EAAA,IACV,GAAG3I,EAAI,CAAC,EAAE,EAAApB,EAAAyK,EAAA,IAUV,GAAGvK,EAAI,EAAE,EAAE,EAAAF,EAAAyK,EAAA,IACX,GAAGrJ,EAAI,IAAI,EAAE,EAAA8H,EAAAuB,EAMdqB,EAAKnB,CAAA,EAAA/K,CAAA,GAAA,CAGd,wvBCxCM,MAAMoM,GAAuCA,CAAC,CAAE9O,IAAAA,EAAKsL,GAAAA,EAAIyD,KAAAA,EAAMC,UAAAA,CAAU,IAAM,CAEpF,KAAM,CAAC/L,EAAKC,CAAG,EAAK8L,GAAWC,SAAW,EAAKD,EAAY,CAAC,EAAG,IAAI,EAC7DE,EAAQhM,EAAMD,EACdkM,EAAKvW,EAAW,IAAMmK,EAAUgM,IAAS9L,EAAK,EAAGiM,CAAK,EAAIA,CAAK,EAI/D,CAACE,EAAYC,CAAa,EAAItX,EAAa,CAAC,EAG5CuX,EAAgBlJ,GAAe,CACnC,IAAI2E,EAAIqE,EAAAA,EACRrE,OAAAA,GAAK3E,EAAK,EACViJ,EAActH,KAAK9E,IAAI8H,EAAG,CAAC,CAAC,EAEpBA,EAAI,GAAKgE,EAAAA,IAAW,CAC9B,EACA,IAAIQ,EAAU,GACdvJ,OAAAA,EAAQsJ,CAAY,EAGpB5W,EAAa,IAAM,CACbyW,EAAAA,IAAS,EACXI,EAAU,GAEHA,IAAY,KACnBA,EAAU,GACVF,EAAc,CAAC,EACfrJ,EAAQsJ,CAAY,EAExB,CAAC,EAED,EAAA,IAAA,CAAA,IAAA5M,EAAAN,GAAAA,EAAAU,OAAAA,EAAAJ,EAAA,KAGQ1C,EAAM,OAAO,EAAA8C,EAAAJ,EAAA,OAMX,QAAQ1C,CAAG,QAAQ,EAAA6C,EAAA,IAAAC,EAAAJ,EAAA,YAFd,aAAa4I,CAAE,eAAe6D,GAAI,sBAAsB,CAAA,EAAAzM,CAAA,GAAA,GAAA,IAAA,CAAA,IAAAC,EAAAyJ,KAAAS,EAAAlK,EAAAC,WAAA2K,EAAAV,EAAAjK,WAAA6K,EAAAZ,EAAAW,YAAA1K,OAAAA,EAAA+J,EAAA,KAKrD7M,EAAM,OAAO,EAAA8C,EAAA2K,EAAA,KAGazN,EAAM,OAAO,EAAA6C,MAAAC,EAAAyK,EAAA,SAFf6B,EAAAA,CAAY,CAAA,EAAAzM,CAAA,IAAA,CAOvD,wtxBCxDM,MAAM6M,GAAc,IAEdC,GAA+BA,CAAC,CAAEC,SAAAA,CAAS,IAAM,CAO5D,MAAMC,EAAc/W,EAAW,IAAM8W,EAAAA,EAAaF,GAAeI,IAAuBC,IAAQ,EAGhG,OAAA,IAAA,CAAA,IAAAnN,EAAAN,KAAAO,EAAAD,EAAAE,WAAAiK,EAAAlK,EAAA6K,YAAAD,EAAAV,EAAAW,YAAAC,EAAAF,EAAAC,YAAAE,EAAAD,EAAAD,YAAAG,EAAAD,EAAAF,YAAAI,EAAAD,EAAAH,YAAAK,EAAAD,EAAAJ,YAAAM,EAAAD,EAAAL,YAAAO,EAAAD,EAAAN,YAAAQ,EAAAD,EAAAP,YAAAS,EAAAD,EAAAR,YAAAU,EAAAD,EAAAT,YAAAW,EAAAD,EAAAV,YAAAY,EAAAD,EAAAX,YAAA3K,OAAAA,MAAAC,EAAAsL,EAAA,YAqDW,UAAUrL,EAAU4M,EAAAA,EAAeE,KAAUD,GAAQ,CAAC,eAAe,CAAA,EAAAlN,CAAA,GAAA,CA+RjF,08BChWM,MAAMoN,GAAuCA,CAAC,CAAEC,SAAAA,CAAS,IAAM,CAEpE,KAAM,CAACC,EAAQC,CAAS,EAAIlY,EAAa,EAAK,EAGxCmY,EAAWA,IAAM,UAAUF,EAAAA,EAAW,IAAM,CAAC,WAG7CG,EAAcA,IAAM,CACxB,MAAMC,EAAO,CAACJ,EAAAA,EACdC,EAAUG,CAAI,EACdL,IAAWK,CAAI,CACjB,EAGA,OAAA,IAAA,CAAA,IAAA1N,EAAAN,GAAAA,EAAAO,EAAAD,EAAAE,WAAAiK,EAAAlK,EAAA6K,YAAAX,OAAAA,EAAAwD,QAiCgDF,EAAWtN,MAAAC,EAAA+J,EAAA,YAAaqD,EAAAA,CAAU,CAAA,EAAAxN,CAAA,GAAA,CA0BnF,EAEwB4N,EAAA,CAAA,OAAA,CAAA,okKC3ElB,MAAMC,GAAyCA,CAAC,CAAEC,aAAAA,CAAa,IAAM,CAI1E,GAAI,CAACC,EAAcC,CAAe,EAAI3Y,EAAa,CAAC,EAChDkN,EAAa,GACb0L,EAAS,EAGb,MAAMC,EAAajW,GAAkB,CACnCA,EAAEkW,eAAAA,EACF5L,EAAa,GACb,MAAM6L,EAAehL,GAAanL,CAAC,EACnCgW,EAASxN,GAAiB,CAACH,EAAE,IAAKkB,EAAE,GAAA,EAAM,CAAClB,EAAE8N,EAAa9N,EAAGkB,EAAE4M,EAAa5M,CAAAA,CAAE,EAC9EtF,SAASM,iBAAiB,cAAe6R,CAAM,EAC/CnS,SAASM,iBAAiB,YAAa8R,CAAO,CAChD,EAGMD,EAAUpW,GAAkB,CAChC,GAAI,CAACsK,EAAY,OAGjB,MAAMgM,EAAQR,EAAAA,EACRK,EAAehL,GAAanL,CAAC,EAC7BuW,EAAK/N,GAAiB,CAACH,EAAE,IAAKkB,EAAE,GAAA,EAAM,CAAClB,EAAE8N,EAAa9N,EAAGkB,EAAE4M,EAAa5M,CAAAA,CAAE,EAChF,IAAIiN,EAAUD,EAAKP,EACf5I,KAAKqJ,IAAID,CAAO,EAAI,MAElBA,EAAU,EAEZA,GAAW,IAGXA,GAAW,KAKf,IAAIE,EAAWJ,EAAQE,EACvBE,EAAWtJ,KAAK9E,IAAI,EAAG8E,KAAK7E,IAAI0M,KAAUyB,CAAQ,CAAC,EAG/CA,IAAaJ,IACfP,EAAgBW,CAAQ,EACxBb,IAAea,EAAWzB,IAAQ,GAIpCe,EAASO,CACX,EAGMF,EAAUA,IAAM,CACpB/L,EAAa,GACbrG,SAAS0S,oBAAoB,cAAeP,CAAM,EAClDnS,SAAS0S,oBAAoB,YAAaN,CAAO,CACnD,EAGA,OAAA,IAAA,CAAA,IAAAtO,EAAAN,GAAAA,EAAAO,EAAAD,EAAAE,WAAAiK,EAAAlK,EAAA6K,YAAAX,OAAAA,EAAA0E,cAoC0EX,EAAS/N,EAAA,IAAAC,EAAA+J,cAAa,UAAU4D,EAAAA,CAAc,WAAW,CAAA,EAAA/N,CAAA,GAAA,CAoBpI,EAEyB4N,EAAA,CAAA,aAAA,CAAA,o5tBCjG1B,MAAMkB,GAAO,IAEAC,GAAkCzU,GAAU,CAEvD,KAAM,CAACgG,EAAG0O,CAAI,EAAI3Z,EAAaiF,EAAM2U,QAAQ,EACvC,CAACzN,EAAG0N,CAAI,EAAI7Z,EAAaiF,EAAM6U,QAAQ,EACvC,CAACC,EAAcC,CAAe,EAAIha,EAAa,EAAK,EACpD,CAACia,EAAUC,CAAW,EAAIla,EAAa,EAAK,EAE5Cma,EAAQlV,EAAMmV,aAAepa,EAAaiF,EAAMhF,KAAK,EACrD,CAACyW,EAAK2D,CAAM,EAAIF,EAEtB,GAAI,CAACG,EAASC,CAAU,EAAIva,EAA6BiF,EAAMuV,QAAQ,EAGnEC,EAA+B,KACnC9Z,EAAa,IAAM,CACb+V,EAAAA,EAAQ,MAAQ4D,EAAAA,IAAc,OAEhCJ,EAAY,EAAI,EAChBG,EAAO,IAAI,GAETJ,MAEEQ,IAAkB,MAAMC,aAAaD,CAAa,EACtDA,EAAgBvF,WAAW,IAAM,CAAEgF,EAAY,EAAK,EAAGO,EAAgB,IAAM,EAAG,GAAG,EAEvF,CAAC,EAGD,MAAME,EAAYA,CAAC1P,EAAWkB,IAAc,CAE1ClB,EAAID,EAAUC,EAAG,EAAG,IAAI,EACxBkB,EAAInB,EAAUmB,EAAGsN,GAAM,GAAG,EAC1B,MAAMpb,EAAIic,EAAAA,EAGV,GAAIrP,EAAI,IAAMA,EAAI,KAAOkB,EAAI,IAAK,CAE9B,GAAIlH,EAAM2V,UAAAA,EAAY,CAAC,IAAM,KAAM,OAGnC3P,EAAI,IACJkB,EAAI,IAEJoO,EAAW,CAAC,EACZtV,EAAM4V,MAAM,EAAG,CAACnE,EAAK2D,CAAM,CAAC,CAChC,SAESpP,EAAI,KAAOA,EAAI,IAEjBhG,EAAM2V,YAAY,CAAC,IAAM,MAAQvc,IAAM,GAAMA,IAAM,GAEtD4M,EAAI,IACJkB,EAAI,IAEA9N,IAAM,GAAGkc,EAAW,CAAC,EACzBtV,EAAM4V,MAAM,EAAG,CAACnE,EAAK2D,CAAM,CAAC,IAK5BpP,EAAI,IACJkB,EAAI,IAEJoO,EAAW,CAAC,EACZtV,EAAM4V,MAAM,EAAG,CAACnE,EAAK2D,CAAM,CAAC,WAIvBpP,EAAI,KAAOA,EAAI,MAAQkB,EAAI,IAAK,CAErC,GAAIlH,EAAM2V,UAAAA,EAAY,CAAC,IAAM,KAAM,OAGnC3P,EAAI,IACJkB,EAAI,IAEJoO,EAAW,CAAC,EACZtV,EAAM4V,MAAM,EAAG,CAACnE,EAAK2D,CAAM,CAAC,CAChC,MAEShc,IAAM,OAEb4G,EAAM4V,MAAMxc,EAAG,IAAI,EACnBkc,EAAW,IAAI,GAIjBZ,EAAK1O,CAAC,EACN4O,EAAK1N,CAAC,CACR,EAGM3H,EAAS5B,GAAkB,CAC/BA,EAAEkW,eAAAA,EACF,MAAMgC,EAAS/M,GAAanL,CAAC,EAC7B,IAAImY,EAAO9P,IAAM6P,EAAO7P,EACpB+P,EAAO7O,IAAM2O,EAAO3O,EAExB,MAAM8O,EAAUC,GAAmB,CACjC,MAAMJ,EAAS/M,GAAamN,CAAE,EACxB3P,EAAKuP,EAAO7P,EAAIA,EAAAA,EAChBO,GAAKsP,EAAO3O,EAAIA,EAAAA,EAEhBgP,GAAOlQ,IAAMM,EAAKwP,EAClBK,EAAOjP,IAAMX,GAAKwP,EACxBL,EAAUQ,GAAMC,CAAI,EACpBnW,EAAMoW,OAAOpW,EAAMqW,IAAK,CAAErQ,EAAGA,EAAAA,EAAKkB,EAAGA,EAAAA,EAAKqO,SAAUF,EAAAA,CAAQ,CAAG,CACjE,EAEM7V,EAAMA,IAAM,CAEhB8W,OAAOhC,oBAAoB,cAAe0B,CAAM,EAChDM,OAAOhC,oBAAoB,YAAa9U,CAAG,EACvC6V,EAAAA,IAAc,MAAMN,EAAgB,EAAI,CAC9C,EAEAuB,OAAOpU,iBAAiB,cAAe8T,CAAM,EAC7CM,OAAOpU,iBAAiB,YAAa1C,CAAG,CAC1C,EAEA3D,EAAQ,IAAM,CACZ6Z,EAAU1V,EAAM2U,SAAU3U,EAAM6U,QAAQ,CAC1C,CAAC,EAED,IAAI0B,EAEJ,MAAA,EAAA,IAAA,CAAA,IAAA7Q,EAAAN,KAAAO,EAAAD,EAAAE,WAAAiK,EAAAlK,EAAA6K,YAAAD,EAAAV,EAAAW,YAAA9K,EAAA6O,cACgGhV,EAAKyP,EAAAtJ,EAAAuJ,EAChGuH,GAAU,CAACC,IAAKhF,CAAAA,CAAG,EAAA9L,CAAA,EAAA,IAAA+Q,EACIH,EAAG,cAAAG,GAAA,WAAAC,GAAAD,EAAA/Q,CAAA,EAAH4Q,EAAG5Q,EAAAE,EAAAwJ,GAAA,CAAA,IAAAC,EAFqB,aAAatJ,EAAAA,CAAG,KAAKkB,GAAG,IAAGqI,EAiCjEyF,EAAAA,EAAa,GAAK,SAAQ1F,OAAAA,IAAAD,EAAA1R,GAAAmI,EAAAJ,EAAA,YAAA2J,EAAA1R,EAAA2R,CAAA,EAAAC,IAAAF,EAAAvO,GAAAgF,EAAAyK,EAAA,QAAAlB,EAAAvO,EAAAyO,CAAA,EAAAF,CAAA,EAAA,CAAA1R,EAAAgS,OAAA7O,EAAA6O,MAAAA,CAAA,EAAAjK,CAAA,GAAA,EAAAuJ,EASrCvK,GAAM,CAAA,IAACE,OAAK,CAAA,OAAEhD,SAASgV,eAAe,WAAW,CAAE,EAAErV,MAAO,GAAI,IAAA4N,UAAA,CAAA,IAAAsB,EAAArB,GAAAA,EAAAvJ,OAAAA,EAAAwJ,GAAA,CAAA,IAAAG,EAChD,IAAMiC,EAAAA,EAAQ,GAAEhC,EAAsB4F,EAAAA,IAAc,EAAK5D,EAAAA,EAAQ,GAAK,EAACjC,OAAAA,IAAAH,EAAA1R,GAAAmI,EAAA2K,EAAA,IAAApB,EAAA1R,EAAA6R,CAAA,EAAAC,IAAAJ,EAAAvO,GAAAgF,EAAA2K,EAAA,SAAApB,EAAAvO,EAAA2O,CAAA,EAAAJ,CAAA,EAAA,CAAA1R,EAAAgS,OAAA7O,EAAA6O,MAAAA,CAAA,EAAAc,CAAA,CAAA,CAAA,EAAAxB,EAEvFvK,GAAM,CAAA,IAACE,OAAK,CAAA,OAAEhD,SAASgV,eAAe,WAAW,CAAE,EAAErV,MAAO,GAAI,IAAA4N,UAAA,CAAA,IAAAuB,EAAAtB,GAAAA,EAAAvJ,OAAAA,EAAAwJ,GAAA,CAAA,IAAAK,EAChD,IAAM+B,EAAAA,EAAQ,GAAEF,EAAsB8D,EAAAA,IAAc,EAAK5D,EAAAA,EAAQ,GAAK,EAAC/B,OAAAA,IAAAL,EAAA1R,GAAAmI,EAAA4K,EAAA,IAAArB,EAAA1R,EAAA+R,CAAA,EAAA6B,IAAAlC,EAAAvO,GAAAgF,EAAA4K,EAAA,SAAArB,EAAAvO,EAAAyQ,CAAA,EAAAlC,CAAA,EAAA,CAAA1R,EAAAgS,OAAA7O,EAAA6O,MAAAA,CAAA,EAAAe,CAAA,CAAA,CAAA,EAAAzB,EAEvF4H,GAAgB,CAACC,UAAWP,EAAKQ,QAASjC,EAAckC,gBAAiBjC,EAAiBkC,aAAcA,IAAM7B,EAAO,CAAC,CAAA,CAAC,CAAA,CAE5H,EAEMoB,GAAmDA,CAAC,CAAEC,IAAAA,CAAI,KAC9D,IAAA,CAAA,IAAA9F,EAAAb,GAAAA,EAAAjK,OAAAA,EAAAwJ,GAAA,CAAA,IAAA6H,EACmC,IAAWT,EAAAA,EAAQ,GAAEU,EAAqBV,IAAQ,GAAES,OAAAA,IAAA7H,EAAA1R,GAAAmI,EAAA6K,EAAA,IAAAtB,EAAA1R,EAAAuZ,CAAA,EAAAC,IAAA9H,EAAAvO,GAAAgF,EAAA6K,EAAA,SAAAtB,EAAAvO,EAAAqW,CAAA,EAAA9H,CAAA,EAAA,CAAA1R,EAAAgS,OAAA7O,EAAA6O,MAAAA,CAAA,EAAAgB,CAAA,GAAA,EAInFkG,GAAuJA,CAAC,CAAEC,UAAAA,EAAWC,QAAAA,EAASC,gBAAAA,EAAiBC,aAAAA,CAAa,IAAM,CAEtN,MAAMG,EAAgBxb,EAAW,IAAM,CACrC,GAAI,CAACmb,EAAAA,GAAa,CAACD,EAAW,MAAO,CAAC9Q,EAAE,EAAEkB,EAAE,CAAA,EAC5C,MAAMmQ,EAAMP,EAAUQ,sBAAAA,EACtB,MAAO,CAAEtR,EAAGqR,EAAIrR,EAAIqR,EAAIlQ,MAAM,EAAI,GAAID,EAAGmQ,EAAInQ,EAAImQ,EAAIjQ,OAAS,CAAA,CAChE,CAAC,EAGD,IAAImP,EACJ,MAAMgB,EAAY5Z,GAAkB,CAC9B4Y,EAAIiB,SAAS7Z,EAAE8Z,MAAc,IACjC7V,SAAS0S,oBAAoB,QAASiD,CAAQ,EAC9CP,EAAgB,EAAK,EACvB,EAEAtb,OAAAA,EAAa,IAAM,CACbqb,KACFnV,SAASM,iBAAiB,cAAeqV,CAAQ,CAErD,CAAC,EAEDtI,EACCvK,GAAM,CAAA,IAACE,OAAK,CAAA,OAAEhD,SAAS8V,cAAc,MAAM,CAAE,EAAA,IAAAvI,UAAA,CAAA,OAC3CwI,GAAA,IAAA,CAAA,CAAAZ,GAAS,EAAA,IAAA,IAAA,CAAA,IAAAnG,EAAAgH,GAAAA,EAAA/G,EAAAD,EAAAhL,WAAAiS,EACEtB,EAAG,cAAAsB,GAAA,WAAAlB,GAAAkB,EAAAjH,CAAA,EAAH2F,EAAG3F,EAAAkH,GAAAjH,EAAA,QAwBAoG,CAAY,EAAApR,EAAAwJ,GAAA,CAAA,IAAA0I,EArBb,GAAGX,EAAAA,EAAgBpR,CAAC,KAAIgS,EACzB,GAAGZ,IAAgBlQ,CAAC,KAAI6Q,OAAAA,IAAA1I,EAAA1R,GAAAsa,GAAArH,EAAA,OAAAvB,EAAA1R,EAAAoa,CAAA,EAAAC,IAAA3I,EAAAvO,GAAAmX,GAAArH,EAAA,MAAAvB,EAAAvO,EAAAkX,CAAA,EAAA3I,CAAA,EAAA,CAAA1R,EAAAgS,OAAA7O,EAAA6O,MAAAA,CAAA,EAAAiB,CAAA,GAAA,CA0BpC,CAAA,CAAA,CAGL,EAAC0C,EAAA,CAAA,cAAA,OAAA,CAAA,4qCC7QD,MAAM4E,GAAsB,MAOfC,GAA+BA,CAAC,CAAEC,YAAAA,EAAaC,SAAAA,CAAS,IAAM,CACzE,KAAM,CAACC,EAAMC,CAAO,EAAIxd,EAAa,CAAC,EAGhCyd,EAAS5c,EAAW,IACZwc,EAAAA,EAEKK,OAAO,CAACC,EAAGrC,IAAQgC,EAASM,SAAStC,CAAG,CAAC,EAExBoC,OAAQ7C,GAA4BA,IAAU,IAAI,EAEhEgD,OAAO,CAACC,EAAK3d,IAAM2d,EAAM3d,EAAE,CAAC,IAAMgd,GAAqB,CAAC,CAE7E,EAED,OAAA,IAAA,CAAA,IAAAxS,EAAAN,KAAAO,EAAAD,EAAAE,WAAAiK,EAAAlK,EAAA6K,YAAAD,EAAAV,EAAAW,YAAAxB,OAAAA,EAAArJ,EAAA,IAUO,IAAI6S,EAAAA,EAAWF,KAAQzG,QAAQ,CAAC,CAAC,EAAE,EAAAtB,EAAA8C,QAYX,IAAMkF,EAAQC,EAAAA,CAAQ,EAAC9S,CAAA,GAAA,CAmBxD,EAAE4N,EAAA,CAAA,OAAA,CAAA,ECxDK,MAAMwF,GAA6CA,CAAC,CAAEC,SAAAA,EAAUC,UAAAA,CAAU,IAAM,CAErF,KAAM,CAACC,EAASC,CAAU,EAAIne,EAA2B,CAAC,CACxDsb,IAAK,EACLrQ,EAAG,IACHkB,EAAG,IACHlM,MAAO,EACPua,SAAU,IAAA,EAEZ,CACEc,IAAK,EACLrQ,EAAG,IACHkB,EAAG,IACHlM,MAAO,EACPua,SAAU,IAAA,CACX,CAAC,EAII4D,MAAmBC,IAEzBH,EAAAA,EAAU9I,QAAQ/W,GAAK,CAChB+f,EAAaE,IAAIjgB,EAAEid,GAAG,GAAG8C,EAAatZ,IAAIzG,EAAEid,IAAKtb,EAAa3B,EAAE4B,KAAK,CAAC,CAC7E,CAAC,EAGD,MAAMob,EAASA,CAACC,EAAaiD,IAA8B,CACzDJ,EAAWhd,GAGF,CAAC,GAFQA,EAAK0E,IAAI4N,GAAKA,EAAE6H,MAAQA,EAAM,CAAE,GAAG7H,EAAG,GAAG8K,CAAAA,EAAU9K,CAAC,CAElD,EAAE+K,KAAK,CAACpgB,EAAGC,IAAMD,EAAE+N,EAAI9N,EAAE8N,CAAC,CAC7C,CACH,EAGM,CAACyO,EAAW6D,CAAY,EAAIze,EAAqC,CAAC,KAAM,KAAM,KAAM,IAAI,CAAC,EACzF6a,EAAQA,CAAC6D,EAAeze,IAA0B,CAEtDwe,EAAatd,GAAQ,CACnB,MAAMwd,EAAM,CAAC,GAAGxd,CAAI,EACpBwd,OAAAA,EAAID,CAAK,EAAIze,EACN0e,CACT,CAAC,CACH,EAGA,IAAI7K,EAAU,GACd,MAAM8K,EAAOA,IAAM,CAEjB,GAAI9K,EAAS,OACbA,EAAU,GAqBV7F,EAnBeI,GAAe,CAE5B,MAAMwQ,EAASjE,EAAAA,EAEf,GAAIiE,EAAO,CAAC,IAAM,KAAM,CACtB,MAAMnI,EAAMmI,EAAO,CAAC,EAAE,CAAC,EAAA,EACjBze,EAASye,EAAO,CAAC,EAAE,CAAC,EAC1Bze,EAAOsW,EAAMsH,EAAAA,EAAa3P,CAAE,CAE9B,CAEA,GAAIwQ,EAAO,CAAC,IAAM,KAAM,CACtB,MAAMnI,EAAMmI,EAAO,CAAC,EAAE,CAAC,EAAA,EACjBze,EAASye,EAAO,CAAC,EAAE,CAAC,EAC1Bze,EAAOsW,EAAMuH,EAAAA,EAAc5P,CAAE,CAC/B,CACA,OAAOyF,CACT,CAEa,CACf,EAGAnT,OAAAA,EAAa,IAAM,CACjB,MAAMke,EAASjE,EAAAA,EACTkE,EAAU,CAACD,EAAO,CAAC,EAAGA,EAAO,CAAC,CAAC,EACjCC,EAAQ,CAAC,IAAM,MAAQd,EAAAA,IAAe,GACjCc,EAAQ,CAAC,IAAM,MAAQb,EAAAA,IAAgB,EADHW,EAAAA,EAExC9K,EAAU,EACjB,CAAC,EAED,CAAAI,EAGKkJ,GAAK,CAACC,YAAazC,EAAW0C,SAAU,CAAC,EAAE,CAAC,CAAA,CAAC,EAAApJ,EAG7ChP,GAAG,CAAA,IAACiP,MAAI,CAAA,OAAE+J,EAAAA,CAAS,EAAA9J,SAChBzP,GAAS,CAET,IAAIoa,EAAMX,EAAajL,IAAIxO,EAAK2W,GAAG,EACnC,OAAKyD,IACHA,EAAM/e,EAAa2E,EAAK1E,KAAK,EAC7Bme,EAAatZ,IAAIH,EAAK2W,IAAKyD,CAAG,GAEhC7K,EACGwF,GAAM,CAAA,IAAC4B,KAAG,CAAA,OAAE3W,EAAK2W,GAAG,EAAA,IAAE1B,UAAQ,CAAA,OAAEjV,EAAKsG,CAAC,EAAA,IAAG6O,UAAQ,CAAA,OAAEnV,EAAKwH,CAAC,EAAA,IAAElM,OAAK,CAAA,OAAE0E,EAAK1E,KAAK,EAAA,IAC3Eua,UAAQ,CAAA,OAAE7V,EAAK6V,QAAQ,EACvBa,OAAAA,EAAgBR,MAAAA,EAAcD,UAAAA,EAC9BR,YAAa2E,CAAAA,CAAG,CAEtB,CAAA,CAAC,CAAA,CAGT,6QC7GA,MAAMC,GAA0CA,CAAC,CAAClY,EAAAA,CAAC,IAO/CoN,EAEShP,GAAG,CAAA,IAACiP,MAAI,CAAA,OAAE8K,MAAMC,KAAK,CAAChI,OAAQ,EAAA,EAAK,CAACyG,EAAE7b,IAAOA,EAAIqd,GAAMA,GAAO,IAAMrY,EAAAA,EAAO,EAAG,CAAC,EAAAsN,SAC3E+E,GAAM,CAEH,GAAIA,EAAK,IAAK,OAAO,KACrB,MAAMiG,EAAMjG,EAAKnJ,KAAK4C,GAAK,IAGrB3H,EAAIsI,IAAK8L,KAAOrP,KAAK2C,IAAIyM,CAAG,EAClC,OAAA,IAAA,CAAA,IAAAzU,EAAAN,GAAAA,EAAAU,OAAAA,EAAAJ,EAAA,KAAiBM,CAAC,EAAAF,EAAAJ,EAAA,KAAeM,CAAC,EAAAN,CAAA,GAAA,CACtC,CAAA,CAAC,EAMJ2U,GAAyCA,CAAC,CAAEC,YAAAA,CAAY,IAAM,CAEvE,KAAM,CAACzY,EAAG0Y,CAAI,EAAIxf,EAAa,CAAC,EAE1Byf,EAAa7c,GAAkB,CACjCA,EAAEkW,eAAAA,EACF,IAAI4G,EAAS9c,EAAE+c,QAEf,MAAM3G,EAAUpW,GAAkB,CAC9B,MAAMgd,EAAShd,EAAE+c,QAAUD,EAC3BA,EAAS9c,EAAE+c,QAGX,MAAME,EAAO7P,KAAK9E,IAAI,EAAG8E,KAAK7E,IAAI,EAAGrE,EAAAA,EAAM8Y,EAAS,IAAK,CAAC,EAC1DJ,EAAKK,CAAI,EAGT,MAAMC,EAAOrI,GAAcoI,EAC3BN,EAAYO,CAAI,CACpB,EAEM7G,EAAUA,IAAM,CAClBpS,SAAS0S,oBAAoB,cAAeP,CAAM,EAClDnS,SAAS0S,oBAAoB,YAAaN,CAAO,CACrD,EAEApS,SAASM,iBAAiB,cAAe6R,CAAM,EAC/CnS,SAASM,iBAAiB,YAAa8R,CAAO,CAClD,EAEA,OAAA,IAAA,CAAA,IAAArO,EAAAyJ,KAAAzJ,OAAAA,EAAAC,WAAAD,EAAA4O,cACiEiG,EAASxL,EAAArJ,EAAAsJ,EAErE8K,GAAS,CAAClY,EAAAA,CAAAA,CAAI,EAAA,IAAA,EAAA8D,CAAA,GAAA,CAEtB,EAAC2N,EAAA,CAAA,aAAA,CAAA,2LChDK,MAAMwH,GAAuBA,IAAM,CAExC,KAAM,CAACC,EAAeC,CAAgB,EAAIjgB,EAAa,EAAK,EACtD,CAACkgB,EAAmBC,CAAoB,EAAIngB,EAAa,CAAC,EAC1D,CAACogB,EAAeC,CAAgB,EAAIrgB,EAAa,EAAE,EACnD,CAACwP,EAAU8Q,CAAW,EAAItgB,EAAa,CAAC,EACxC,CAACugB,EAASC,CAAU,EAAIxgB,EAAa,CAAC,EACtC,CAACygB,EAAUC,CAAW,EAAI1gB,EAAa,CAAC,EACxC,CAACkR,EAASyP,CAAU,EAAI3gB,EAAa,EAAE,EAIvCyT,EAAIzD,KAAK4Q,IAAI,GAAG,CAAC,EACvB3S,EAASI,GAAe,CACtB,MAAMqO,EAASsD,IAAkBE,EAAAA,EAAsB,GAEvD,IAAIlM,GADYoM,EAAAA,EACM1D,GAAUjJ,GAAKpF,EAAKqO,EAC1C2D,OAAAA,EAAiBrQ,KAAK9E,IAAI8I,EAAM,CAAC,CAAC,EAC3B,EACT,CAAC,EACD,MAAM6M,EAAmBhgB,EAAW,IAAM0N,GAA0B6R,EAAAA,CAAe,CAAC,EAI9EU,EAAiBjgB,EAAW,IAAMqQ,IAAU4F,QAAQ,CAAC,CAAC,EAE9D,OAAA,IAAA,CAAA,IAAAnM,EAAAN,KAAAO,EAAAD,EAAAE,WAAAD,OAAAA,EAAAC,WAAAoJ,EAAArJ,EAAAsJ,EASK3J,GAAS,CAACC,SAAUgF,CAAAA,CAAQ,EAAA,IAAA,EAAAyE,EAAArJ,EAAAsJ,EAC5B9J,GAAc,CAAA,CAAA,EAAA,IAAA,EAAA6J,EAAArJ,EAAAsJ,EAGdc,GACC,CACAxF,SAAAA,EACA4B,UAAWyP,EACX3P,QAAAA,EAEAT,eAAgB+P,EAChBtO,kBAAmBA,IAAM,CAAC,EAC1BC,iBAAkBuO,EAClBzO,gBAAiB0O,CAAAA,CAAU,EAAA,IAAA,EAAA1M,EAAArJ,EAAAsJ,EAE5BoL,GAAU,CAACC,YAAaY,CAAAA,CAAoB,EAAA,IAAA,EAAAlM,EAAArJ,EAAAsJ,EAI5CuC,GAAO,CAACxL,EAAG,MAAOkB,EAAG,MAAOuK,IAAKmK,CAAAA,CAAgB,EAAA,IAAA,EAAA5M,EAAArJ,EAAAsJ,EAEjDuC,GAAO,CAACxL,EAAG,MAAOkB,EAAG,MAAOuK,IAAK,MAAA,CAAM,EAAA,IAAA,EAAAzC,EAAArJ,EAAAsJ,EAEvCuC,GAAO,CAACxL,EAAG,MAAOkB,EAAG,MAAOuK,IAAKmK,CAAAA,CAAgB,EAAA,IAAA,EAAA5M,EAAArJ,EAAAsJ,EAEjDuC,GAAO,CAACxL,EAAG,MAAOkB,EAAG,MAAOuK,IAAKoK,CAAAA,CAAc,EAAA,IAAA,EAAA7M,EAAArJ,EAAAsJ,EAG/C6C,GAAS,CAAC9O,IAAG,OAAQsL,GAAI,IAAKyD,KAAMyJ,EAAUxJ,UAAW,CAAC,EAAG,GAAG,CAAA,CAAC,EAAA,IAAA,EAAAhD,EAAArJ,EAAAsJ,EACjE6C,GAAS,CAAC9O,IAAG,OAAQsL,GAAI,IAAKyD,KAAMuJ,EAAUtJ,UAAW,CAAC,EAAE,GAAI,CAAA,CAAC,EAAA,IAAA,EAAAhD,EAAArJ,EAAAsJ,EAEjEwD,GAAK,CAACC,SAAUyI,CAAAA,CAAa,EAAA,IAAA,EAAAnM,EAAArJ,EAAAsJ,EAC7B6D,GAAS,CAACC,SAAWK,GAAS4H,EAAiB5H,CAAI,CAAA,CAAC,EAAA,IAAA,EAAApE,EAAArJ,EAAAsJ,EACpDsE,GAAU,CAACC,aAAesI,GAAST,EAAYS,EAAOzS,EAAc,CAAA,CAAC,EAAA,IAAA,EAAA2F,EAAArJ,EAAAsJ,EACrE6J,GAAY,CAACC,SAAUyC,EAAUxC,UAAWsC,CAAAA,CAAO,EAAA,IAAA,EAAAtM,EAAArJ,EAAAsJ,EAEnDW,GAAK,CAAC/B,QAASA,IAAOoN,IAAsB,GAAKF,EAAAA,EAAkB/U,EAAG,IAAKkB,EAAG,GAAI4G,EAAG,EAAGC,EAAG,CAAA,CAAC,EAAA,IAAA,EAAAiB,EAAAtJ,EAAAuJ,EAE9F5J,GAAU,CAAA,CAAA,EAAA,IAAA,EAAAK,CAAA,GAAA,CAEb,+JCrFO,MAAMqW,GAA+BA,CAAC,CAAE/Y,IAAAA,EAAKgZ,MAAAA,EAAOC,SAAAA,EAAUC,KAAAA,CAAK,IAAM,CAC5E,KAAM,CAACC,EAASC,CAAO,EAAIF,EAErBG,EAAoB1e,GAAkB,CACnC4Y,EAAIiB,SAAS7Z,EAAE8Z,MAAc,IAC9B7K,QAAQC,IAAI,aAAa,EACzBuP,EAAQ,EAAK,EAErB,EAEA,IAAI7F,EAGJ1a,OAAAA,EAAQ,IAAM,CAEVH,EAAa,IAAM,CAEf,IAAImS,EAAUsO,EAAAA,EACVtO,EACAjM,SAASM,iBAAiB,QAASma,CAAgB,EAGnDza,SAAS0S,oBAAoB,QAAS+H,CAAgB,CAE9D,CAAC,CACL,CAAC,GAED,IAAA,CAAA,IAAA3W,EAAAN,GAAAA,EAAAO,EAAAD,EAAAE,WAAAiK,EAAAlK,EAAAC,WAAA2K,EAAAV,EAAAW,YAAAC,EAAAF,EAAA3K,WAAA8K,EAAAD,EAAA7K,WAAAgL,EAAAF,EAAAF,YAAAI,EAAAJ,YAAAA,IAAAK,EAAAN,EAAAC,YAAA1K,EAAAJ,EAAA,KACS,GAAG1C,CAAG,QAAQ,EAAA,IAAA0T,EACTH,EAAG,cAAAG,GAAA,WAAAC,GAAAD,EAAA/Q,CAAA,EAAH4Q,EAAG5Q,EAAAkK,EAAAwD,QACwB,IAAM+I,EAAQ,EAAK,EAACpN,EAAAyB,EAE1CuL,EAAKpL,CAAA,EAAA5B,EAAA6B,EAAA5B,EAGXgN,EAAQ,CAAA,CAAA,CAAA,EAAApW,EAAAyW,GAAAC,GAAA7W,EAPyB,YAAYyW,EAAAA,EAAY,QAAU,MAAM,IAAGG,CAAA,CAAA,EAAA5W,CAAA,GAAA,CAY7F,EAAC4N,EAAA,CAAA,OAAA,CAAA,yZCvCM,MAAMkJ,GAA2CA,CAAC,CAAEjZ,KAAAA,EAAMkZ,aAAAA,EAAcC,WAAAA,EAAYC,MAAAA,CAAM,IAAM,CACnG,KAAM,CAACC,EAAUC,CAAW,EAAI9hB,EAAa,EAAK,EAC5C,CAAC+hB,EAAgBC,CAAiB,EAAIhiB,EAAa,EAAK,EACxD,CAACiiB,EAAWC,CAAY,EAAIliB,EAAa,EAAK,EAGpD,IAAIwb,EAGJ1a,OAAAA,EAAQ,IAAM,CACV+F,SAASM,iBAAiB,QAAUvE,GAAM,CACjC4Y,EAAIiB,SAAS7Z,EAAE8Z,MAAc,GAC9BoF,EAAY,EAAK,CAEzB,CAAC,CACL,CAAC,EAED,EAAA,IAAA,CAAA,IAAAnX,EAAAN,KAAAO,EAAAD,EAAAE,WAAAiK,EAAAlK,EAAA6K,YAAAD,EAAAV,EAAAjK,WAAA6K,EAAAF,EAAAC,YAAAE,EAAAD,EAAAD,YAAAkG,EACqCH,EAAG,cAAAG,GAAA,WAAAC,GAAAD,EAAAhR,CAAA,EAAH6Q,EAAG7Q,EAAAC,EAAA0N,QACD,IAAMwJ,EAAY,CAACD,GAAU,EAACrM,EAAA8C,QAIC,IAAM,CAAC0J,EAAkB,EAAI,EAAGF,EAAY,EAAK,CAAC,EAAC/W,EAAA2K,EAAA,WAIxEgM,CAAY,EAAA3W,EAAA2K,EAAA,OAAQlN,CAAI,EAAAmN,EAAA2C,QAMV,IAAM,CAAC4J,EAAa,EAAI,EAAGJ,EAAY,EAAK,CAAC,EAAChX,EAAA,IAAAqX,GAAArN,EAXzF,gBAAgB+M,IAAa,OAAS,EAAE,EAAE,CAAA,EAAAlX,CAAA,GAAA,EAAAuJ,EAiBzD8M,GAAK,CAAC/Y,IAAG,aAAcgZ,MAAK,aAAcC,SAAUS,EAAYR,KAAM,CAACY,EAAgBC,CAAiB,CAAA,CAAC,EAAA9N,EACzG8M,GAAK,CAAC/Y,IAAG,QAASgZ,MAAK,QAASC,SAAUU,EAAOT,KAAM,CAACc,EAAWC,CAAY,CAAA,CAAC,CAAA,CAEzF,EAAC3J,EAAA,CAAA,OAAA,CAAA,ECrDD,MAAA6J,GAAe,g7CCER,MAAMC,GAA4BA,IACrChY,GAAAA,EAkBSiY,GAAuBA,IAChCjO,GAAAA,+DCdJ,SAASkO,IAAM,CAEbzhB,OAAAA,EAAQ,IAAM,CAEZ+K,GAAAA,EAEAkB,GAAAA,EAEAW,GAAAA,CACF,CAAC,EAED,CAAAwG,EAEKuN,GAAa,CAACjZ,KAAM4Z,GAAWV,aAAY,8BAA+BC,WAAYU,GAAgBT,MAAOU,EAAAA,CAAS,EAAApO,EACtH6L,GAAS,CAAA,CAAA,GAAA,IAAA,CAAA,IAAApV,EAAAN,GAAAA,EAAAM,OAAAA,EAAA2N,QAC4C,IAAMkK,SAASC,OAAAA,EAAQ9X,CAAA,IAAA,CAGnF,CAEmB4N,EAAA,CAAA,OAAA,CAAA,ECvBnB,MAAM5Y,GAAOkH,SAASgV,eAAe,MAAM,EAE3C5V,GAAO,IAAAiO,EAAOqO,GAAG,CAAA,CAAA,EAAK5iB,EAAK","x_google_ignoreList":[0,1]}